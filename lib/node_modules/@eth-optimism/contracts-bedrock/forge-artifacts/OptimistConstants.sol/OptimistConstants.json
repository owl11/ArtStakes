{
  "abi": [],
  "bytecode": {
    "object": "0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a",
    "sourceMap": "192:269:122:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;192:269:122;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a",
    "sourceMap": "192:269:122:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"OptimistConstants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for storing Optimist related constants that are shared in multiple contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/op-nft/libraries/OptimistConstants.sol\":\"OptimistConstants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x6eebe1db87f8a5de79bf8af9120e5b0cc6a9b51d8d86e6461cdb6bc52a1dde21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff03d9ebffd48a84f0fc7d381ba569843e53c7960b91ec00178ee14c7dcf833c\",\"dweb:/ipfs/QmXit8hX46BHAzP9Wtk3AEkShTw6qqNd5nnQzceEvBdhVr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/periphery/op-nft/libraries/OptimistConstants.sol": "OptimistConstants"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/periphery/op-nft/libraries/OptimistConstants.sol": {
        "keccak256": "0x6eebe1db87f8a5de79bf8af9120e5b0cc6a9b51d8d86e6461cdb6bc52a1dde21",
        "urls": [
          "bzz-raw://ff03d9ebffd48a84f0fc7d381ba569843e53c7960b91ec00178ee14c7dcf833c",
          "dweb:/ipfs/QmXit8hX46BHAzP9Wtk3AEkShTw6qqNd5nnQzceEvBdhVr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "notice": "Library for storing Optimist related constants that are shared in multiple contracts."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "title": "OptimistConstants"
  },
  "ast": {
    "absolutePath": "contracts/periphery/op-nft/libraries/OptimistConstants.sol",
    "id": 47441,
    "exportedSymbols": {
      "OptimistConstants": [
        47440
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:430:122",
    "nodes": [
      {
        "id": 47431,
        "nodeType": "PragmaDirective",
        "src": "32:23:122",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 47440,
        "nodeType": "ContractDefinition",
        "src": "192:269:122",
        "nodes": [
          {
            "id": 47439,
            "nodeType": "VariableDeclaration",
            "src": "336:122:122",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 47433,
              "nodeType": "StructuredDocumentation",
              "src": "224:107:122",
              "text": " @notice Attestation key issued by OptimistInviter allowing the attested account to mint."
            },
            "mutability": "constant",
            "name": "OPTIMIST_CAN_MINT_FROM_INVITE_ATTESTATION_KEY",
            "nameLocation": "362:45:122",
            "scope": 47440,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47434,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "336:7:122",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e76697465",
                  "id": 47437,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "426:31:122",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e36ca07f085876c3aafb3210ed63e326268e1e0da5f31df60d5b064c132175b4",
                    "typeString": "literal_string \"optimist.can-mint-from-invite\""
                  },
                  "value": "optimist.can-mint-from-invite"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e36ca07f085876c3aafb3210ed63e326268e1e0da5f31df60d5b064c132175b4",
                    "typeString": "literal_string \"optimist.can-mint-from-invite\""
                  }
                ],
                "id": 47436,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "418:7:122",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 47435,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "418:7:122",
                  "typeDescriptions": {}
                }
              },
              "id": 47438,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "418:40:122",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OptimistConstants",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 47432,
          "nodeType": "StructuredDocumentation",
          "src": "57:133:122",
          "text": " @title  OptimistConstants\n @notice Library for storing Optimist related constants that are shared in multiple contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47440
        ],
        "name": "OptimistConstants",
        "nameLocation": "200:17:122",
        "scope": 47441,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 122
}