{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalHash",
          "type": "bytes32"
        }
      ],
      "name": "MessagePassed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawerBalanceBurnt",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSAGE_VERSION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initiateWithdrawal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "sentMessages",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b5060016080819052600060a081905260c082905281610a2061004a83396000610403015260006103da015260006103b10152610a206000f3fe6080604052600436106100695760003560e01c806382e3702d1161004357806382e3702d146100f6578063c2b3e5ac14610136578063ecc704281461014957600080fd5b80633f827a5a1461009257806344df8e70146100bf57806354fd4d50146100d457600080fd5b3661008d5761008b33620186a0604051806020016040528060008152506101ae565b005b600080fd5b34801561009e57600080fd5b506100a7600181565b60405161ffff90911681526020015b60405180910390f35b3480156100cb57600080fd5b5061008b610372565b3480156100e057600080fd5b506100e96103aa565b6040516100b6919061068c565b34801561010257600080fd5b506101266101113660046106a6565b60006020819052908152604090205460ff1681565b60405190151581526020016100b6565b61008b6101443660046106ee565b6101ae565b34801561015557600080fd5b506101a06001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b6040519081526020016100b6565b60006102446040518060c001604052806102086001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b815233602082015273ffffffffffffffffffffffffffffffffffffffff871660408201523460608201526080810186905260a00184905261044d565b600081815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055905073ffffffffffffffffffffffffffffffffffffffff8416336102df6001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b7f02a52367d10742d8032712c1bb8e0144ff1ec5ffda1ed7d70bb05a27449550543487878760405161031494939291906107f2565b60405180910390a45050600180547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168301167fffff0000000000000000000000000000000000000000000000000000000000009091161790555050565b4761037c8161049a565b60405181907f7967de617a5ac1cc7eba2d6f37570a0135afa950d8bb77cdd35f0d0b4e85a16f90600090a250565b60606103d57f00000000000000000000000000000000000000000000000000000000000000006104c9565b6103fe7f00000000000000000000000000000000000000000000000000000000000000006104c9565b6104277f00000000000000000000000000000000000000000000000000000000000000006104c9565b60405160200161043993929190610822565b604051602081830303815290604052905090565b80516020808301516040808501516060860151608087015160a0880151935160009761047d979096959101610898565b604051602081830303815290604052805190602001209050919050565b806040516104a790610606565b6040518091039082f09050801580156104c4573d6000803e3d6000fd5b505050565b60608160000361050c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561053657806105208161091e565b915061052f9050600a83610985565b9150610510565b60008167ffffffffffffffff811115610551576105516106bf565b6040519080825280601f01601f19166020018201604052801561057b576020820181803683370190505b5090505b84156105fe57610590600183610999565b915061059d600a866109b0565b6105a89060306109c4565b60f81b8183815181106105bd576105bd6109dc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506105f7600a86610985565b945061057f565b949350505050565b600880610a0c83390190565b60005b8381101561062d578181015183820152602001610615565b8381111561063c576000848401525b50505050565b6000815180845261065a816020860160208601610612565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061069f6020830184610642565b9392505050565b6000602082840312156106b857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561070357600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461072757600080fd5b925060208401359150604084013567ffffffffffffffff8082111561074b57600080fd5b818601915086601f83011261075f57600080fd5b813581811115610771576107716106bf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156107b7576107b76106bf565b816040528281528960208487010111156107d057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b8481528360208201526080604082015260006108116080830185610642565b905082606083015295945050505050565b60008451610834818460208901610612565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610870816001850160208a01610612565b6001920191820152835161088b816002840160208801610612565b0160020195945050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a08301526108e360c0830184610642565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361094f5761094f6108ef565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261099457610994610956565b500490565b6000828210156109ab576109ab6108ef565b500390565b6000826109bf576109bf610956565b500690565b600082198211156109d7576109d76108ef565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe608060405230fffea164736f6c634300080f000a",
    "sourceMap": "715:3871:65:-:0;;;2360:32;;;;;;;;;-1:-1:-1;2381:1:65;762:22:211;;;;2384:1:65;794:22:211;;;;826;;;;2381:1:65;715:3871;;2384:1;715:3871;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100695760003560e01c806382e3702d1161004357806382e3702d146100f6578063c2b3e5ac14610136578063ecc704281461014957600080fd5b80633f827a5a1461009257806344df8e70146100bf57806354fd4d50146100d457600080fd5b3661008d5761008b33620186a0604051806020016040528060008152506101ae565b005b600080fd5b34801561009e57600080fd5b506100a7600181565b60405161ffff90911681526020015b60405180910390f35b3480156100cb57600080fd5b5061008b610372565b3480156100e057600080fd5b506100e96103aa565b6040516100b6919061068c565b34801561010257600080fd5b506101266101113660046106a6565b60006020819052908152604090205460ff1681565b60405190151581526020016100b6565b61008b6101443660046106ee565b6101ae565b34801561015557600080fd5b506101a06001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b6040519081526020016100b6565b60006102446040518060c001604052806102086001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b815233602082015273ffffffffffffffffffffffffffffffffffffffff871660408201523460608201526080810186905260a00184905261044d565b600081815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055905073ffffffffffffffffffffffffffffffffffffffff8416336102df6001547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b7f02a52367d10742d8032712c1bb8e0144ff1ec5ffda1ed7d70bb05a27449550543487878760405161031494939291906107f2565b60405180910390a45050600180547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082168301167fffff0000000000000000000000000000000000000000000000000000000000009091161790555050565b4761037c8161049a565b60405181907f7967de617a5ac1cc7eba2d6f37570a0135afa950d8bb77cdd35f0d0b4e85a16f90600090a250565b60606103d57f00000000000000000000000000000000000000000000000000000000000000006104c9565b6103fe7f00000000000000000000000000000000000000000000000000000000000000006104c9565b6104277f00000000000000000000000000000000000000000000000000000000000000006104c9565b60405160200161043993929190610822565b604051602081830303815290604052905090565b80516020808301516040808501516060860151608087015160a0880151935160009761047d979096959101610898565b604051602081830303815290604052805190602001209050919050565b806040516104a790610606565b6040518091039082f09050801580156104c4573d6000803e3d6000fd5b505050565b60608160000361050c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561053657806105208161091e565b915061052f9050600a83610985565b9150610510565b60008167ffffffffffffffff811115610551576105516106bf565b6040519080825280601f01601f19166020018201604052801561057b576020820181803683370190505b5090505b84156105fe57610590600183610999565b915061059d600a866109b0565b6105a89060306109c4565b60f81b8183815181106105bd576105bd6109dc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506105f7600a86610985565b945061057f565b949350505050565b600880610a0c83390190565b60005b8381101561062d578181015183820152602001610615565b8381111561063c576000848401525b50505050565b6000815180845261065a816020860160208601610612565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061069f6020830184610642565b9392505050565b6000602082840312156106b857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561070357600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461072757600080fd5b925060208401359150604084013567ffffffffffffffff8082111561074b57600080fd5b818601915086601f83011261075f57600080fd5b813581811115610771576107716106bf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156107b7576107b76106bf565b816040528281528960208487010111156107d057600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b8481528360208201526080604082015260006108116080830185610642565b905082606083015295945050505050565b60008451610834818460208901610612565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610870816001850160208a01610612565b6001920191820152835161088b816002840160208801610612565b0160020195945050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a08301526108e360c0830184610642565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361094f5761094f6108ef565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261099457610994610956565b500490565b6000828210156109ab576109ab6108ef565b500390565b6000826109bf576109bf610956565b500690565b600082198211156109d7576109d76108ef565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe608060405230fffea164736f6c634300080f000a",
    "sourceMap": "715:3871:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:68;2537:10;903:7;2576:9;;;;;;;;;;;;2518:18;:68::i;:::-;715:3871;;;;;973:42;;;;;;;;;;;;1014:1;973:42;;;;;188:6:283;176:19;;;158:38;;146:2;131:18;973:42:65;;;;;;;;2959:154;;;;;;;;;;;;;:::i;972:372:211:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1086:44:65:-;;;;;;;;;;-1:-1:-1;1086:44:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1367:14:283;;1360:22;1342:41;;1330:2;1315:18;1086:44:65;1202:187:283;3355:774:65;;;;;;:::i;:::-;;:::i;4450:134::-;;;;;;;;;;;;4551:8;;;;4913:18:96;4910:30;;4450:134:65;;;;2979:25:283;;;2967:2;2952:18;4450:134:65;2833:177:283;3355:774:65;3494:22;3519:297;3555:251;;;;;;;;3608:14;4551:8;;;;4913:18:96;4910:30;;4450:134:65;3608:14;3555:251;;3648:10;3555:251;;;;;;;;;;;3716:9;3555:251;;;;;;;;;;;;;;;3519:22;:297::i;:::-;3827:12;:28;;;;;;;;;;:35;;;;3858:4;3827:35;;;3494:322;-1:-1:-1;3878:189:65;;;3933:10;3905:14;4551:8;;;;4913:18:96;4910:30;;4450:134:65;3905:14;3878:189;3978:9;4001;4024:5;4043:14;3878:189;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;4104:8:65;4102:10;;;;;;;;;;;;;;;;-1:-1:-1;;3355:774:65:o;2959:154::-;3012:21;3043:17;3012:21;3043:8;:17::i;:::-;3075:31;;3098:7;;3075:31;;;;;2984:129;2959:154::o;972:372:211:-;1012:13;1118:31;1135:13;1118:16;:31::i;:::-;1196;1213:13;1196:16;:31::i;:::-;1274;1291:13;1274:16;:31::i;:::-;1080:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1037:300;;972:372;:::o;4584:281:97:-;4775:9;;4786:10;;;;;4798;;;;;4810:9;;;;4821:12;;;;4835:8;;;;4764:80;;4695:7;;4764:80;;4775:9;;4786:10;4835:8;4764:80;;:::i;:::-;;;;;;;;;;;;;4737:121;;;;;;4718:140;;4584:281;;;:::o;224:86:90:-;292:7;273:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;224:86;:::o;392:703:250:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:250;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:250;;-1:-1:-1;837:2:250;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:250;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:250;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:250;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:250:o;-1:-1:-1:-;;;;;;;;:::o;207:258:283:-;279:1;289:113;303:6;300:1;297:13;289:113;;;379:11;;;373:18;360:11;;;353:39;325:2;318:10;289:113;;;420:6;417:1;414:13;411:48;;;455:1;446:6;441:3;437:16;430:27;411:48;;207:258;;;:::o;470:317::-;512:3;550:5;544:12;577:6;572:3;565:19;593:63;649:6;642:4;637:3;633:14;626:4;619:5;615:16;593:63;:::i;:::-;701:2;689:15;706:66;685:88;676:98;;;;776:4;672:109;;470:317;-1:-1:-1;;470:317:283:o;792:220::-;941:2;930:9;923:21;904:4;961:45;1002:2;991:9;987:18;979:6;961:45;:::i;:::-;953:53;792:220;-1:-1:-1;;;792:220:283:o;1017:180::-;1076:6;1129:2;1117:9;1108:7;1104:23;1100:32;1097:52;;;1145:1;1142;1135:12;1097:52;-1:-1:-1;1168:23:283;;1017:180;-1:-1:-1;1017:180:283:o;1394:184::-;1446:77;1443:1;1436:88;1543:4;1540:1;1533:15;1567:4;1564:1;1557:15;1583:1245;1669:6;1677;1685;1738:2;1726:9;1717:7;1713:23;1709:32;1706:52;;;1754:1;1751;1744:12;1706:52;1793:9;1780:23;1843:42;1836:5;1832:54;1825:5;1822:65;1812:93;;1901:1;1898;1891:12;1812:93;1924:5;-1:-1:-1;1976:2:283;1961:18;;1948:32;;-1:-1:-1;2031:2:283;2016:18;;2003:32;2054:18;2084:14;;;2081:34;;;2111:1;2108;2101:12;2081:34;2149:6;2138:9;2134:22;2124:32;;2194:7;2187:4;2183:2;2179:13;2175:27;2165:55;;2216:1;2213;2206:12;2165:55;2252:2;2239:16;2274:2;2270;2267:10;2264:36;;;2280:18;;:::i;:::-;2414:2;2408:9;2476:4;2468:13;;2319:66;2464:22;;;2488:2;2460:31;2456:40;2444:53;;;2512:18;;;2532:22;;;2509:46;2506:72;;;2558:18;;:::i;:::-;2598:10;2594:2;2587:22;2633:2;2625:6;2618:18;2673:7;2668:2;2663;2659;2655:11;2651:20;2648:33;2645:53;;;2694:1;2691;2684:12;2645:53;2750:2;2745;2741;2737:11;2732:2;2724:6;2720:15;2707:46;2795:1;2790:2;2785;2777:6;2773:15;2769:24;2762:35;2816:6;2806:16;;;;;;;1583:1245;;;;;:::o;3015:433::-;3246:6;3235:9;3228:25;3289:6;3284:2;3273:9;3269:18;3262:34;3332:3;3327:2;3316:9;3312:18;3305:31;3209:4;3353:46;3394:3;3383:9;3379:19;3371:6;3353:46;:::i;:::-;3345:54;;3435:6;3430:2;3419:9;3415:18;3408:34;3015:433;;;;;;;:::o;3453:960::-;3882:3;3920:6;3914:13;3936:53;3982:6;3977:3;3970:4;3962:6;3958:17;3936:53;:::i;:::-;4020:6;4015:3;4011:16;3998:29;;4046:3;4072:2;4065:5;4058:17;4106:6;4100:13;4122:65;4178:8;4174:1;4167:5;4163:13;4156:4;4148:6;4144:17;4122:65;:::i;:::-;4250:1;4206:20;;4242:10;;;4235:22;4282:13;;4304:62;4282:13;4353:1;4345:10;;4338:4;4326:17;;4304:62;:::i;:::-;4386:17;4405:1;4382:25;;3453:960;-1:-1:-1;;;;;3453:960:283:o;4418:656::-;4705:6;4694:9;4687:25;4668:4;4731:42;4821:2;4813:6;4809:15;4804:2;4793:9;4789:18;4782:43;4873:2;4865:6;4861:15;4856:2;4845:9;4841:18;4834:43;;4913:6;4908:2;4897:9;4893:18;4886:34;4957:6;4951:3;4940:9;4936:19;4929:35;5001:3;4995;4984:9;4980:19;4973:32;5022:46;5063:3;5052:9;5048:19;5040:6;5022:46;:::i;:::-;5014:54;4418:656;-1:-1:-1;;;;;;;;4418:656:283:o;5079:184::-;5131:77;5128:1;5121:88;5228:4;5225:1;5218:15;5252:4;5249:1;5242:15;5268:195;5307:3;5338:66;5331:5;5328:77;5325:103;;5408:18;;:::i;:::-;-1:-1:-1;5455:1:283;5444:13;;5268:195::o;5468:184::-;5520:77;5517:1;5510:88;5617:4;5614:1;5607:15;5641:4;5638:1;5631:15;5657:120;5697:1;5723;5713:35;;5728:18;;:::i;:::-;-1:-1:-1;5762:9:283;;5657:120::o;5782:125::-;5822:4;5850:1;5847;5844:8;5841:34;;;5855:18;;:::i;:::-;-1:-1:-1;5892:9:283;;5782:125::o;5912:112::-;5944:1;5970;5960:35;;5975:18;;:::i;:::-;-1:-1:-1;6009:9:283;;5912:112::o;6029:128::-;6069:3;6100:1;6096:6;6093:1;6090:13;6087:39;;;6106:18;;:::i;:::-;-1:-1:-1;6142:9:283;;6029:128::o;6162:184::-;6214:77;6211:1;6204:88;6311:4;6308:1;6301:15;6335:4;6332:1;6325:15",
    "linkReferences": {},
    "immutableReferences": {
      "106017": [
        {
          "start": 945,
          "length": 32
        }
      ],
      "106020": [
        {
          "start": 986,
          "length": 32
        }
      ],
      "106023": [
        {
          "start": 1027,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MESSAGE_VERSION()": "3f827a5a",
    "burn()": "44df8e70",
    "initiateWithdrawal(address,uint256,bytes)": "c2b3e5ac",
    "messageNonce()": "ecc70428",
    "sentMessages(bytes32)": "82e3702d",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalHash\",\"type\":\"bytes32\"}],\"name\":\"MessagePassed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawerBalanceBurnt\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initiateWithdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sentMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@custom:predeploy 0x4200000000000000000000000000000000000016\",\"events\":{\"MessagePassed(uint256,address,address,uint256,uint256,bytes,bytes32)\":{\"params\":{\"data\":\"The data to be forwarded to the target on L1.\",\"gasLimit\":\"The minimum amount of gas that must be provided when withdrawing.\",\"nonce\":\"Unique value corresponding to each withdrawal.\",\"sender\":\"The L2 account address which initiated the withdrawal.\",\"target\":\"The L1 account address the call will be send to.\",\"value\":\"The ETH value submitted for withdrawal, to be forwarded to the target.\",\"withdrawalHash\":\"The hash of the withdrawal.\"}},\"WithdrawerBalanceBurnt(uint256)\":{\"params\":{\"amount\":\"Amount of ETh that was burned.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:semver\":\"1.0.1\"},\"initiateWithdrawal(address,uint256,bytes)\":{\"params\":{\"_data\":\"Data to forward to L1 target.\",\"_gasLimit\":\"Minimum gas limit for executing the message on L1.\",\"_target\":\"Address to call on L1 execution.\"}},\"messageNonce()\":{\"returns\":{\"_0\":\"Nonce of the next message to be sent, with added message version.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"L2ToL1MessagePasser\",\"version\":1},\"userdoc\":{\"events\":{\"MessagePassed(uint256,address,address,uint256,uint256,bytes,bytes32)\":{\"notice\":\"Emitted any time a withdrawal is initiated.\"},\"WithdrawerBalanceBurnt(uint256)\":{\"notice\":\"Emitted when the balance of this contract is burned.\"}},\"kind\":\"user\",\"methods\":{\"MESSAGE_VERSION()\":{\"notice\":\"The current message version identifier.\"},\"burn()\":{\"notice\":\"Removes all ETH held by this contract from the state. Used to prevent the amount of         ETH on L2 inflating when ETH is withdrawn. Currently only way to do this is to         create a contract and self-destruct it to itself. Anyone can call this function. Not         incentivized since this function is very cheap.\"},\"constructor\":{\"notice\":\"Constructs the L2ToL1MessagePasser contract.\"},\"initiateWithdrawal(address,uint256,bytes)\":{\"notice\":\"Sends a message from L2 to L1.\"},\"messageNonce()\":{\"notice\":\"Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures.\"},\"sentMessages(bytes32)\":{\"notice\":\"Includes the message hashes for all withdrawals\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The L2ToL1MessagePasser is a dedicated contract where messages that are being sent from         L2 to L1 can be stored. The storage root of this contract is pulled up to the top level         of the L2 output to reduce the cost of proving the existence of sent messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L2/L2ToL1MessagePasser.sol\":\"L2ToL1MessagePasser\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L2/L2ToL1MessagePasser.sol\":{\"keccak256\":\"0x6707ad9f8a088c7f032534aaa708ff905f27c63e9472fcc62236fdcfee1253b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ece46f2e82e6f243cb3665bbcc7b59b2a77ca2d0d96cc99aefb933768a70b81\",\"dweb:/ipfs/QmZkwxwcxgXp6jyRtNZBKR2jokxazYSo9WjrkicrykhyUk\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0xb6908eada9896c172eb16ac196763fe82b07c595f424c19c1734ffd7cd437622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382ddbc903bf239dcd752f13cbc40cd271afd99323f2d11b8d7b20a069d257be\",\"dweb:/ipfs/QmeUbvEbwDoJV1ytiu4xUMReMePMYSHJ2m4mFPiidCGJrf\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x2e232df6b4c6e30f33d8242b41848331285a0439227e80bd4e0a2d7d599ce06d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495ca371e91787525f421162ac77fb30e0887a8df0a6e36a79017e711f8496e4\",\"dweb:/ipfs/QmcJjNWwXiKeosTQRoRM1qjC2f8GUkrFNA8hwthoNedjsq\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "withdrawalHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MessagePassed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawerBalanceBurnt",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSAGE_VERSION",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "initiateWithdrawal"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messageNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sentMessages",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:semver": "1.0.1"
          },
          "initiateWithdrawal(address,uint256,bytes)": {
            "params": {
              "_data": "Data to forward to L1 target.",
              "_gasLimit": "Minimum gas limit for executing the message on L1.",
              "_target": "Address to call on L1 execution."
            }
          },
          "messageNonce()": {
            "returns": {
              "_0": "Nonce of the next message to be sent, with added message version."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSAGE_VERSION()": {
            "notice": "The current message version identifier."
          },
          "burn()": {
            "notice": "Removes all ETH held by this contract from the state. Used to prevent the amount of         ETH on L2 inflating when ETH is withdrawn. Currently only way to do this is to         create a contract and self-destruct it to itself. Anyone can call this function. Not         incentivized since this function is very cheap."
          },
          "constructor": {
            "notice": "Constructs the L2ToL1MessagePasser contract."
          },
          "initiateWithdrawal(address,uint256,bytes)": {
            "notice": "Sends a message from L2 to L1."
          },
          "messageNonce()": {
            "notice": "Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures."
          },
          "sentMessages(bytes32)": {
            "notice": "Includes the message hashes for all withdrawals"
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/L2/L2ToL1MessagePasser.sol": "L2ToL1MessagePasser"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L2/L2ToL1MessagePasser.sol": {
        "keccak256": "0x6707ad9f8a088c7f032534aaa708ff905f27c63e9472fcc62236fdcfee1253b1",
        "urls": [
          "bzz-raw://1ece46f2e82e6f243cb3665bbcc7b59b2a77ca2d0d96cc99aefb933768a70b81",
          "dweb:/ipfs/QmZkwxwcxgXp6jyRtNZBKR2jokxazYSo9WjrkicrykhyUk"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0xb6908eada9896c172eb16ac196763fe82b07c595f424c19c1734ffd7cd437622",
        "urls": [
          "bzz-raw://382ddbc903bf239dcd752f13cbc40cd271afd99323f2d11b8d7b20a069d257be",
          "dweb:/ipfs/QmeUbvEbwDoJV1ytiu4xUMReMePMYSHJ2m4mFPiidCGJrf"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x2e232df6b4c6e30f33d8242b41848331285a0439227e80bd4e0a2d7d599ce06d",
        "urls": [
          "bzz-raw://495ca371e91787525f421162ac77fb30e0887a8df0a6e36a79017e711f8496e4",
          "dweb:/ipfs/QmcJjNWwXiKeosTQRoRM1qjC2f8GUkrFNA8hwthoNedjsq"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 38734,
        "contract": "contracts/L2/L2ToL1MessagePasser.sol:L2ToL1MessagePasser",
        "label": "sentMessages",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 38737,
        "contract": "contracts/L2/L2ToL1MessagePasser.sol:L2ToL1MessagePasser",
        "label": "msgNonce",
        "offset": 0,
        "slot": "1",
        "type": "t_uint240"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint240": {
        "encoding": "inplace",
        "label": "uint240",
        "numberOfBytes": "30"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSAGE_VERSION()": {
        "notice": "The current message version identifier."
      },
      "burn()": {
        "notice": "Removes all ETH held by this contract from the state. Used to prevent the amount of         ETH on L2 inflating when ETH is withdrawn. Currently only way to do this is to         create a contract and self-destruct it to itself. Anyone can call this function. Not         incentivized since this function is very cheap."
      },
      "constructor": {
        "notice": "Constructs the L2ToL1MessagePasser contract."
      },
      "initiateWithdrawal(address,uint256,bytes)": {
        "notice": "Sends a message from L2 to L1."
      },
      "messageNonce()": {
        "notice": "Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures."
      },
      "sentMessages(bytes32)": {
        "notice": "Includes the message hashes for all withdrawals"
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      }
    },
    "events": {
      "MessagePassed(uint256,address,address,uint256,uint256,bytes,bytes32)": {
        "notice": "Emitted any time a withdrawal is initiated."
      },
      "WithdrawerBalanceBurnt(uint256)": {
        "notice": "Emitted when the balance of this contract is burned."
      }
    },
    "notice": "The L2ToL1MessagePasser is a dedicated contract where messages that are being sent from         L2 to L1 can be stored. The storage root of this contract is pulled up to the top level         of the L2 output to reduce the cost of proving the existence of sent messages."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {},
      "initiateWithdrawal(address,uint256,bytes)": {
        "params": {
          "_data": "Data to forward to L1 target.",
          "_gasLimit": "Minimum gas limit for executing the message on L1.",
          "_target": "Address to call on L1 execution."
        }
      },
      "messageNonce()": {
        "returns": {
          "_0": "Nonce of the next message to be sent, with added message version."
        }
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "events": {
      "MessagePassed(uint256,address,address,uint256,uint256,bytes,bytes32)": {
        "params": {
          "data": "The data to be forwarded to the target on L1.",
          "gasLimit": "The minimum amount of gas that must be provided when withdrawing.",
          "nonce": "Unique value corresponding to each withdrawal.",
          "sender": "The L2 account address which initiated the withdrawal.",
          "target": "The L1 account address the call will be send to.",
          "value": "The ETH value submitted for withdrawal, to be forwarded to the target.",
          "withdrawalHash": "The hash of the withdrawal."
        }
      },
      "WithdrawerBalanceBurnt(uint256)": {
        "params": {
          "amount": "Amount of ETh that was burned."
        }
      }
    },
    "title": "L2ToL1MessagePasser"
  },
  "ast": {
    "absolutePath": "contracts/L2/L2ToL1MessagePasser.sol",
    "id": 38874,
    "exportedSymbols": {
      "Burn": [
        42278
      ],
      "Encoding": [
        43021
      ],
      "Hashing": [
        43243
      ],
      "L2ToL1MessagePasser": [
        38873
      ],
      "Semver": [
        106075
      ],
      "Types": [
        43487
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4555:65",
    "nodes": [
      {
        "id": 38708,
        "nodeType": "PragmaDirective",
        "src": "32:23:65",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 38710,
        "nodeType": "ImportDirective",
        "src": "57:47:65",
        "nodes": [],
        "absolutePath": "contracts/libraries/Types.sol",
        "file": "../libraries/Types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38874,
        "sourceUnit": 43488,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38709,
              "name": "Types",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43487,
              "src": "66:5:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38712,
        "nodeType": "ImportDirective",
        "src": "105:51:65",
        "nodes": [],
        "absolutePath": "contracts/libraries/Hashing.sol",
        "file": "../libraries/Hashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38874,
        "sourceUnit": 43244,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38711,
              "name": "Hashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43243,
              "src": "114:7:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38714,
        "nodeType": "ImportDirective",
        "src": "157:53:65",
        "nodes": [],
        "absolutePath": "contracts/libraries/Encoding.sol",
        "file": "../libraries/Encoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38874,
        "sourceUnit": 43022,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38713,
              "name": "Encoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43021,
              "src": "166:8:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38716,
        "nodeType": "ImportDirective",
        "src": "211:45:65",
        "nodes": [],
        "absolutePath": "contracts/libraries/Burn.sol",
        "file": "../libraries/Burn.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38874,
        "sourceUnit": 42295,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38715,
              "name": "Burn",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42278,
              "src": "220:4:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38718,
        "nodeType": "ImportDirective",
        "src": "257:49:65",
        "nodes": [],
        "absolutePath": "contracts/universal/Semver.sol",
        "file": "../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38874,
        "sourceUnit": 106076,
        "symbolAliases": [
          {
            "foreign": {
              "id": 38717,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106075,
              "src": "266:6:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38873,
        "nodeType": "ContractDefinition",
        "src": "715:3871:65",
        "nodes": [
          {
            "id": 38725,
            "nodeType": "VariableDeclaration",
            "src": "849:61:65",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 38722,
              "nodeType": "StructuredDocumentation",
              "src": "760:84:65",
              "text": "@notice The L1 gas limit set when eth is withdrawn using the receive() function."
            },
            "mutability": "constant",
            "name": "RECEIVE_DEFAULT_GAS_LIMIT",
            "nameLocation": "875:25:65",
            "scope": 38873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "849:7:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130305f303030",
              "id": 38724,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "903:7:65",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100_000"
            },
            "visibility": "internal"
          },
          {
            "id": 38729,
            "nodeType": "VariableDeclaration",
            "src": "973:42:65",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 38726,
              "nodeType": "StructuredDocumentation",
              "src": "917:51:65",
              "text": "@notice The current message version identifier."
            },
            "functionSelector": "3f827a5a",
            "mutability": "constant",
            "name": "MESSAGE_VERSION",
            "nameLocation": "996:15:65",
            "scope": 38873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 38727,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "973:6:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 38728,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1014:1:65",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 38734,
            "nodeType": "VariableDeclaration",
            "src": "1086:44:65",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38730,
              "nodeType": "StructuredDocumentation",
              "src": "1022:59:65",
              "text": "@notice Includes the message hashes for all withdrawals"
            },
            "functionSelector": "82e3702d",
            "mutability": "mutable",
            "name": "sentMessages",
            "nameLocation": "1118:12:65",
            "scope": 38873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 38733,
              "keyType": {
                "id": 38731,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1094:7:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1086:24:65",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 38732,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1105:4:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 38737,
            "nodeType": "VariableDeclaration",
            "src": "1197:25:65",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38735,
              "nodeType": "StructuredDocumentation",
              "src": "1137:55:65",
              "text": "@notice A unique value hashed with each withdrawal."
            },
            "mutability": "mutable",
            "name": "msgNonce",
            "nameLocation": "1214:8:65",
            "scope": 38873,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint240",
              "typeString": "uint240"
            },
            "typeName": {
              "id": 38736,
              "name": "uint240",
              "nodeType": "ElementaryTypeName",
              "src": "1197:7:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint240",
                "typeString": "uint240"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 38754,
            "nodeType": "EventDefinition",
            "src": "1861:222:65",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38738,
              "nodeType": "StructuredDocumentation",
              "src": "1229:627:65",
              "text": "@notice Emitted any time a withdrawal is initiated.\n @param nonce          Unique value corresponding to each withdrawal.\n @param sender         The L2 account address which initiated the withdrawal.\n @param target         The L1 account address the call will be send to.\n @param value          The ETH value submitted for withdrawal, to be forwarded to the target.\n @param gasLimit       The minimum amount of gas that must be provided when withdrawing.\n @param data           The data to be forwarded to the target on L1.\n @param withdrawalHash The hash of the withdrawal."
            },
            "eventSelector": "02a52367d10742d8032712c1bb8e0144ff1ec5ffda1ed7d70bb05a2744955054",
            "name": "MessagePassed",
            "nameLocation": "1867:13:65",
            "parameters": {
              "id": 38753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38740,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1906:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "1890:21:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38742,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1937:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "1921:22:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1969:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "1953:22:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38746,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1993:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "1985:13:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38748,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "2016:8:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "2008:16:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38750,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2040:4:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "2034:10:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38749,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalHash",
                  "nameLocation": "2062:14:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38754,
                  "src": "2054:22:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38751,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:202:65"
            }
          },
          {
            "id": 38759,
            "nodeType": "EventDefinition",
            "src": "2211:53:65",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 38755,
              "nodeType": "StructuredDocumentation",
              "src": "2089:117:65",
              "text": "@notice Emitted when the balance of this contract is burned.\n @param amount Amount of ETh that was burned."
            },
            "eventSelector": "7967de617a5ac1cc7eba2d6f37570a0135afa950d8bb77cdd35f0d0b4e85a16f",
            "name": "WithdrawerBalanceBurnt",
            "nameLocation": "2217:22:65",
            "parameters": {
              "id": 38758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38757,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2256:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38759,
                  "src": "2240:22:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:24:65"
            }
          },
          {
            "id": 38769,
            "nodeType": "FunctionDefinition",
            "src": "2360:32:65",
            "nodes": [],
            "body": {
              "id": 38768,
              "nodeType": "Block",
              "src": "2390:2:65",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 38760,
              "nodeType": "StructuredDocumentation",
              "src": "2270:85:65",
              "text": "@custom:semver 1.0.1\n @notice Constructs the L2ToL1MessagePasser contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 38763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2381:1:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "30",
                    "id": 38764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2384:1:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "hexValue": "31",
                    "id": 38765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2387:1:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 38766,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38762,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106075,
                  "src": "2374:6:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "2374:15:65"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2371:2:65"
            },
            "returnParameters": {
              "id": 38767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:0:65"
            },
            "scope": 38873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38784,
            "nodeType": "FunctionDefinition",
            "src": "2481:112:65",
            "nodes": [],
            "body": {
              "id": 38783,
              "nodeType": "Block",
              "src": "2508:85:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38774,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2537:3:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2537:10:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38776,
                        "name": "RECEIVE_DEFAULT_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38725,
                        "src": "2549:25:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 38779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2582:2:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 38778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2576:5:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 38777,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2576:5:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:9:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38773,
                      "name": "initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38859,
                      "src": "2518:18:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 38781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:68:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38782,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:68:65"
                }
              ]
            },
            "documentation": {
              "id": 38770,
              "nodeType": "StructuredDocumentation",
              "src": "2398:78:65",
              "text": "@notice Allows users to withdraw ETH by sending directly to this contract."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 38771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2488:2:65"
            },
            "returnParameters": {
              "id": 38772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2508:0:65"
            },
            "scope": 38873,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38807,
            "nodeType": "FunctionDefinition",
            "src": "2959:154:65",
            "nodes": [],
            "body": {
              "id": 38806,
              "nodeType": "Block",
              "src": "2984:129:65",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38789,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3002:7:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 38806,
                      "src": "2994:15:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2994:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38795,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 38792,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3020:4:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_L2ToL1MessagePasser_$38873",
                            "typeString": "contract L2ToL1MessagePasser"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_L2ToL1MessagePasser_$38873",
                            "typeString": "contract L2ToL1MessagePasser"
                          }
                        ],
                        "id": 38791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3012:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 38790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:65",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 38793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3012:13:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 38794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3012:21:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2994:39:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38799,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38789,
                        "src": "3052:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38796,
                        "name": "Burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42278,
                        "src": "3043:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Burn_$42278_$",
                          "typeString": "type(library Burn)"
                        }
                      },
                      "id": 38798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "eth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42250,
                      "src": "3043:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:17:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38801,
                  "nodeType": "ExpressionStatement",
                  "src": "3043:17:65"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 38803,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38789,
                        "src": "3098:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38802,
                      "name": "WithdrawerBalanceBurnt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38759,
                      "src": "3075:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3075:31:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38805,
                  "nodeType": "EmitStatement",
                  "src": "3070:36:65"
                }
              ]
            },
            "documentation": {
              "id": 38785,
              "nodeType": "StructuredDocumentation",
              "src": "2599:355:65",
              "text": "@notice Removes all ETH held by this contract from the state. Used to prevent the amount of\n         ETH on L2 inflating when ETH is withdrawn. Currently only way to do this is to\n         create a contract and self-destruct it to itself. Anyone can call this function. Not\n         incentivized since this function is very cheap."
            },
            "functionSelector": "44df8e70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2968:4:65",
            "parameters": {
              "id": 38786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2972:2:65"
            },
            "returnParameters": {
              "id": 38787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2984:0:65"
            },
            "scope": 38873,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38859,
            "nodeType": "FunctionDefinition",
            "src": "3355:774:65",
            "nodes": [],
            "body": {
              "id": 38858,
              "nodeType": "Block",
              "src": "3484:645:65",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38818,
                      "mutability": "mutable",
                      "name": "withdrawalHash",
                      "nameLocation": "3502:14:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 38858,
                      "src": "3494:22:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 38817,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3494:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38834,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38823,
                              "name": "messageNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38872,
                              "src": "3608:12:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 38824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3608:14:65",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 38825,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3648:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 38826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3648:10:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 38827,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38810,
                            "src": "3684:7:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 38828,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3716:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 38829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3716:9:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 38830,
                            "name": "_gasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38812,
                            "src": "3753:9:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 38831,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38814,
                            "src": "3786:5:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 38821,
                            "name": "Types",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43487,
                            "src": "3555:5:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Types_$43487_$",
                              "typeString": "type(library Types)"
                            }
                          },
                          "id": 38822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "WithdrawalTransaction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43486,
                          "src": "3555:27:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_WithdrawalTransaction_$43486_storage_ptr_$",
                            "typeString": "type(struct Types.WithdrawalTransaction storage pointer)"
                          }
                        },
                        "id": 38832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "nonce",
                          "sender",
                          "target",
                          "value",
                          "gasLimit",
                          "data"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3555:251:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$43486_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$43486_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      ],
                      "expression": {
                        "id": 38819,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43243,
                        "src": "3519:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$43243_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 38820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashWithdrawal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43218,
                      "src": "3519:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_WithdrawalTransaction_$43486_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Types.WithdrawalTransaction memory) pure returns (bytes32)"
                      }
                    },
                    "id": 38833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:297:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3494:322:65"
                },
                {
                  "expression": {
                    "id": 38839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38835,
                        "name": "sentMessages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38734,
                        "src": "3827:12:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 38837,
                      "indexExpression": {
                        "id": 38836,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38818,
                        "src": "3840:14:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3827:28:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 38838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3858:4:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3827:35:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38840,
                  "nodeType": "ExpressionStatement",
                  "src": "3827:35:65"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38842,
                          "name": "messageNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38872,
                          "src": "3905:12:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 38843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3905:14:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 38844,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3933:3:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3933:10:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38846,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38810,
                        "src": "3957:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 38847,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3978:3:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3978:9:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38849,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38812,
                        "src": "4001:9:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38850,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38814,
                        "src": "4024:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 38851,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38818,
                        "src": "4043:14:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 38841,
                      "name": "MessagePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38754,
                      "src": "3878:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256,uint256,bytes memory,bytes32)"
                      }
                    },
                    "id": 38852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3878:189:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38853,
                  "nodeType": "EmitStatement",
                  "src": "3873:194:65"
                },
                {
                  "id": 38857,
                  "nodeType": "UncheckedBlock",
                  "src": "4078:45:65",
                  "statements": [
                    {
                      "expression": {
                        "id": 38855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "4102:10:65",
                        "subExpression": {
                          "id": 38854,
                          "name": "msgNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38737,
                          "src": "4104:8:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint240",
                            "typeString": "uint240"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      "id": 38856,
                      "nodeType": "ExpressionStatement",
                      "src": "4102:10:65"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 38808,
              "nodeType": "StructuredDocumentation",
              "src": "3119:231:65",
              "text": "@notice Sends a message from L2 to L1.\n @param _target   Address to call on L1 execution.\n @param _gasLimit Minimum gas limit for executing the message on L1.\n @param _data     Data to forward to L1 target."
            },
            "functionSelector": "c2b3e5ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiateWithdrawal",
            "nameLocation": "3364:18:65",
            "parameters": {
              "id": 38815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38810,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "3400:7:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38859,
                  "src": "3392:15:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38812,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "3425:9:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38859,
                  "src": "3417:17:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38814,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "3457:5:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 38859,
                  "src": "3444:18:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 38813,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3382:86:65"
            },
            "returnParameters": {
              "id": 38816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3484:0:65"
            },
            "scope": 38873,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38872,
            "nodeType": "FunctionDefinition",
            "src": "4450:134:65",
            "nodes": [],
            "body": {
              "id": 38871,
              "nodeType": "Block",
              "src": "4504:80:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38867,
                        "name": "msgNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38737,
                        "src": "4551:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      {
                        "id": 38868,
                        "name": "MESSAGE_VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38729,
                        "src": "4561:15:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 38865,
                        "name": "Encoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43021,
                        "src": "4521:8:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Encoding_$43021_$",
                          "typeString": "type(library Encoding)"
                        }
                      },
                      "id": 38866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeVersionedNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42998,
                      "src": "4521:29:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint240_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint240,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 38869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:56:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38864,
                  "id": 38870,
                  "nodeType": "Return",
                  "src": "4514:63:65"
                }
              ]
            },
            "documentation": {
              "id": 38860,
              "nodeType": "StructuredDocumentation",
              "src": "4135:310:65",
              "text": "@notice Retrieves the next message nonce. Message version will be added to the upper two\n         bytes of the message nonce. Message version allows us to treat messages as having\n         different structures.\n @return Nonce of the next message to be sent, with added message version."
            },
            "functionSelector": "ecc70428",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageNonce",
            "nameLocation": "4459:12:65",
            "parameters": {
              "id": 38861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4471:2:65"
            },
            "returnParameters": {
              "id": 38864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38872,
                  "src": "4495:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:9:65"
            },
            "scope": 38873,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 38720,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106075,
              "src": "747:6:65"
            },
            "id": 38721,
            "nodeType": "InheritanceSpecifier",
            "src": "747:6:65"
          }
        ],
        "canonicalName": "L2ToL1MessagePasser",
        "contractDependencies": [
          42294
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 38719,
          "nodeType": "StructuredDocumentation",
          "src": "308:407:65",
          "text": "@custom:proxied\n @custom:predeploy 0x4200000000000000000000000000000000000016\n @title L2ToL1MessagePasser\n @notice The L2ToL1MessagePasser is a dedicated contract where messages that are being sent from\n         L2 to L1 can be stored. The storage root of this contract is pulled up to the top level\n         of the L2 output to reduce the cost of proving the existence of sent messages."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38873,
          106075
        ],
        "name": "L2ToL1MessagePasser",
        "nameLocation": "724:19:65",
        "scope": 38874,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 65
}