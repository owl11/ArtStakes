{
  "abi": [],
  "bytecode": {
    "object": "0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a",
    "sourceMap": "396:1637:93:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;396:1637:93;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a",
    "sourceMap": "396:1637:93:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Constants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Constants is a library for storing constants. Simple! Don't put everything in here, just         the stuff used in multiple contracts. Constants that only apply to a single contract         should be defined in that contract instead.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L1/ResourceMetering.sol\":{\"keccak256\":\"0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562\",\"dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP\"]},\"contracts/libraries/Arithmetic.sol\":{\"keccak256\":\"0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0\",\"dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0xb3d5f5370d106d181fd6a3cc6c8ca2e476577d487572be089b746c1a71a7b82b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b20c0f7818daf78634aa721b441a2fd7469bfd20fd2d63c922437c3037b8cdb\",\"dweb:/ipfs/QmUtpZYavK7njnqXkpi1QA5A2mwDKXyjkU1hhSo9vRLoFq\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/libraries/Constants.sol": "Constants"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L1/ResourceMetering.sol": {
        "keccak256": "0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743",
        "urls": [
          "bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562",
          "dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Arithmetic.sol": {
        "keccak256": "0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2",
        "urls": [
          "bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0",
          "dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Constants.sol": {
        "keccak256": "0xb3d5f5370d106d181fd6a3cc6c8ca2e476577d487572be089b746c1a71a7b82b",
        "urls": [
          "bzz-raw://1b20c0f7818daf78634aa721b441a2fd7469bfd20fd2d63c922437c3037b8cdb",
          "dweb:/ipfs/QmUtpZYavK7njnqXkpi1QA5A2mwDKXyjkU1hhSo9vRLoFq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "notice": "Constants is a library for storing constants. Simple! Don't put everything in here, just         the stuff used in multiple contracts. Constants that only apply to a single contract         should be defined in that contract instead."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "title": "Constants"
  },
  "ast": {
    "absolutePath": "contracts/libraries/Constants.sol",
    "id": 42602,
    "exportedSymbols": {
      "Constants": [
        42601
      ],
      "ResourceMetering": [
        37007
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2002:93",
    "nodes": [
      {
        "id": 42557,
        "nodeType": "PragmaDirective",
        "src": "32:23:93",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 42559,
        "nodeType": "ImportDirective",
        "src": "57:62:93",
        "nodes": [],
        "absolutePath": "contracts/L1/ResourceMetering.sol",
        "file": "../L1/ResourceMetering.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42602,
        "sourceUnit": 37008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42558,
              "name": "ResourceMetering",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37007,
              "src": "66:16:93",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42601,
        "nodeType": "ContractDefinition",
        "src": "396:1637:93",
        "nodes": [
          {
            "id": 42567,
            "nodeType": "VariableDeclaration",
            "src": "960:57:93",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42561,
              "nodeType": "StructuredDocumentation",
              "src": "420:535:93",
              "text": "@notice Special address to be used as the tx origin for gas estimation calls in the\n         OptimismPortal and CrossDomainMessenger calls. You only need to use this address if\n         the minimum gas limit specified by the user is not actually enough to execute the\n         given message and you're attempting to estimate the actual necessary gas limit. We\n         use address(1) because it's the ecrecover precompile and therefore guaranteed to\n         never have any code on any EVM chain."
            },
            "mutability": "constant",
            "name": "ESTIMATION_ADDRESS",
            "nameLocation": "986:18:93",
            "scope": 42601,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42562,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "960:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 42565,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1015:1:93",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 42564,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1007:7:93",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 42563,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1007:7:93",
                  "typeDescriptions": {}
                }
              },
              "id": 42566,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1007:10:93",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42571,
            "nodeType": "VariableDeclaration",
            "src": "1291:88:93",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42568,
              "nodeType": "StructuredDocumentation",
              "src": "1024:262:93",
              "text": "@notice Value used for the L2 sender storage slot in both the OptimismPortal and the\n         CrossDomainMessenger contracts before an actual sender is set. This value is\n         non-zero to reduce the gas cost of message passing transactions."
            },
            "mutability": "constant",
            "name": "DEFAULT_L2_SENDER",
            "nameLocation": "1317:17:93",
            "scope": 42601,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42569,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1291:7:93",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
              "id": 42570,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1337:42:93",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x000000000000000000000000000000000000dEaD"
            },
            "visibility": "internal"
          },
          {
            "id": 42600,
            "nodeType": "FunctionDefinition",
            "src": "1528:503:93",
            "nodes": [],
            "body": {
              "id": 42599,
              "nodeType": "Block",
              "src": "1654:377:93",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42582,
                      "mutability": "mutable",
                      "name": "config",
                      "nameLocation": "1703:6:93",
                      "nodeType": "VariableDeclaration",
                      "scope": 42599,
                      "src": "1664:45:93",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                        "typeString": "struct ResourceMetering.ResourceConfig"
                      },
                      "typeName": {
                        "id": 42581,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42580,
                          "name": "ResourceMetering.ResourceConfig",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36691,
                          "src": "1664:31:93"
                        },
                        "referencedDeclaration": 36691,
                        "src": "1664:31:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42596,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32305f3030305f303030",
                        "id": 42585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1776:10:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        },
                        "value": "20_000_000"
                      },
                      {
                        "hexValue": "3130",
                        "id": 42586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1822:2:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "38",
                        "id": 42587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:1:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      {
                        "hexValue": "31",
                        "id": 42588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1898:6:93",
                        "subdenomination": "gwei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "315f3030305f303030",
                        "id": 42589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:9:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1_000_000"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1978:7:93",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 42591,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "1978:7:93",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 42590,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1973:4:93",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1973:13:93",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 42594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1973:17:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 42583,
                        "name": "ResourceMetering",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37007,
                        "src": "1712:16:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ResourceMetering_$37007_$",
                          "typeString": "type(contract ResourceMetering)"
                        }
                      },
                      "id": 42584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ResourceConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36691,
                      "src": "1712:31:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ResourceConfig_$36691_storage_ptr_$",
                        "typeString": "type(struct ResourceMetering.ResourceConfig storage pointer)"
                      }
                    },
                    "id": 42595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "maxResourceLimit",
                      "elasticityMultiplier",
                      "baseFeeMaxChangeDenominator",
                      "minimumBaseFee",
                      "systemTxMaxGas",
                      "maximumBaseFee"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1712:289:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1664:337:93"
                },
                {
                  "expression": {
                    "id": 42597,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42582,
                    "src": "2018:6:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig memory"
                    }
                  },
                  "functionReturnParameters": 42577,
                  "id": 42598,
                  "nodeType": "Return",
                  "src": "2011:13:93"
                }
              ]
            },
            "documentation": {
              "id": 42572,
              "nodeType": "StructuredDocumentation",
              "src": "1386:137:93",
              "text": "@notice Returns the default values for the ResourceConfig. These are the recommended values\n         for a production network."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DEFAULT_RESOURCE_CONFIG",
            "nameLocation": "1537:23:93",
            "parameters": {
              "id": 42573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1560:2:93"
            },
            "returnParameters": {
              "id": 42577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42576,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42600,
                  "src": "1610:38:93",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 42575,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42574,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36691,
                      "src": "1610:31:93"
                    },
                    "referencedDeclaration": 36691,
                    "src": "1610:31:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1609:40:93"
            },
            "scope": 42601,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Constants",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 42560,
          "nodeType": "StructuredDocumentation",
          "src": "121:275:93",
          "text": "@title Constants\n @notice Constants is a library for storing constants. Simple! Don't put everything in here, just\n         the stuff used in multiple contracts. Constants that only apply to a single contract\n         should be defined in that contract instead."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42601
        ],
        "name": "Constants",
        "nameLocation": "404:9:93",
        "scope": 42602,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 93
}