{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        }
      ],
      "name": "WhitelistDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "WhitelistStatusChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "enableArbitraryContractDeployment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        }
      ],
      "name": "isDeployerAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "setWhitelistedDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b5060016080819052600060a081905260c082905281610b3761004a833960006105450152600061051c015260006104f30152610b376000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c85780639b19251a1461010d578063b1540a0114610140578063bdc7b54f1461015357600080fd5b806308fd63221461008257806313af40351461009757806354fd4d50146100aa575b600080fd5b61009561009036600461088a565b61015b565b005b6100956100a53660046108c6565b6102bb565b6100b26104ec565b6040516100bf9190610918565b60405180910390f35b6000546100e89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bf565b61013061011b3660046108c6565b60016020526000908152604090205460ff1681565b60405190151581526020016100bf565b61013061014e3660046108c6565b61058f565b6100956105e0565b60005473ffffffffffffffffffffffffffffffffffffffff16331461022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610224565b73ffffffffffffffffffffffffffffffffffffffff8116610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f4465706c6f79657257686974656c6973743a2063616e206f6e6c79206265206460448201527f697361626c65642076696120656e61626c65417262697472617279436f6e747260648201527f6163744465706c6f796d656e7400000000000000000000000000000000000000608482015260a401610224565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606105177f0000000000000000000000000000000000000000000000000000000000000000610724565b6105407f0000000000000000000000000000000000000000000000000000000000000000610724565b6105697f0000000000000000000000000000000000000000000000000000000000000000610724565b60405160200161057b93929190610969565b604051602081830303815290604052905090565b6000805473ffffffffffffffffffffffffffffffffffffffff1615806105da575073ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff165b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610224565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681527fc0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd49060200160405180910390a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60608160000361076757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610791578061077b81610a0e565b915061078a9050600a83610a75565b915061076b565b60008167ffffffffffffffff8111156107ac576107ac610a89565b6040519080825280601f01601f1916602001820160405280156107d6576020820181803683370190505b5090505b8415610859576107eb600183610ab8565b91506107f8600a86610acf565b610803906030610ae3565b60f81b81838151811061081857610818610afb565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610852600a86610a75565b94506107da565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a683610861565b9150602083013580151581146108bb57600080fd5b809150509250929050565b6000602082840312156108d857600080fd5b6108e182610861565b9392505050565b60005b838110156109035781810151838201526020016108eb565b83811115610912576000848401525b50505050565b60208152600082518060208401526109378160408501602087016108e8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000845161097b8184602089016108e8565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516109b7816001850160208a016108e8565b600192019182015283516109d28160028401602088016108e8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3f57610a3f6109df565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a8457610a84610a46565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082821015610aca57610aca6109df565b500390565b600082610ade57610ade610a46565b500690565b60008219821115610af657610af66109df565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "694:2999:82:-:0;;;2014:32;;;;;;;;;-1:-1:-1;2035:1:82;762:22:211;;;;2038:1:82;794:22:211;;;;826;;;;2035:1:82;694:2999;;2038:1;694:2999;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c85780639b19251a1461010d578063b1540a0114610140578063bdc7b54f1461015357600080fd5b806308fd63221461008257806313af40351461009757806354fd4d50146100aa575b600080fd5b61009561009036600461088a565b61015b565b005b6100956100a53660046108c6565b6102bb565b6100b26104ec565b6040516100bf9190610918565b60405180910390f35b6000546100e89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bf565b61013061011b3660046108c6565b60016020526000908152604090205460ff1681565b60405190151581526020016100bf565b61013061014e3660046108c6565b61058f565b6100956105e0565b60005473ffffffffffffffffffffffffffffffffffffffff16331461022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610224565b73ffffffffffffffffffffffffffffffffffffffff8116610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f4465706c6f79657257686974656c6973743a2063616e206f6e6c79206265206460448201527f697361626c65642076696120656e61626c65417262697472617279436f6e747260648201527f6163744465706c6f796d656e7400000000000000000000000000000000000000608482015260a401610224565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606105177f0000000000000000000000000000000000000000000000000000000000000000610724565b6105407f0000000000000000000000000000000000000000000000000000000000000000610724565b6105697f0000000000000000000000000000000000000000000000000000000000000000610724565b60405160200161057b93929190610969565b604051602081830303815290604052905090565b6000805473ffffffffffffffffffffffffffffffffffffffff1615806105da575073ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff165b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610224565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681527fc0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd49060200160405180910390a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60608160000361076757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610791578061077b81610a0e565b915061078a9050600a83610a75565b915061076b565b60008167ffffffffffffffff8111156107ac576107ac610a89565b6040519080825280601f01601f1916602001820160405280156107d6576020820181803683370190505b5090505b8415610859576107eb600183610ab8565b91506107f8600a86610acf565b610803906030610ae3565b60f81b81838151811061081857610818610afb565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610852600a86610a75565b94506107da565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461088557600080fd5b919050565b6000806040838503121561089d57600080fd5b6108a683610861565b9150602083013580151581146108bb57600080fd5b809150509250929050565b6000602082840312156108d857600080fd5b6108e182610861565b9392505050565b60005b838110156109035781810151838201526020016108eb565b83811115610912576000848401525b50505050565b60208152600082518060208401526109378160408501602087016108e8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000845161097b8184602089016108e8565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516109b7816001850160208a016108e8565b600192019182015283516109d28160028401602088016108e8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3f57610a3f6109df565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a8457610a84610a46565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082821015610aca57610aca6109df565b500390565b600082610ade57610ade610a46565b500690565b60008219821115610af657610af66109df565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "694:2999:82:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:209;;;;;;:::i;:::-;;:::i;:::-;;2579:547;;;;;;:::i;:::-;;:::i;972:372:211:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:20:82;;;;;;;;;;;;1644:42:283;1632:55;;;1614:74;;1602:2;1587:18;885:20:82;1468:226:283;987:41:82;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1864:14:283;;1857:22;1839:41;;1827:2;1812:18;987:41:82;1699:187:283;3547:144:82;;;;;;:::i;:::-;;:::i;3221:138::-;;;:::i;2264:209::-;1854:5;;;;1840:10;:19;1819:142;;;;;;;2093:2:283;1819:142:82;;;2075:21:283;2132:2;2112:18;;;2105:30;2171:34;2151:18;;;2144:62;2242:34;2222:18;;;2215:62;2314:14;2293:19;;;2286:43;2346:19;;1819:142:82;;;;;;;;;2365:20:::1;::::0;::::1;;::::0;;;:9:::1;:20;::::0;;;;;;;;:37;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;2417:49;;2544:74:283;;;2634:18;;;2627:50;2417:49:82::1;::::0;2517:18:283;2417:49:82::1;;;;;;;2264:209:::0;;:::o;2579:547::-;1854:5;;;;1840:10;:19;1819:142;;;;;;;2093:2:283;1819:142:82;;;2075:21:283;2132:2;2112:18;;;2105:30;2171:34;2151:18;;;2144:62;2242:34;2222:18;;;2215:62;2314:14;2293:19;;;2286:43;2346:19;;1819:142:82;1891:480:283;1819:142:82;2929:20:::1;::::0;::::1;2908:144;;;::::0;::::1;::::0;;2890:2:283;2908:144:82::1;::::0;::::1;2872:21:283::0;2929:2;2909:18;;;2902:30;2968:34;2948:18;;;2941:62;3039:34;3019:18;;;3012:62;3111:15;3090:19;;;3083:44;3144:19;;2908:144:82::1;2688:481:283::0;2908:144:82::1;3081:5;::::0;3068:27:::1;::::0;;3081:5:::1;::::0;;::::1;3409:34:283::0;;3479:15;;;3474:2;3459:18;;3452:43;3068:27:82::1;::::0;3321:18:283;3068:27:82::1;;;;;;;3105:5;:14:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2579:547::o;972:372:211:-;1012:13;1118:31;1135:13;1118:16;:31::i;:::-;1196;1213:13;1196:16;:31::i;:::-;1274;1291:13;1274:16;:31::i;:::-;1080:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1037:300;;972:372;:::o;3547:144:82:-;3616:4;3640:5;;:19;:5;:19;;:43;;-1:-1:-1;3663:20:82;;;;;;;:9;:20;;;;;;;;3640:43;3632:52;3547:144;-1:-1:-1;;3547:144:82:o;3221:138::-;1854:5;;;;1840:10;:19;1819:142;;;;;;;2093:2:283;1819:142:82;;;2075:21:283;2132:2;2112:18;;;2105:30;2171:34;2151:18;;;2144:62;2242:34;2222:18;;;2215:62;2314:14;2293:19;;;2286:43;2346:19;;1819:142:82;1891:480:283;1819:142:82;3318:5:::1;::::0;3300:24:::1;::::0;3318:5:::1;::::0;;::::1;1614:74:283::0;;3300:24:82::1;::::0;1602:2:283;1587:18;3300:24:82::1;;;;;;;3350:1;3334:18:::0;;;::::1;::::0;;3221:138::o;392:703:250:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:250;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:250;;-1:-1:-1;837:2:250;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:250;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:250;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:250;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:250:o;14:196:283:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;280:6;288;341:2;329:9;320:7;316:23;312:32;309:52;;;357:1;354;347:12;309:52;380:29;399:9;380:29;:::i;:::-;370:39;;459:2;448:9;444:18;431:32;506:5;499:13;492:21;485:5;482:32;472:60;;528:1;525;518:12;472:60;551:5;541:15;;;215:347;;;;;:::o;567:186::-;626:6;679:2;667:9;658:7;654:23;650:32;647:52;;;695:1;692;685:12;647:52;718:29;737:9;718:29;:::i;:::-;708:39;567:186;-1:-1:-1;;;567:186:283:o;758:258::-;830:1;840:113;854:6;851:1;848:13;840:113;;;930:11;;;924:18;911:11;;;904:39;876:2;869:10;840:113;;;971:6;968:1;965:13;962:48;;;1006:1;997:6;992:3;988:16;981:27;962:48;;758:258;;;:::o;1021:442::-;1170:2;1159:9;1152:21;1133:4;1202:6;1196:13;1245:6;1240:2;1229:9;1225:18;1218:34;1261:66;1320:6;1315:2;1304:9;1300:18;1295:2;1287:6;1283:15;1261:66;:::i;:::-;1379:2;1367:15;1384:66;1363:88;1348:104;;;;1454:2;1344:113;;1021:442;-1:-1:-1;;1021:442:283:o;3506:960::-;3935:3;3973:6;3967:13;3989:53;4035:6;4030:3;4023:4;4015:6;4011:17;3989:53;:::i;:::-;4073:6;4068:3;4064:16;4051:29;;4099:3;4125:2;4118:5;4111:17;4159:6;4153:13;4175:65;4231:8;4227:1;4220:5;4216:13;4209:4;4201:6;4197:17;4175:65;:::i;:::-;4303:1;4259:20;;4295:10;;;4288:22;4335:13;;4357:62;4335:13;4406:1;4398:10;;4391:4;4379:17;;4357:62;:::i;:::-;4439:17;4458:1;4435:25;;3506:960;-1:-1:-1;;;;;3506:960:283:o;4471:184::-;4523:77;4520:1;4513:88;4620:4;4617:1;4610:15;4644:4;4641:1;4634:15;4660:195;4699:3;4730:66;4723:5;4720:77;4717:103;;4800:18;;:::i;:::-;-1:-1:-1;4847:1:283;4836:13;;4660:195::o;4860:184::-;4912:77;4909:1;4902:88;5009:4;5006:1;4999:15;5033:4;5030:1;5023:15;5049:120;5089:1;5115;5105:35;;5120:18;;:::i;:::-;-1:-1:-1;5154:9:283;;5049:120::o;5174:184::-;5226:77;5223:1;5216:88;5323:4;5320:1;5313:15;5347:4;5344:1;5337:15;5363:125;5403:4;5431:1;5428;5425:8;5422:34;;;5436:18;;:::i;:::-;-1:-1:-1;5473:9:283;;5363:125::o;5493:112::-;5525:1;5551;5541:35;;5556:18;;:::i;:::-;-1:-1:-1;5590:9:283;;5493:112::o;5610:128::-;5650:3;5681:1;5677:6;5674:1;5671:13;5668:39;;;5687:18;;:::i;:::-;-1:-1:-1;5723:9:283;;5610:128::o;5743:184::-;5795:77;5792:1;5785:88;5892:4;5889:1;5882:15;5916:4;5913:1;5906:15",
    "linkReferences": {},
    "immutableReferences": {
      "106017": [
        {
          "start": 1267,
          "length": 32
        }
      ],
      "106020": [
        {
          "start": 1308,
          "length": 32
        }
      ],
      "106023": [
        {
          "start": 1349,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "enableArbitraryContractDeployment()": "bdc7b54f",
    "isDeployerAllowed(address)": "b1540a01",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "setWhitelistedDeployer(address,bool)": "08fd6322",
    "version()": "54fd4d50",
    "whitelist(address)": "9b19251a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"}],\"name\":\"WhitelistDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistStatusChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enableArbitraryContractDeployment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"}],\"name\":\"isDeployerAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"setWhitelistedDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:legacy\":\"@custom:proxied\",\"custom:predeployed\":\"0x4200000000000000000000000000000000000002\",\"events\":{\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"Address of the new owner.\",\"oldOwner\":\"Address of the previous owner.\"}},\"WhitelistDisabled(address)\":{\"params\":{\"oldOwner\":\"Address of the final owner of the whitelist.\"}},\"WhitelistStatusChanged(address,bool)\":{\"params\":{\"deployer\":\"Address of the deployer.\",\"whitelisted\":\"Boolean indicating whether the deployer is whitelisted.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:semver\":\"1.0.1\"},\"isDeployerAllowed(address)\":{\"params\":{\"_deployer\":\"Address to check.\"},\"returns\":{\"_0\":\"Whether or not the address can deploy contracts.\"}},\"setOwner(address)\":{\"params\":{\"_owner\":\"Address of the new owner.\"}},\"setWhitelistedDeployer(address,bool)\":{\"params\":{\"_deployer\":\"Address to update permissions for.\",\"_isWhitelisted\":\"Whether or not the address is whitelisted.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"DeployerWhitelist\",\"version\":1},\"userdoc\":{\"events\":{\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of this contract changes.\"},\"WhitelistDisabled(address)\":{\"notice\":\"Emitted when the whitelist is disabled.\"},\"WhitelistStatusChanged(address,bool)\":{\"notice\":\"Emitted when the whitelist status of a deployer changes.\"}},\"kind\":\"user\",\"methods\":{\"enableArbitraryContractDeployment()\":{\"notice\":\"Permanently enables arbitrary contract deployment and deletes the owner.\"},\"isDeployerAllowed(address)\":{\"notice\":\"Checks whether an address is allowed to deploy contracts.\"},\"owner()\":{\"notice\":\"Address of the owner of this contract. Note that when this address is set to         address(0), the whitelist is disabled.\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of this contract.\"},\"setWhitelistedDeployer(address,bool)\":{\"notice\":\"Adds or removes an address from the deployment whitelist.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"},\"whitelist(address)\":{\"notice\":\"Mapping of deployer addresses to boolean whitelist status.\"}},\"notice\":\"DeployerWhitelist is a legacy contract that was originally used to act as a whitelist of         addresses allowed to the Optimism network. The DeployerWhitelist has since been         disabled, but the code is kept in state for the sake of full backwards compatibility.         As of the Bedrock upgrade, the DeployerWhitelist is completely unused by the Optimism         system and could, in theory, be removed entirely.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy/DeployerWhitelist.sol\":\"DeployerWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/legacy/DeployerWhitelist.sol\":{\"keccak256\":\"0x8396299b5038ff0ce48b8b352dfedb41f04b2600a65c908f56148c7ca53e381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4086ff238f6254f4157bce475af95365fe4e624717adeaabcd416af6cd99b823\",\"dweb:/ipfs/QmfSnda3GmGEeUjXpwkgGo9P8S9og9PXQP4R1HQpwwGq51\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WhitelistDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WhitelistStatusChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableArbitraryContractDeployment"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDeployerAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isWhitelisted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhitelistedDeployer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:semver": "1.0.1"
          },
          "isDeployerAllowed(address)": {
            "params": {
              "_deployer": "Address to check."
            },
            "returns": {
              "_0": "Whether or not the address can deploy contracts."
            }
          },
          "setOwner(address)": {
            "params": {
              "_owner": "Address of the new owner."
            }
          },
          "setWhitelistedDeployer(address,bool)": {
            "params": {
              "_deployer": "Address to update permissions for.",
              "_isWhitelisted": "Whether or not the address is whitelisted."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "enableArbitraryContractDeployment()": {
            "notice": "Permanently enables arbitrary contract deployment and deletes the owner."
          },
          "isDeployerAllowed(address)": {
            "notice": "Checks whether an address is allowed to deploy contracts."
          },
          "owner()": {
            "notice": "Address of the owner of this contract. Note that when this address is set to         address(0), the whitelist is disabled."
          },
          "setOwner(address)": {
            "notice": "Updates the owner of this contract."
          },
          "setWhitelistedDeployer(address,bool)": {
            "notice": "Adds or removes an address from the deployment whitelist."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          },
          "whitelist(address)": {
            "notice": "Mapping of deployer addresses to boolean whitelist status."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/legacy/DeployerWhitelist.sol": "DeployerWhitelist"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/legacy/DeployerWhitelist.sol": {
        "keccak256": "0x8396299b5038ff0ce48b8b352dfedb41f04b2600a65c908f56148c7ca53e381f",
        "urls": [
          "bzz-raw://4086ff238f6254f4157bce475af95365fe4e624717adeaabcd416af6cd99b823",
          "dweb:/ipfs/QmfSnda3GmGEeUjXpwkgGo9P8S9og9PXQP4R1HQpwwGq51"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 41232,
        "contract": "contracts/legacy/DeployerWhitelist.sol:DeployerWhitelist",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 41237,
        "contract": "contracts/legacy/DeployerWhitelist.sol:DeployerWhitelist",
        "label": "whitelist",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "enableArbitraryContractDeployment()": {
        "notice": "Permanently enables arbitrary contract deployment and deletes the owner."
      },
      "isDeployerAllowed(address)": {
        "notice": "Checks whether an address is allowed to deploy contracts."
      },
      "owner()": {
        "notice": "Address of the owner of this contract. Note that when this address is set to         address(0), the whitelist is disabled."
      },
      "setOwner(address)": {
        "notice": "Updates the owner of this contract."
      },
      "setWhitelistedDeployer(address,bool)": {
        "notice": "Adds or removes an address from the deployment whitelist."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      },
      "whitelist(address)": {
        "notice": "Mapping of deployer addresses to boolean whitelist status."
      }
    },
    "events": {
      "OwnerChanged(address,address)": {
        "notice": "Emitted when the owner of this contract changes."
      },
      "WhitelistDisabled(address)": {
        "notice": "Emitted when the whitelist is disabled."
      },
      "WhitelistStatusChanged(address,bool)": {
        "notice": "Emitted when the whitelist status of a deployer changes."
      }
    },
    "notice": "DeployerWhitelist is a legacy contract that was originally used to act as a whitelist of         addresses allowed to the Optimism network. The DeployerWhitelist has since been         disabled, but the code is kept in state for the sake of full backwards compatibility.         As of the Bedrock upgrade, the DeployerWhitelist is completely unused by the Optimism         system and could, in theory, be removed entirely."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {},
      "isDeployerAllowed(address)": {
        "params": {
          "_deployer": "Address to check."
        },
        "returns": {
          "_0": "Whether or not the address can deploy contracts."
        }
      },
      "setOwner(address)": {
        "params": {
          "_owner": "Address of the new owner."
        }
      },
      "setWhitelistedDeployer(address,bool)": {
        "params": {
          "_deployer": "Address to update permissions for.",
          "_isWhitelisted": "Whether or not the address is whitelisted."
        }
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "events": {
      "OwnerChanged(address,address)": {
        "params": {
          "newOwner": "Address of the new owner.",
          "oldOwner": "Address of the previous owner."
        }
      },
      "WhitelistDisabled(address)": {
        "params": {
          "oldOwner": "Address of the final owner of the whitelist."
        }
      },
      "WhitelistStatusChanged(address,bool)": {
        "params": {
          "deployer": "Address of the deployer.",
          "whitelisted": "Boolean indicating whether the deployer is whitelisted."
        }
      }
    },
    "title": "DeployerWhitelist"
  },
  "ast": {
    "absolutePath": "contracts/legacy/DeployerWhitelist.sol",
    "id": 41370,
    "exportedSymbols": {
      "DeployerWhitelist": [
        41369
      ],
      "Semver": [
        106075
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3662:82",
    "nodes": [
      {
        "id": 41224,
        "nodeType": "PragmaDirective",
        "src": "32:23:82",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 41226,
        "nodeType": "ImportDirective",
        "src": "57:49:82",
        "nodes": [],
        "absolutePath": "contracts/universal/Semver.sol",
        "file": "../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41370,
        "sourceUnit": 106076,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41225,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106075,
              "src": "66:6:82",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41369,
        "nodeType": "ContractDefinition",
        "src": "694:2999:82",
        "nodes": [
          {
            "id": 41232,
            "nodeType": "VariableDeclaration",
            "src": "885:20:82",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 41230,
              "nodeType": "StructuredDocumentation",
              "src": "737:143:82",
              "text": "@notice Address of the owner of this contract. Note that when this address is set to\n         address(0), the whitelist is disabled."
            },
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "900:5:82",
            "scope": 41369,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41231,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "885:7:82",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41237,
            "nodeType": "VariableDeclaration",
            "src": "987:41:82",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 41233,
              "nodeType": "StructuredDocumentation",
              "src": "912:70:82",
              "text": "@notice Mapping of deployer addresses to boolean whitelist status."
            },
            "functionSelector": "9b19251a",
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "1019:9:82",
            "scope": 41369,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 41236,
              "keyType": {
                "id": 41234,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "995:7:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "987:24:82",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 41235,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1006:4:82",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 41244,
            "nodeType": "EventDefinition",
            "src": "1205:55:82",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 41238,
              "nodeType": "StructuredDocumentation",
              "src": "1035:165:82",
              "text": "@notice Emitted when the owner of this contract changes.\n @param oldOwner Address of the previous owner.\n @param newOwner Address of the new owner."
            },
            "eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
            "name": "OwnerChanged",
            "nameLocation": "1211:12:82",
            "parameters": {
              "id": 41243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41240,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "1232:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41244,
                  "src": "1224:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1250:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41244,
                  "src": "1242:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1223:36:82"
            }
          },
          {
            "id": 41251,
            "nodeType": "EventDefinition",
            "src": "1474:65:82",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 41245,
              "nodeType": "StructuredDocumentation",
              "src": "1266:203:82",
              "text": "@notice Emitted when the whitelist status of a deployer changes.\n @param deployer    Address of the deployer.\n @param whitelisted Boolean indicating whether the deployer is whitelisted."
            },
            "eventSelector": "8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d",
            "name": "WhitelistStatusChanged",
            "nameLocation": "1480:22:82",
            "parameters": {
              "id": 41250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "deployer",
                  "nameLocation": "1511:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41251,
                  "src": "1503:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41249,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "whitelisted",
                  "nameLocation": "1526:11:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41251,
                  "src": "1521:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41248,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:36:82"
            }
          },
          {
            "id": 41256,
            "nodeType": "EventDefinition",
            "src": "1670:42:82",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 41252,
              "nodeType": "StructuredDocumentation",
              "src": "1545:120:82",
              "text": "@notice Emitted when the whitelist is disabled.\n @param oldOwner Address of the final owner of the whitelist."
            },
            "eventSelector": "c0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd4",
            "name": "WhitelistDisabled",
            "nameLocation": "1676:17:82",
            "parameters": {
              "id": 41255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "1702:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41256,
                  "src": "1694:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1693:18:82"
            }
          },
          {
            "id": 41269,
            "nodeType": "ModifierDefinition",
            "src": "1788:191:82",
            "nodes": [],
            "body": {
              "id": 41268,
              "nodeType": "Block",
              "src": "1809:170:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 41263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1840:3:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 41261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1840:10:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 41262,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41232,
                          "src": "1854:5:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1840:19:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e6572206f66207468697320636f6e7472616374",
                        "id": 41264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:78:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_944140597ff5a30538e0744b8160db7f0679e9e0dbeb6b224521a395f9d3eb37",
                          "typeString": "literal_string \"DeployerWhitelist: function can only be called by the owner of this contract\""
                        },
                        "value": "DeployerWhitelist: function can only be called by the owner of this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_944140597ff5a30538e0744b8160db7f0679e9e0dbeb6b224521a395f9d3eb37",
                          "typeString": "literal_string \"DeployerWhitelist: function can only be called by the owner of this contract\""
                        }
                      ],
                      "id": 41259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1819:7:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:142:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41266,
                  "nodeType": "ExpressionStatement",
                  "src": "1819:142:82"
                },
                {
                  "id": 41267,
                  "nodeType": "PlaceholderStatement",
                  "src": "1971:1:82"
                }
              ]
            },
            "documentation": {
              "id": 41257,
              "nodeType": "StructuredDocumentation",
              "src": "1718:65:82",
              "text": "@notice Blocks functions to anyone except the contract owner."
            },
            "name": "onlyOwner",
            "nameLocation": "1797:9:82",
            "parameters": {
              "id": 41258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:2:82"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41279,
            "nodeType": "FunctionDefinition",
            "src": "2014:32:82",
            "nodes": [],
            "body": {
              "id": 41278,
              "nodeType": "Block",
              "src": "2044:2:82",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 41270,
              "nodeType": "StructuredDocumentation",
              "src": "1985:24:82",
              "text": "@custom:semver 1.0.1"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 41273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2035:1:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "30",
                    "id": 41274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2038:1:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "hexValue": "31",
                    "id": 41275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2041:1:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 41276,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41272,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106075,
                  "src": "2028:6:82"
                },
                "nodeType": "ModifierInvocation",
                "src": "2028:15:82"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:2:82"
            },
            "returnParameters": {
              "id": 41277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2044:0:82"
            },
            "scope": 41369,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41301,
            "nodeType": "FunctionDefinition",
            "src": "2264:209:82",
            "nodes": [],
            "body": {
              "id": 41300,
              "nodeType": "Block",
              "src": "2355:118:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41289,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41237,
                        "src": "2365:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 41291,
                      "indexExpression": {
                        "id": 41290,
                        "name": "_deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41282,
                        "src": "2375:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2365:20:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41292,
                      "name": "_isWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41284,
                      "src": "2388:14:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2365:37:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41294,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:37:82"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41296,
                        "name": "_deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41282,
                        "src": "2440:9:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41297,
                        "name": "_isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41284,
                        "src": "2451:14:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41295,
                      "name": "WhitelistStatusChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41251,
                      "src": "2417:22:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 41298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:49:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41299,
                  "nodeType": "EmitStatement",
                  "src": "2412:54:82"
                }
              ]
            },
            "documentation": {
              "id": 41280,
              "nodeType": "StructuredDocumentation",
              "src": "2052:207:82",
              "text": "@notice Adds or removes an address from the deployment whitelist.\n @param _deployer      Address to update permissions for.\n @param _isWhitelisted Whether or not the address is whitelisted."
            },
            "functionSelector": "08fd6322",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41286,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41269,
                  "src": "2345:9:82"
                },
                "nodeType": "ModifierInvocation",
                "src": "2345:9:82"
              }
            ],
            "name": "setWhitelistedDeployer",
            "nameLocation": "2273:22:82",
            "parameters": {
              "id": 41285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41282,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nameLocation": "2304:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41301,
                  "src": "2296:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41284,
                  "mutability": "mutable",
                  "name": "_isWhitelisted",
                  "nameLocation": "2320:14:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41301,
                  "src": "2315:19:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2295:40:82"
            },
            "returnParameters": {
              "id": 41288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2355:0:82"
            },
            "scope": 41369,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41329,
            "nodeType": "FunctionDefinition",
            "src": "2579:547:82",
            "nodes": [],
            "body": {
              "id": 41328,
              "nodeType": "Block",
              "src": "2632:494:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 41315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41310,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41304,
                          "src": "2929:6:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 41313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2947:1:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 41312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2939:7:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41311,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2939:7:82",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2939:10:82",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2929:20:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706c6f79657257686974656c6973743a2063616e206f6e6c792062652064697361626c65642076696120656e61626c65417262697472617279436f6e74726163744465706c6f796d656e74",
                        "id": 41316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2963:79:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6078aace64c07e9c98ebaccae80d05c653e2b929f6126e2db8574ccdff4a07cd",
                          "typeString": "literal_string \"DeployerWhitelist: can only be disabled via enableArbitraryContractDeployment\""
                        },
                        "value": "DeployerWhitelist: can only be disabled via enableArbitraryContractDeployment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6078aace64c07e9c98ebaccae80d05c653e2b929f6126e2db8574ccdff4a07cd",
                          "typeString": "literal_string \"DeployerWhitelist: can only be disabled via enableArbitraryContractDeployment\""
                        }
                      ],
                      "id": 41309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2908:7:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:144:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41318,
                  "nodeType": "ExpressionStatement",
                  "src": "2908:144:82"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41320,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41232,
                        "src": "3081:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41321,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41304,
                        "src": "3088:6:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41319,
                      "name": "OwnerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41244,
                      "src": "3068:12:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 41322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3068:27:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41323,
                  "nodeType": "EmitStatement",
                  "src": "3063:32:82"
                },
                {
                  "expression": {
                    "id": 41326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41324,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41232,
                      "src": "3105:5:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41325,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41304,
                      "src": "3113:6:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3105:14:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41327,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:14:82"
                }
              ]
            },
            "documentation": {
              "id": 41302,
              "nodeType": "StructuredDocumentation",
              "src": "2479:95:82",
              "text": "@notice Updates the owner of this contract.\n @param _owner Address of the new owner."
            },
            "functionSelector": "13af4035",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41307,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41306,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41269,
                  "src": "2622:9:82"
                },
                "nodeType": "ModifierInvocation",
                "src": "2622:9:82"
              }
            ],
            "name": "setOwner",
            "nameLocation": "2588:8:82",
            "parameters": {
              "id": 41305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41304,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2605:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41329,
                  "src": "2597:14:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2596:16:82"
            },
            "returnParameters": {
              "id": 41308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2632:0:82"
            },
            "scope": 41369,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41347,
            "nodeType": "FunctionDefinition",
            "src": "3221:138:82",
            "nodes": [],
            "body": {
              "id": 41346,
              "nodeType": "Block",
              "src": "3285:74:82",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41336,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41232,
                        "src": "3318:5:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41335,
                      "name": "WhitelistDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41256,
                      "src": "3300:17:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 41337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3300:24:82",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41338,
                  "nodeType": "EmitStatement",
                  "src": "3295:29:82"
                },
                {
                  "expression": {
                    "id": 41344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41339,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41232,
                      "src": "3334:5:82",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 41342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3350:1:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 41341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3342:7:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3342:7:82",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3342:10:82",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3334:18:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41345,
                  "nodeType": "ExpressionStatement",
                  "src": "3334:18:82"
                }
              ]
            },
            "documentation": {
              "id": 41330,
              "nodeType": "StructuredDocumentation",
              "src": "3132:84:82",
              "text": "@notice Permanently enables arbitrary contract deployment and deletes the owner."
            },
            "functionSelector": "bdc7b54f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41333,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41332,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41269,
                  "src": "3275:9:82"
                },
                "nodeType": "ModifierInvocation",
                "src": "3275:9:82"
              }
            ],
            "name": "enableArbitraryContractDeployment",
            "nameLocation": "3230:33:82",
            "parameters": {
              "id": 41331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:2:82"
            },
            "returnParameters": {
              "id": 41334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3285:0:82"
            },
            "scope": 41369,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41368,
            "nodeType": "FunctionDefinition",
            "src": "3547:144:82",
            "nodes": [],
            "body": {
              "id": 41367,
              "nodeType": "Block",
              "src": "3622:69:82",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 41364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 41360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41355,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41232,
                            "src": "3640:5:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 41358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3657:1:82",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 41357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3649:7:82",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41356,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3649:7:82",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3649:10:82",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3640:19:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 41361,
                            "name": "whitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41237,
                            "src": "3663:9:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 41363,
                          "indexExpression": {
                            "id": 41362,
                            "name": "_deployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41350,
                            "src": "3673:9:82",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3663:20:82",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3640:43:82",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 41365,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3639:45:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41354,
                  "id": 41366,
                  "nodeType": "Return",
                  "src": "3632:52:82"
                }
              ]
            },
            "documentation": {
              "id": 41348,
              "nodeType": "StructuredDocumentation",
              "src": "3365:177:82",
              "text": "@notice Checks whether an address is allowed to deploy contracts.\n @param _deployer Address to check.\n @return Whether or not the address can deploy contracts."
            },
            "functionSelector": "b1540a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDeployerAllowed",
            "nameLocation": "3556:17:82",
            "parameters": {
              "id": 41351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41350,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nameLocation": "3582:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 41368,
                  "src": "3574:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3574:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3573:19:82"
            },
            "returnParameters": {
              "id": 41354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41368,
                  "src": "3616:4:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41352,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:4:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3615:6:82"
            },
            "scope": 41369,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41228,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106075,
              "src": "724:6:82"
            },
            "id": 41229,
            "nodeType": "InheritanceSpecifier",
            "src": "724:6:82"
          }
        ],
        "canonicalName": "DeployerWhitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 41227,
          "nodeType": "StructuredDocumentation",
          "src": "108:586:82",
          "text": "@custom:legacy\n @custom:proxied\n @custom:predeployed 0x4200000000000000000000000000000000000002\n @title DeployerWhitelist\n @notice DeployerWhitelist is a legacy contract that was originally used to act as a whitelist of\n         addresses allowed to the Optimism network. The DeployerWhitelist has since been\n         disabled, but the code is kept in state for the sake of full backwards compatibility.\n         As of the Bedrock upgrade, the DeployerWhitelist is completely unused by the Optimism\n         system and could, in theory, be removed entirely."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41369,
          106075
        ],
        "name": "DeployerWhitelist",
        "nameLocation": "703:17:82",
        "scope": 41370,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 82
}