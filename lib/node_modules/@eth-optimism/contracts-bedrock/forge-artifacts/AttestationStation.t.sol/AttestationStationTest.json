{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "about",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "AttestationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_attest_bulk_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_attest_individual_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_attest_single_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805460ff199081166001908117909255600480549091169091179055601b80546001600160a01b03199081169092179055601c80548216610100179055601d805490911661020017905534801561005e57600080fd5b5061317b8061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385226c811161008c578063b779116911610066578063b779116914610171578063ba414fa614610179578063e20c9f7114610191578063fa7626d41461019957600080fd5b806385226c811461014c578063916a17c614610161578063b5508aa91461016957600080fd5b80633e5e3c23116100c85780633e5e3c231461011f5780633f7286f41461012757806366d9a9a01461012f578063842184cc1461014457600080fd5b8063073b27cc146100ef5780630a9254e4146100f95780631ed7831c14610101575b600080fd5b6100f76101a6565b005b6100f761048b565b610109610790565b6040516101169190611fec565b60405180910390f35b6101096107ff565b61010961086c565b6101376108d9565b6040516101169190612046565b6100f76109ea565b6101546111d2565b60405161011691906121b2565b6101376112a2565b6101546113aa565b6100f761147a565b610181611ac3565b6040519015158152602001610116565b610109611c23565b6000546101819060ff1681565b60006040516101b490611fdf565b604051809103906000f0801580156101d0573d6000803e3d6000fd5b506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050601c54601b54604080518082018252600381527f6261720000000000000000000000000000000000000000000000000000000000602082015290517f666f6f0000000000000000000000000000000000000000000000000000000000955073ffffffffffffffffffffffffffffffffffffffff938416945092909116917f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d859161030d91612232565b60405180910390a4601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b5050601c54604080518082018252600381527f6261720000000000000000000000000000000000000000000000000000000000602082015290517f702b9dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808716955063702b9dee94506104569316917f666f6f00000000000000000000000000000000000000000000000000000000009160040161224c565b600060405180830381600087803b15801561047057600080fd5b505af1158015610484573d6000803e3d6000fd5b5050505050565b601b546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050601b54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600e60448201527f616c6963655f6174746573746f720000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b5050601c54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600360448201527f626f6200000000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156106ac57600080fd5b505af11580156106c0573d6000803e3d6000fd5b5050601d54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600560448201527f73616c6c790000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156107f557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156107f55760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156107f55760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109e157600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156109c957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116109765790505b505050505081525050815260200190600101906108fd565b50505050905090565b60006040516109f890611fdf565b604051809103906000f080158015610a14573d6000803e3d6000fd5b50601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610a9757600080fd5b505af1158015610aab573d6000803e3d6000fd5b506000925060039150610abb9050565b604051908082528060200260200182016040528015610b0857816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081610ad95790505b5090506040518060600160405280601c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017f746573742d6b65793a737472696e67000000000000000000000000000000000081526020016040518060400160405280600a81526020017f746573742d76616c75650000000000000000000000000000000000000000000081525081525081600081518110610bc657610bc66122b9565b60200260200101819052506040518060600160405280601c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017f746573742d6b657932000000000000000000000000000000000000000000000081526020016040518060400160405280600b81526020017f746573742d76616c75653200000000000000000000000000000000000000000081525081525081600181518110610c8c57610c8c6122b9565b60200260200101819052506040518060600160405280601d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017f746573742d6b65793a737472696e67000000000000000000000000000000000081526020016040518060400160405280600b81526020017f746573742d76616c75653300000000000000000000000000000000000000000081525081525081600281518110610d5257610d526122b9565b60209081029190910101526040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690635eb5ea1090610daf9084906004016122e8565b600060405180830381600087803b158015610dc957600080fd5b505af1158015610ddd573d6000803e3d6000fd5b5050601b548351610f2a935073ffffffffffffffffffffffffffffffffffffffff80871693506329b42cb59216908590600090610e1c57610e1c6122b9565b60200260200101516000015185600081518110610e3b57610e3b6122b9565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381865afa158015610ec0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f06919081019061239b565b82600081518110610f1957610f196122b9565b602002602001015160400151611c90565b61107c8273ffffffffffffffffffffffffffffffffffffffff166329b42cb5601b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600181518110610f7f57610f7f6122b9565b60200260200101516000015185600181518110610f9e57610f9e6122b9565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381865afa158015611023573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611069919081019061239b565b82600181518110610f1957610f196122b9565b6111ce8273ffffffffffffffffffffffffffffffffffffffff166329b42cb5601b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846002815181106110d1576110d16122b9565b602002602001015160000151856002815181106110f0576110f06122b9565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381865afa158015611175573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111bb919081019061239b565b82600281518110610f1957610f196122b9565b5050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156109e157838290600052602060002001805461121590612466565b80601f016020809104026020016040519081016040528092919081815260200182805461124190612466565b801561128e5780601f106112635761010080835404028352916020019161128e565b820191906000526020600020905b81548152906001019060200180831161127157829003601f168201915b5050505050815260200190600101906111f6565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109e157600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561139257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161133f5790505b505050505081525050815260200190600101906112c6565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156109e15783829060005260206000200180546113ed90612466565b80601f016020809104026020016040519081016040528092919081815260200182805461141990612466565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b5050505050815260200190600101906113ce565b600060405161148890611fdf565b604051809103906000f0801580156114a4573d6000803e3d6000fd5b5060408051600180825281830190925291925060009190816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816114c05790505060408051606081018252601c5473ffffffffffffffffffffffffffffffffffffffff90811682527f746573742d6b65793a737472696e670000000000000000000000000000000000602080840191825284518086018652600a81527f746573742d76616c7565000000000000000000000000000000000000000000009181019190915283850152601b548351915194517f29b42cb50000000000000000000000000000000000000000000000000000000081529083166004820152908216602482015260448101939093529293509161164791908516906329b42cb590606401600060405180830381865afa1580156115ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611632919081019061239b565b60405180602001604052806000815250611c90565b601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156116c657600080fd5b505af11580156116da573d6000803e3d6000fd5b5050505080826000815181106116f2576116f26122b9565b60209081029190910101526040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690635eb5ea109061174f9085906004016122e8565b600060405180830381600087803b15801561176957600080fd5b505af115801561177d573d6000803e3d6000fd5b5050601b54835160208501516040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015291831660248301526044820152611859935090861691506329b42cb590606401600060405180830381865afa158015611809573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261184f919081019061239b565b8260400151611c90565b604080518082018252601181527f6e657720757064617465642076616c75650000000000000000000000000000006020808301919091528251606081018452845173ffffffffffffffffffffffffffffffffffffffff90811682529482015191810191909152808301829052601b5492517fca669fa700000000000000000000000000000000000000000000000000000000815292909316600483015290737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561193057600080fd5b505af1158015611944573d6000803e3d6000fd5b50505050818360008151811061195c5761195c6122b9565b60209081029190910101526040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851690635eb5ea10906119b99086906004016122e8565b600060405180830381600087803b1580156119d357600080fd5b505af11580156119e7573d6000803e3d6000fd5b5050601b54845160208601516040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201529183166024830152604482015261078a935090871691506329b42cb590606401600060405180830381865afa158015611a73573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ab9919081019061239b565b8360400151611c90565b60008054610100900460ff1615611ae35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611c1e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091611b88917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016124b9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611bc091612501565b6000604051808303816000865af19150503d8060008114611bfd576040519150601f19603f3d011682016040523d82523d6000602084013e611c02565b606091505b5091505080806020019051810190611c1a919061251d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156107f55760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575050505050905090565b6111ce8282611c9f8282611da6565b6111ce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611d289060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f65735d0000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051611d5f919061253f565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1882604051611d969190612586565b60405180910390a16111ce611e63565b805182516001919003611e595760005b8351811015611e5357828181518110611dd157611dd16122b9565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110611e1057611e106122b9565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614611e4157600091505b80611e4b816125cd565b915050611db6565b50611e5d565b5060005b92915050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611fb15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611f3292916020016124b9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611f6a91612501565b6000604051808303816000865af19150503d8060008114611fa7576040519150601f19603f3d011682016040523d82523d6000602084013e611fac565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b610b428061262d83390190565b6020808252825182820181905260009190848201906040850190845b8181101561203a57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612008565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561212d578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156121185783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906120d6565b50978a0197955050509187019160010161206e565b50919998505050505050505050565b60005b8381101561215757818101518382015260200161213f565b8381111561078a5750506000910152565b6000815180845261218081602086016020860161213c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612225577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612213858351612168565b945092850192908501906001016121d9565b5092979650505050505050565b6020815260006122456020830184612168565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006122816060830184612168565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561238d578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528781015188850152860151606087850181905261237981860183612168565b96890196945050509086019060010161230f565b509098975050505050505050565b6000602082840312156123ad57600080fd5b815167ffffffffffffffff808211156123c557600080fd5b818401915084601f8301126123d957600080fd5b8151818111156123eb576123eb61228a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156124315761243161228a565b8160405282815287602084870101111561244a57600080fd5b61245b83602083016020880161213c565b979650505050505050565b600181811c9082168061247a57607f821691505b6020821081036124b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516124f381600485016020870161213c565b919091016004019392505050565b6000825161251381846020870161213c565b9190910192915050565b60006020828403121561252f57600080fd5b8151801515811461224557600080fd5b60408152600a60408201527f202045787065637465640000000000000000000000000000000000000000000060608201526080602082015260006122456080830184612168565b60408152600a60408201527f2020202041637475616c0000000000000000000000000000000000000000000060608201526080602082015260006122456080830184612168565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612625577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fe60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c051610af361004f60003960006101ad015260006101840152600061015b0152610af36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f36600461046c565b6100aa565b604051610071919061051e565b60405180910390f35b610064610154565b610095610090366004610538565b6101f7565b005b6100956100a5366004610687565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d3906106de565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff906106de565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f0000000000000000000000000000000000000000000000000000000000000000610306565b6101a87f0000000000000000000000000000000000000000000000000000000000000000610306565b6101d17f0000000000000000000000000000000000000000000000000000000000000000610306565b6040516020016101e393929190610731565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176107a7565b905060200281019061022991906107d6565b61023290610814565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320858452909152902061029a82826108df565b50818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102f9919061051e565b60405180910390a4505050565b60608160000361034957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610373578061035d81610a28565b915061036c9050600a83610a8f565b915061034d565b60008167ffffffffffffffff81111561038e5761038e6105ad565b6040519080825280601f01601f1916602001820160405280156103b8576020820181803683370190505b5090505b841561043b576103cd600183610aa3565b91506103da600a86610aba565b6103e5906030610ace565b60f81b8183815181106103fa576103fa6107a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610434600a86610a8f565b94506103bc565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461046757600080fd5b919050565b60008060006060848603121561048157600080fd5b61048a84610443565b925061049860208501610443565b9150604084013590509250925092565b60005b838110156104c35781810151838201526020016104ab565b838111156102545750506000910152565b600081518084526104ec8160208601602086016104a8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061053160208301846104d4565b9392505050565b6000806020838503121561054b57600080fd5b823567ffffffffffffffff8082111561056357600080fd5b818501915085601f83011261057757600080fd5b81358181111561058657600080fd5b8660208260051b850101111561059b57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126105ed57600080fd5b813567ffffffffffffffff80821115610608576106086105ad565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561064e5761064e6105ad565b8160405283815286602085880101111561066757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561069c57600080fd5b6106a584610443565b925060208401359150604084013567ffffffffffffffff8111156106c857600080fd5b6106d4868287016105dc565b9150509250925092565b600181811c908216806106f257607f821691505b60208210810361072b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600084516107438184602089016104a8565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161077f816001850160208a016104a8565b6001920191820152835161079a8160028401602088016104a8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261080a57600080fd5b9190910192915050565b60006060823603121561082657600080fd5b6040516060810167ffffffffffffffff828210818311171561084a5761084a6105ad565b8160405261085785610443565b835260208501356020840152604085013591508082111561087757600080fd5b50610884368286016105dc565b60408301525092915050565b601f8211156108da57600081815260208120601f850160051c810160208610156108b75750805b601f850160051c820191505b818110156108d6578281556001016108c3565b5050505b505050565b815167ffffffffffffffff8111156108f9576108f96105ad565b61090d8161090784546106de565b84610890565b602080601f831160018114610960576000841561092a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556108d6565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156109ad5788860151825594840194600190910190840161098e565b50858210156109e957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5957610a596109f9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a9e57610a9e610a60565b500490565b600082821015610ab557610ab56109f9565b500390565b600082610ac957610ac9610a60565b500690565b60008219821115610ae157610ae16109f9565b50019056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "602:4248:126:-:0;;;;;1572:26:266;;;-1:-1:-1;;1572:26:266;;;1594:4;1572:26;;;;;;3161:44:269;;;;;;;;;;;259:37:126;;;-1:-1:-1;;;;;;259:37:126;;;;;;;;302:26;;;;;1572::266;302::126;;;334:28;;;;;;358:3;334:28;;;602:4248;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806385226c811161008c578063b779116911610066578063b779116914610171578063ba414fa614610179578063e20c9f7114610191578063fa7626d41461019957600080fd5b806385226c811461014c578063916a17c614610161578063b5508aa91461016957600080fd5b80633e5e3c23116100c85780633e5e3c231461011f5780633f7286f41461012757806366d9a9a01461012f578063842184cc1461014457600080fd5b8063073b27cc146100ef5780630a9254e4146100f95780631ed7831c14610101575b600080fd5b6100f76101a6565b005b6100f761048b565b610109610790565b6040516101169190611fec565b60405180910390f35b6101096107ff565b61010961086c565b6101376108d9565b6040516101169190612046565b6100f76109ea565b6101546111d2565b60405161011691906121b2565b6101376112a2565b6101546113aa565b6100f761147a565b610181611ac3565b6040519015158152602001610116565b610109611c23565b6000546101819060ff1681565b60006040516101b490611fdf565b604051809103906000f0801580156101d0573d6000803e3d6000fd5b506040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050601c54601b54604080518082018252600381527f6261720000000000000000000000000000000000000000000000000000000000602082015290517f666f6f0000000000000000000000000000000000000000000000000000000000955073ffffffffffffffffffffffffffffffffffffffff938416945092909116917f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d859161030d91612232565b60405180910390a4601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b5050601c54604080518082018252600381527f6261720000000000000000000000000000000000000000000000000000000000602082015290517f702b9dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808716955063702b9dee94506104569316917f666f6f00000000000000000000000000000000000000000000000000000000009160040161224c565b600060405180830381600087803b15801561047057600080fd5b505af1158015610484573d6000803e3d6000fd5b5050505050565b601b546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b5050601b54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600e60448201527f616c6963655f6174746573746f720000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b5050601c54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600360448201527f626f6200000000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156106ac57600080fd5b505af11580156106c0573d6000803e3d6000fd5b5050601d54604080517fc657c71800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152600560448201527f73616c6c790000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156107f557602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156107f55760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156107f55760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109e157600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff1683526001810180548351818702810187019094528084529394919385830193928301828280156109c957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116109765790505b505050505081525050815260200190600101906108fd565b50505050905090565b60006040516109f890611fdf565b604051809103906000f080158015610a14573d6000803e3d6000fd5b50601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610a9757600080fd5b505af1158015610aab573d6000803e3d6000fd5b506000925060039150610abb9050565b604051908082528060200260200182016040528015610b0857816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081610ad95790505b5090506040518060600160405280601c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017f746573742d6b65793a737472696e67000000000000000000000000000000000081526020016040518060400160405280600a81526020017f746573742d76616c75650000000000000000000000000000000000000000000081525081525081600081518110610bc657610bc66122b9565b60200260200101819052506040518060600160405280601c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017f746573742d6b657932000000000000000000000000000000000000000000000081526020016040518060400160405280600b81526020017f746573742d76616c75653200000000000000000000000000000000000000000081525081525081600181518110610c8c57610c8c6122b9565b60200260200101819052506040518060600160405280601d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020017f746573742d6b65793a737472696e67000000000000000000000000000000000081526020016040518060400160405280600b81526020017f746573742d76616c75653300000000000000000000000000000000000000000081525081525081600281518110610d5257610d526122b9565b60209081029190910101526040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690635eb5ea1090610daf9084906004016122e8565b600060405180830381600087803b158015610dc957600080fd5b505af1158015610ddd573d6000803e3d6000fd5b5050601b548351610f2a935073ffffffffffffffffffffffffffffffffffffffff80871693506329b42cb59216908590600090610e1c57610e1c6122b9565b60200260200101516000015185600081518110610e3b57610e3b6122b9565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381865afa158015610ec0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f06919081019061239b565b82600081518110610f1957610f196122b9565b602002602001015160400151611c90565b61107c8273ffffffffffffffffffffffffffffffffffffffff166329b42cb5601b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600181518110610f7f57610f7f6122b9565b60200260200101516000015185600181518110610f9e57610f9e6122b9565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381865afa158015611023573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611069919081019061239b565b82600181518110610f1957610f196122b9565b6111ce8273ffffffffffffffffffffffffffffffffffffffff166329b42cb5601b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846002815181106110d1576110d16122b9565b602002602001015160000151856002815181106110f0576110f06122b9565b60209081029190910181015101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff93841660048201529290911660248301526044820152606401600060405180830381865afa158015611175573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111bb919081019061239b565b82600281518110610f1957610f196122b9565b5050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156109e157838290600052602060002001805461121590612466565b80601f016020809104026020016040519081016040528092919081815260200182805461124190612466565b801561128e5780601f106112635761010080835404028352916020019161128e565b820191906000526020600020905b81548152906001019060200180831161127157829003601f168201915b5050505050815260200190600101906111f6565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109e157600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561139257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161133f5790505b505050505081525050815260200190600101906112c6565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156109e15783829060005260206000200180546113ed90612466565b80601f016020809104026020016040519081016040528092919081815260200182805461141990612466565b80156114665780601f1061143b57610100808354040283529160200191611466565b820191906000526020600020905b81548152906001019060200180831161144957829003601f168201915b5050505050815260200190600101906113ce565b600060405161148890611fdf565b604051809103906000f0801580156114a4573d6000803e3d6000fd5b5060408051600180825281830190925291925060009190816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816114c05790505060408051606081018252601c5473ffffffffffffffffffffffffffffffffffffffff90811682527f746573742d6b65793a737472696e670000000000000000000000000000000000602080840191825284518086018652600a81527f746573742d76616c7565000000000000000000000000000000000000000000009181019190915283850152601b548351915194517f29b42cb50000000000000000000000000000000000000000000000000000000081529083166004820152908216602482015260448101939093529293509161164791908516906329b42cb590606401600060405180830381865afa1580156115ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611632919081019061239b565b60405180602001604052806000815250611c90565b601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156116c657600080fd5b505af11580156116da573d6000803e3d6000fd5b5050505080826000815181106116f2576116f26122b9565b60209081029190910101526040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690635eb5ea109061174f9085906004016122e8565b600060405180830381600087803b15801561176957600080fd5b505af115801561177d573d6000803e3d6000fd5b5050601b54835160208501516040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015291831660248301526044820152611859935090861691506329b42cb590606401600060405180830381865afa158015611809573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261184f919081019061239b565b8260400151611c90565b604080518082018252601181527f6e657720757064617465642076616c75650000000000000000000000000000006020808301919091528251606081018452845173ffffffffffffffffffffffffffffffffffffffff90811682529482015191810191909152808301829052601b5492517fca669fa700000000000000000000000000000000000000000000000000000000815292909316600483015290737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561193057600080fd5b505af1158015611944573d6000803e3d6000fd5b50505050818360008151811061195c5761195c6122b9565b60209081029190910101526040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851690635eb5ea10906119b99086906004016122e8565b600060405180830381600087803b1580156119d357600080fd5b505af11580156119e7573d6000803e3d6000fd5b5050601b54845160208601516040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201529183166024830152604482015261078a935090871691506329b42cb590606401600060405180830381865afa158015611a73573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611ab9919081019061239b565b8360400151611c90565b60008054610100900460ff1615611ae35750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611c1e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091611b88917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016124b9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611bc091612501565b6000604051808303816000865af19150503d8060008114611bfd576040519150601f19603f3d011682016040523d82523d6000602084013e611c02565b606091505b5091505080806020019051810190611c1a919061251d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156107f55760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116107ca575050505050905090565b6111ce8282611c9f8282611da6565b6111ce577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611d289060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201527f65735d0000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051611d5f919061253f565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1882604051611d969190612586565b60405180910390a16111ce611e63565b805182516001919003611e595760005b8351811015611e5357828181518110611dd157611dd16122b9565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110611e1057611e106122b9565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614611e4157600091505b80611e4b816125cd565b915050611db6565b50611e5d565b5060005b92915050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611fb15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611f3292916020016124b9565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611f6a91612501565b6000604051808303816000865af19150503d8060008114611fa7576040519150601f19603f3d011682016040523d82523d6000602084013e611fac565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b610b428061262d83390190565b6020808252825182820181905260009190848201906040850190845b8181101561203a57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612008565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561212d578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156121185783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906120d6565b50978a0197955050509187019160010161206e565b50919998505050505050505050565b60005b8381101561215757818101518382015260200161213f565b8381111561078a5750506000910152565b6000815180845261218081602086016020860161213c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612225577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452612213858351612168565b945092850192908501906001016121d9565b5092979650505050505050565b6020815260006122456020830184612168565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006122816060830184612168565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561238d578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528781015188850152860151606087850181905261237981860183612168565b96890196945050509086019060010161230f565b509098975050505050505050565b6000602082840312156123ad57600080fd5b815167ffffffffffffffff808211156123c557600080fd5b818401915084601f8301126123d957600080fd5b8151818111156123eb576123eb61228a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156124315761243161228a565b8160405282815287602084870101111561244a57600080fd5b61245b83602083016020880161213c565b979650505050505050565b600181811c9082168061247a57607f821691505b6020821081036124b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516124f381600485016020870161213c565b919091016004019392505050565b6000825161251381846020870161213c565b9190910192915050565b60006020828403121561252f57600080fd5b8151801515811461224557600080fd5b60408152600a60408201527f202045787065637465640000000000000000000000000000000000000000000060608201526080602082015260006122456080830184612168565b60408152600a60408201527f2020202041637475616c0000000000000000000000000000000000000000000060608201526080602082015260006122456080830184612168565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612625577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fe60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c051610af361004f60003960006101ad015260006101840152600061015b0152610af36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f36600461046c565b6100aa565b604051610071919061051e565b60405180910390f35b610064610154565b610095610090366004610538565b6101f7565b005b6100956100a5366004610687565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d3906106de565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff906106de565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f0000000000000000000000000000000000000000000000000000000000000000610306565b6101a87f0000000000000000000000000000000000000000000000000000000000000000610306565b6101d17f0000000000000000000000000000000000000000000000000000000000000000610306565b6040516020016101e393929190610731565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176107a7565b905060200281019061022991906107d6565b61023290610814565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320858452909152902061029a82826108df565b50818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102f9919061051e565b60405180910390a4505050565b60608160000361034957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610373578061035d81610a28565b915061036c9050600a83610a8f565b915061034d565b60008167ffffffffffffffff81111561038e5761038e6105ad565b6040519080825280601f01601f1916602001820160405280156103b8576020820181803683370190505b5090505b841561043b576103cd600183610aa3565b91506103da600a86610aba565b6103e5906030610ace565b60f81b8183815181106103fa576103fa6107a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610434600a86610a8f565b94506103bc565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461046757600080fd5b919050565b60008060006060848603121561048157600080fd5b61048a84610443565b925061049860208501610443565b9150604084013590509250925092565b60005b838110156104c35781810151838201526020016104ab565b838111156102545750506000910152565b600081518084526104ec8160208601602086016104a8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061053160208301846104d4565b9392505050565b6000806020838503121561054b57600080fd5b823567ffffffffffffffff8082111561056357600080fd5b818501915085601f83011261057757600080fd5b81358181111561058657600080fd5b8660208260051b850101111561059b57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126105ed57600080fd5b813567ffffffffffffffff80821115610608576106086105ad565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561064e5761064e6105ad565b8160405283815286602085880101111561066757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561069c57600080fd5b6106a584610443565b925060208401359150604084013567ffffffffffffffff8111156106c857600080fd5b6106d4868287016105dc565b9150509250925092565b600181811c908216806106f257607f821691505b60208210810361072b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600084516107438184602089016104a8565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161077f816001850160208a016104a8565b6001920191820152835161079a8160028401602088016104a8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261080a57600080fd5b9190910192915050565b60006060823603121561082657600080fd5b6040516060810167ffffffffffffffff828210818311171561084a5761084a6105ad565b8160405261085785610443565b835260208501356020840152604085013591508082111561087757600080fd5b50610884368286016105dc565b60408301525092915050565b601f8211156108da57600081815260208120601f850160051c810160208610156108b75750805b601f850160051c820191505b818110156108d6578281556001016108c3565b5050505b505050565b815167ffffffffffffffff8111156108f9576108f96105ad565b61090d8161090784546106de565b84610890565b602080601f831160018114610960576000841561092a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556108d6565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156109ad5788860151825594840194600190910190840161098e565b50858210156109e957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5957610a596109f9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a9e57610a9e610a60565b500490565b600082821015610ab557610ab56109f9565b500390565b600082610ac957610ac9610a60565b500690565b60008219821115610ae157610ae16109f9565b50019056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "602:4248:126:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:394;;;:::i;:::-;;369:229;;;:::i;2161:134:272:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;3196:1652:126:-;;;:::i;2301:140:272:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1223:1967:126:-;;;:::i;1819:584:266:-;;;:::i;:::-;;;4021:14:283;;4014:22;3996:41;;3984:2;3969:18;1819:584:266;3856:187:283;2013:142:272;;;:::i;1572:26:266:-;;;;;;;;;823:394:126;885:37;925:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;960:37:126;;;;;974:4;960:37;;;4255:41:283;;;4312:18;;;4305:50;;;4371:18;;;4364:50;;;4430:18;;;4423:50;885:64:126;;-1:-1:-1;960:13:126;;;;4227:19:283;;960:37:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1047:3:126;;1031:14;;1068:12;;;;;;;;;;;;;;;;1012:69;;1052:14;;-1:-1:-1;1047:3:126;;;;;-1:-1:-1;1031:14:126;;;;;1012:69;;;;;:::i;:::-;;;;;;;;1101:14;;1092:24;;;;;:8;1101:14;;;1092:24;;;4853:74:283;1092:8:126;;;;4826:18:283;;1092:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1162:3:126;;1195:12;;;;;;;;;;;;;;;;1126:84;;;;;:25;;;;;-1:-1:-1;1126:25:126;;-1:-1:-1;1126:84:126;;1162:3;;1173:14;;1126:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:342;823:394::o;369:229::-;450:14;;442:32;;;;;:7;450:14;;;442:32;;;5552:74:283;466:7:126;5642:18:283;;;5635:34;442:7:126;;;;5525:18:283;;442:32:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;494:14:126;;485:42;;;;;;:8;494:14;;;485:42;;;5892:74:283;5982:18;;;5975:30;6041:2;6021:18;;;6014:30;6080:16;6060:18;;;6053:44;485:8:126;;-1:-1:-1;485:8:126;;-1:-1:-1;6114:19:283;;485:42:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;546:3:126;;537:20;;;;;;:8;546:3;;;537:20;;;6356:74:283;6446:18;;;6439:30;6505:1;6485:18;;;6478:29;6543:5;6523:18;;;6516:33;537:8:126;;-1:-1:-1;537:8:126;;-1:-1:-1;6566:19:283;;537:20:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;576:5:126;;567:24;;;;;;:8;576:5;;;567:24;;;6808:74:283;6898:18;;;6891:30;6957:1;6937:18;;;6930:29;6995:7;6975:18;;;6968:35;567:8:126;;-1:-1:-1;567:8:126;;-1:-1:-1;7020:19:283;;567:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:229::o;2161:134:272:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;3196:1652:126:-;3252:37;3292:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3336:14:126;;3327:24;;;;;:8;3336:14;;;3327:24;;;4853:74:283;3252:64:126;;-1:-1:-1;3327:8:126;;;;4826:18:283;;3327:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:71:126;;-1:-1:-1;3477:1:126;;-1:-1:-1;3436:43:126;;-1:-1:-1;3436:43:126;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3436:43:126;;;;;;;;;;;;;;;;3362:117;;3510:153;;;;;;;;3566:3;;;;;;;;;;;3510:153;;;;;;3588:26;3510:153;;;;3633:19;;;;;;;;;;;;;;;;;3510:153;;;3489:15;3505:1;3489:18;;;;;;;;:::i;:::-;;;;;;:174;;;;3695:148;;;;;;;;3751:3;;;;;;;;;;;3695:148;;;;;;3773:20;3695:148;;;;3812:20;;;;;;;;;;;;;;;;;3695:148;;;3674:15;3690:1;3674:18;;;;;;;;:::i;:::-;;;;;;:169;;;;3875:156;;;;;;;;3931:5;;;;;;;;;;;3875:156;;;;;;3955:26;3875:156;;;;4000:20;;;;;;;;;;;;;;;;;3875:156;;;3854:15;3870:1;3854:18;;;;;;;;:::i;:::-;;;;;;;;;;:177;4042:42;;;;;:25;;;;;;:42;;4068:15;;4042:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4211:14:126;;4243:18;;4140:227;;-1:-1:-1;4162:31:126;;;;;-1:-1:-1;4162:31:126;;4211:14;;4243:15;;4211:14;;4243:18;;;;:::i;:::-;;;;;;;:24;;;4285:15;4301:1;4285:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;4162:159;;;;;;;;;;8881:42:283;8950:15;;;4162:159:126;;;8932:34:283;9002:15;;;;8982:18;;;8975:43;9034:18;;;9027:34;8844:18;;4162:159:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4335:15;4351:1;4335:18;;;;;;;;:::i;:::-;;;;;;;:22;;;4140:8;:227::i;:::-;4377;4399:18;:31;;;4448:14;;;;;;;;;;;4480:15;4496:1;4480:18;;;;;;;;:::i;:::-;;;;;;;:24;;;4522:15;4538:1;4522:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;4399:159;;;;;;;;;;8881:42:283;8950:15;;;4399:159:126;;;8932:34:283;9002:15;;;;8982:18;;;8975:43;9034:18;;;9027:34;8844:18;;4399:159:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4572:15;4588:1;4572:18;;;;;;;;:::i;4377:227::-;4614;4636:18;:31;;;4685:14;;;;;;;;;;;4717:15;4733:1;4717:18;;;;;;;;:::i;:::-;;;;;;;:24;;;4759:15;4775:1;4759:18;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;4636:159;;;;;;;;;;8881:42:283;8950:15;;;4636:159:126;;;8932:34:283;9002:15;;;;8982:18;;;8975:43;9034:18;;;9027:34;8844:18;;4636:159:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4809:15;4825:1;4809:18;;;;;;;;:::i;4614:227::-;3242:1606;;3196:1652::o;2301:140:272:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1223:1967:126;1281:37;1321:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1433:43:126;;;1474:1;1433:43;;;;;;;;;1281:64;;-1:-1:-1;1356:74:126;;1433:43;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1433:43:126;;;;;;;;;;;;;;-1:-1:-1;1593:182:126;;;;;;;;1666:3;;;;;;1593:182;;1692:26;1593:182;;;;;;;1741:19;;;;;;;;;;;;;;;;;;1593:182;;;;1904:14;;1936:21;;1975:19;;1855:153;;;;;1904:14;;;1855:153;;;8932:34:283;9002:15;;;8982:18;;;8975:43;9034:18;;;9027:34;;;;1356:120:126;;-1:-1:-1;1593:182:126;1833:201;;1855:31;;;;;;8844:18:283;;1855:153:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1833:201;;;;;;;;;;;;:8;:201::i;:::-;2082:14;;2073:24;;;;;:8;2082:14;;;2073:24;;;4853:74:283;2073:8:126;;;;4826:18:283;;2073:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:15;2107:18;2126:1;2107:21;;;;;;;;:::i;:::-;;;;;;;;;;:39;2156:45;;;;;:25;;;;;;:45;;2182:18;;2156:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2326:14:126;;2358:21;;2397:19;;;;2277:153;;;;;:31;2326:14;;;2277:153;;;8932:34:283;9002:15;;;8982:18;;;8975:43;9034:18;;;9027:34;2255:218:126;;-1:-1:-1;2277:31:126;;;;-1:-1:-1;2277:31:126;;8844:18:283;;2277:153:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2444:15;:19;;;2255:8;:218::i;:::-;2507:26;;;;;;;;;;;;;;;;;;;;2618:152;;;;;;;2674:21;;2618:152;;;;;;2714:19;;;;2618:152;;;;;;;;;;;;;2790:14;;2781:24;;;;;2790:14;;;;2781:24;;;4853:74:283;2507:26:126;2781:8;;;;4826:18:283;;2781:24:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:15;2815:18;2834:1;2815:21;;;;;;;;:::i;:::-;;;;;;;;;;:39;2864:45;;;;;:25;;;;;;:45;;2890:18;;2864:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3036:14:126;;3068:21;;3107:19;;;;2987:153;;;;;:31;3036:14;;;2987:153;;;8932:34:283;9002:15;;;8982:18;;;8975:43;9034:18;;;9027:34;2965:218:126;;-1:-1:-1;2987:31:126;;;;-1:-1:-1;2987:31:126;;8844:18:283;;2987:153:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3154:15;:19;;;2965:8;:218::i;1819:584:266:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:266;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5552:74:283;;;2221:17:266;5642:18:283;;;5635:34;2196:43:266;;;;;;;;;5525:18:283;;;2196:43:266;;;-1:-1:-1;;1671:64:266;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:266:o;2013:142:272:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1299:99:268:-;1376:15;1386:1;1389;15722:14:266;15731:1;15734;15722:8;:14::i;:::-;15717:215;;15757:42;;;;;11948:2:283;11930:21;;;11987:2;11967:18;;;11960:30;12026:34;12021:2;12006:18;;11999:62;12097:5;12092:2;12077:18;;12070:33;12135:3;12120:19;;11746:399;15757:42:266;;;;;;;;15818:32;15848:1;15818:32;;;;;;:::i;:::-;;;;;;;;15869;15899:1;15869:32;;;;;;:::i;:::-;;;;;;;;15915:6;:4;:6::i;15297:345::-;15424:8;;15412;;15394:4;;15412:20;;15408:228;;15453:6;15448:137;15469:1;:8;15465:1;:12;15448:137;;;15514:1;15516;15514:4;;;;;;;;:::i;:::-;;;;;;;;;15506:12;;;:1;15508;15506:4;;;;;;;;:::i;:::-;;;;;;;:12;15502:69;;15547:5;15542:10;;15502:69;15479:3;;;;:::i;:::-;;;;15448:137;;;;15408:228;;;-1:-1:-1;15620:5:266;15408:228;15297:345;;;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;13616:74:283;;;2670:17:266;13706:18:283;;;13699:34;;;;2705:4:266;13749:18:283;;;13742:34;2482:11:266;;1671:64;2579:43;;13589:18:283;;2645:67:266;;;;;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;;;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:266;2813:7;:14;;;;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;14:681:283:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:283;;14:681;-1:-1:-1;;;;;;14:681:283:o;700:1699::-;906:4;935:2;975;964:9;960:18;1005:2;994:9;987:21;1028:6;1063;1057:13;1094:6;1086;1079:22;1120:2;1110:12;;1153:2;1142:9;1138:18;1131:25;;1215:2;1205:6;1202:1;1198:14;1187:9;1183:30;1179:39;1253:2;1245:6;1241:15;1274:1;1295;1305:1065;1321:6;1316:3;1313:15;1305:1065;;;1390:22;;;1414:66;1386:95;1374:108;;1505:13;;1592:9;;1603:42;1588:58;1573:74;;1686:11;;1680:18;1718:15;;;1711:27;;;1799:19;;1545:15;;;1831:24;;;1921:21;;;;1966:1;;1889:2;1877:15;;;1980:282;1996:8;1991:3;1988:17;1980:282;;;2077:15;;2094:66;2073:88;2059:103;;2231:17;;;;2024:1;2015:11;;;;;2188:14;;;;1980:282;;;-1:-1:-1;2348:12:283;;;;2285:5;-1:-1:-1;;;2313:15:283;;;;1347:1;1338:11;1305:1065;;;-1:-1:-1;2387:6:283;;700:1699;-1:-1:-1;;;;;;;;;700:1699:283:o;2404:258::-;2476:1;2486:113;2500:6;2497:1;2494:13;2486:113;;;2576:11;;;2570:18;2557:11;;;2550:39;2522:2;2515:10;2486:113;;;2617:6;2614:1;2611:13;2608:48;;;-1:-1:-1;;2652:1:283;2634:16;;2627:27;2404:258::o;2667:317::-;2709:3;2747:5;2741:12;2774:6;2769:3;2762:19;2790:63;2846:6;2839:4;2834:3;2830:14;2823:4;2816:5;2812:16;2790:63;:::i;:::-;2898:2;2886:15;2903:66;2882:88;2873:98;;;;2973:4;2869:109;;2667:317;-1:-1:-1;;2667:317:283:o;2989:862::-;3151:4;3180:2;3220;3209:9;3205:18;3250:2;3239:9;3232:21;3273:6;3308;3302:13;3339:6;3331;3324:22;3377:2;3366:9;3362:18;3355:25;;3439:2;3429:6;3426:1;3422:14;3411:9;3407:30;3403:39;3389:53;;3477:2;3469:6;3465:15;3498:1;3508:314;3522:6;3519:1;3516:13;3508:314;;;3611:66;3599:9;3591:6;3587:22;3583:95;3578:3;3571:108;3702:40;3735:6;3726;3720:13;3702:40;:::i;:::-;3692:50;-1:-1:-1;3800:12:283;;;;3765:15;;;;3544:1;3537:9;3508:314;;;-1:-1:-1;3839:6:283;;2989:862;-1:-1:-1;;;;;;;2989:862:283:o;4484:218::-;4631:2;4620:9;4613:21;4594:4;4651:45;4692:2;4681:9;4677:18;4669:6;4651:45;:::i;:::-;4643:53;4484:218;-1:-1:-1;;;4484:218:283:o;4938:409::-;5153:42;5145:6;5141:55;5130:9;5123:74;5233:6;5228:2;5217:9;5213:18;5206:34;5276:2;5271;5260:9;5256:18;5249:30;5104:4;5296:45;5337:2;5326:9;5322:18;5314:6;5296:45;:::i;:::-;5288:53;4938:409;-1:-1:-1;;;;;4938:409:283:o;7050:184::-;7102:77;7099:1;7092:88;7199:4;7196:1;7189:15;7223:4;7220:1;7213:15;7239:184;7291:77;7288:1;7281:88;7388:4;7385:1;7378:15;7412:4;7409:1;7402:15;7428:1236;7638:4;7667:2;7707;7696:9;7692:18;7737:2;7726:9;7719:21;7760:6;7795;7789:13;7826:6;7818;7811:22;7852:2;7842:12;;7885:2;7874:9;7870:18;7863:25;;7947:2;7937:6;7934:1;7930:14;7919:9;7915:30;7911:39;7985:2;7977:6;7973:15;8006:1;8016:619;8030:6;8027:1;8024:13;8016:619;;;8095:22;;;8119:66;8091:95;8079:108;;8210:13;;8282:9;;8293:42;8278:58;8263:74;;8380:11;;;8374:18;8357:15;;;8350:43;8432:11;;8426:18;8246:4;8464:15;;;8457:27;;;8507:48;8539:15;;;8426:18;8507:48;:::i;:::-;8613:12;;;;8497:58;-1:-1:-1;;;8578:15:283;;;;8052:1;8045:9;8016:619;;;-1:-1:-1;8652:6:283;;7428:1236;-1:-1:-1;;;;;;;;7428:1236:283:o;9072:942::-;9151:6;9204:2;9192:9;9183:7;9179:23;9175:32;9172:52;;;9220:1;9217;9210:12;9172:52;9253:9;9247:16;9282:18;9323:2;9315:6;9312:14;9309:34;;;9339:1;9336;9329:12;9309:34;9377:6;9366:9;9362:22;9352:32;;9422:7;9415:4;9411:2;9407:13;9403:27;9393:55;;9444:1;9441;9434:12;9393:55;9473:2;9467:9;9495:2;9491;9488:10;9485:36;;;9501:18;;:::i;:::-;9635:2;9629:9;9697:4;9689:13;;9540:66;9685:22;;;9709:2;9681:31;9677:40;9665:53;;;9733:18;;;9753:22;;;9730:46;9727:72;;;9779:18;;:::i;:::-;9819:10;9815:2;9808:22;9854:2;9846:6;9839:18;9894:7;9889:2;9884;9880;9876:11;9872:20;9869:33;9866:53;;;9915:1;9912;9905:12;9866:53;9928:55;9980:2;9975;9967:6;9963:15;9958:2;9954;9950:11;9928:55;:::i;:::-;10002:6;9072:942;-1:-1:-1;;;;;;;9072:942:283:o;10019:437::-;10098:1;10094:12;;;;10141;;;10162:61;;10216:4;10208:6;10204:17;10194:27;;10162:61;10269:2;10261:6;10258:14;10238:18;10235:38;10232:218;;10306:77;10303:1;10296:88;10407:4;10404:1;10397:15;10435:4;10432:1;10425:15;10232:218;;10019:437;;;:::o;10763:417::-;10960:66;10952:6;10948:79;10943:3;10936:92;10918:3;11057:6;11051:13;11073:61;11127:6;11123:1;11118:3;11114:11;11107:4;11099:6;11095:17;11073:61;:::i;:::-;11154:16;;;;11172:1;11150:24;;10763:417;-1:-1:-1;;;10763:417:283:o;11185:274::-;11314:3;11352:6;11346:13;11368:53;11414:6;11409:3;11402:4;11394:6;11390:17;11368:53;:::i;:::-;11437:16;;;;;11185:274;-1:-1:-1;;11185:274:283:o;11464:277::-;11531:6;11584:2;11572:9;11563:7;11559:23;11555:32;11552:52;;;11600:1;11597;11590:12;11552:52;11632:9;11626:16;11685:5;11678:13;11671:21;11664:5;11661:32;11651:60;;11707:1;11704;11697:12;12150:450;12398:2;12387:9;12380:21;12437:2;12432;12421:9;12417:18;12410:30;12476:12;12471:2;12460:9;12456:18;12449:40;12527:3;12520:4;12509:9;12505:20;12498:33;12361:4;12548:46;12589:3;12578:9;12574:19;12566:6;12548:46;:::i;12605:450::-;12853:2;12842:9;12835:21;12892:2;12887;12876:9;12872:18;12865:30;12931:12;12926:2;12915:9;12911:18;12904:40;12982:3;12975:4;12964:9;12960:20;12953:33;12816:4;13003:46;13044:3;13033:9;13029:19;13021:6;13003:46;:::i;13060:349::-;13099:3;13130:66;13123:5;13120:77;13117:257;;13230:77;13227:1;13220:88;13331:4;13328:1;13321:15;13359:4;13356:1;13349:15;13117:257;-1:-1:-1;13401:1:283;13390:13;;13060:349::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_attest_bulk_succeeds()": "842184cc",
    "test_attest_individual_succeeds()": "073b27cc",
    "test_attest_single_succeeds()": "b7791169"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"AttestationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_attest_bulk_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_attest_individual_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_attest_single_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/AttestationStation.t.sol\":\"AttestationStationTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x899ebc97e07a1b6b57a2b50ac1aab5bd92c5831643fb18f56637b299edc192a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6438afacf96dd589db2196c59709e42000bda9997a24533a3a4be2bdf8030ebd\",\"dweb:/ipfs/Qme1WFRRr4NcebZj3wWf2FonSutFTw66h9jmroKeQ1rAiq\"]},\"contracts/test/AttestationStation.t.sol\":{\"keccak256\":\"0x42580531c7b9a22e3cef525f63653dc5416f971292921dfc5671cef70dae1c03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a9046a0fdcd29c46e0c3e778fdf5296f3e5edd5dd8eb34baca413f296c1c64d\",\"dweb:/ipfs/QmWBGKoFkExD2BUutCgdSkeFxb5VRyYeaabVfn8p6my8Kj\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "about",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_attest_bulk_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_attest_individual_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_attest_single_succeeds"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/test/AttestationStation.t.sol": "AttestationStationTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0x899ebc97e07a1b6b57a2b50ac1aab5bd92c5831643fb18f56637b299edc192a5",
        "urls": [
          "bzz-raw://6438afacf96dd589db2196c59709e42000bda9997a24533a3a4be2bdf8030ebd",
          "dweb:/ipfs/Qme1WFRRr4NcebZj3wWf2FonSutFTw66h9jmroKeQ1rAiq"
        ],
        "license": "MIT"
      },
      "contracts/test/AttestationStation.t.sol": {
        "keccak256": "0x42580531c7b9a22e3cef525f63653dc5416f971292921dfc5671cef70dae1c03",
        "urls": [
          "bzz-raw://4a9046a0fdcd29c46e0c3e778fdf5296f3e5edd5dd8eb34baca413f296c1c64d",
          "dweb:/ipfs/QmWBGKoFkExD2BUutCgdSkeFxb5VRyYeaabVfn8p6my8Kj"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114733,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 114735,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124395,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124416,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)"
      },
      {
        "astId": 124420,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 124424,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 124427,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 125093,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 126806,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 116443,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116446,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116449,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116452,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116455,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116458,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116462,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 116466,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 122939,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 48731,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "alice_attestor",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 48737,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "bob",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 48743,
        "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
        "label": "sally",
        "offset": 0,
        "slot": "29",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)116440_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)124411_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)124411_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 124404,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 124406,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 124408,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 124410,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)116440_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 116436,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 116439,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)128292_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 128272,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 128280,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 128283,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 128285,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 128287,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 128289,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 128291,
            "contract": "contracts/test/AttestationStation.t.sol:AttestationStationTest",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev"
  },
  "ast": {
    "absolutePath": "contracts/test/AttestationStation.t.sol",
    "id": 49124,
    "exportedSymbols": {
      "AttestationStation": [
        46671
      ],
      "AttestationStationTest": [
        49123
      ],
      "AttestationStation_Initializer": [
        48776
      ],
      "Test": [
        117552
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:4820:126",
    "nodes": [
      {
        "id": 48719,
        "nodeType": "PragmaDirective",
        "src": "31:23:126",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 48721,
        "nodeType": "ImportDirective",
        "src": "80:42:126",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49124,
        "sourceUnit": 117553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48720,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117552,
              "src": "89:4:126",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48723,
        "nodeType": "ImportDirective",
        "src": "123:80:126",
        "nodes": [],
        "absolutePath": "contracts/periphery/op-nft/AttestationStation.sol",
        "file": "../periphery/op-nft/AttestationStation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49124,
        "sourceUnit": 46672,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48722,
              "name": "AttestationStation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46671,
              "src": "132:18:126",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48776,
        "nodeType": "ContractDefinition",
        "src": "205:395:126",
        "nodes": [
          {
            "id": 48731,
            "nodeType": "VariableDeclaration",
            "src": "259:37:126",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice_attestor",
            "nameLocation": "267:14:126",
            "scope": 48776,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48726,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313238",
                  "id": 48729,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "292:3:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_128_by_1",
                    "typeString": "int_const 128"
                  },
                  "value": "128"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_128_by_1",
                    "typeString": "int_const 128"
                  }
                ],
                "id": 48728,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "284:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48727,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "284:7:126",
                  "typeDescriptions": {}
                }
              },
              "id": 48730,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "284:12:126",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 48737,
            "nodeType": "VariableDeclaration",
            "src": "302:26:126",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "310:3:126",
            "scope": 48776,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48732,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "323536",
                  "id": 48735,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "324:3:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  }
                ],
                "id": 48734,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "316:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48733,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "316:7:126",
                  "typeDescriptions": {}
                }
              },
              "id": 48736,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "316:12:126",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 48743,
            "nodeType": "VariableDeclaration",
            "src": "334:28:126",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sally",
            "nameLocation": "342:5:126",
            "scope": 48776,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48738,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "353132",
                  "id": 48741,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "358:3:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_512_by_1",
                    "typeString": "int_const 512"
                  },
                  "value": "512"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_512_by_1",
                    "typeString": "int_const 512"
                  }
                ],
                "id": 48740,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "350:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 48739,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "350:7:126",
                  "typeDescriptions": {}
                }
              },
              "id": 48742,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "350:12:126",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 48775,
            "nodeType": "FunctionDefinition",
            "src": "369:229:126",
            "nodes": [],
            "body": {
              "id": 48774,
              "nodeType": "Block",
              "src": "393:205:126",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48749,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "450:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 48750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "466:7:126",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 48746,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "442:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "442:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 48751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:32:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48752,
                  "nodeType": "ExpressionStatement",
                  "src": "442:32:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48756,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "494:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "616c6963655f6174746573746f72",
                        "id": 48757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "510:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90c8f3c6ea5805ccf595d1c72eefff3a720094a6f17f9f683dc9717bb3a078d5",
                          "typeString": "literal_string \"alice_attestor\""
                        },
                        "value": "alice_attestor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90c8f3c6ea5805ccf595d1c72eefff3a720094a6f17f9f683dc9717bb3a078d5",
                          "typeString": "literal_string \"alice_attestor\""
                        }
                      ],
                      "expression": {
                        "id": 48753,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "485:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117953,
                      "src": "485:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 48758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "485:42:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48759,
                  "nodeType": "ExpressionStatement",
                  "src": "485:42:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48763,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48737,
                        "src": "546:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "626f62",
                        "id": 48764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "551:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        },
                        "value": "bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        }
                      ],
                      "expression": {
                        "id": 48760,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "537:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117953,
                      "src": "537:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 48765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:20:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48766,
                  "nodeType": "ExpressionStatement",
                  "src": "537:20:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48770,
                        "name": "sally",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48743,
                        "src": "576:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "73616c6c79",
                        "id": 48771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "583:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd922a86fe6f4e0c05687cd6b56916ad6d2dd56cc22c133aa03156a69dc6943d",
                          "typeString": "literal_string \"sally\""
                        },
                        "value": "sally"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd922a86fe6f4e0c05687cd6b56916ad6d2dd56cc22c133aa03156a69dc6943d",
                          "typeString": "literal_string \"sally\""
                        }
                      ],
                      "expression": {
                        "id": 48767,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "567:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117953,
                      "src": "567:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 48772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48773,
                  "nodeType": "ExpressionStatement",
                  "src": "567:24:126"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "378:5:126",
            "parameters": {
              "id": 48744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:2:126"
            },
            "returnParameters": {
              "id": 48745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:126"
            },
            "scope": 48776,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48724,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117552,
              "src": "248:4:126"
            },
            "id": 48725,
            "nodeType": "InheritanceSpecifier",
            "src": "248:4:126"
          }
        ],
        "canonicalName": "AttestationStation_Initializer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48776,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "AttestationStation_Initializer",
        "nameLocation": "214:30:126",
        "scope": 49124,
        "usedErrors": []
      },
      {
        "id": 49123,
        "nodeType": "ContractDefinition",
        "src": "602:4248:126",
        "nodes": [
          {
            "id": 48788,
            "nodeType": "EventDefinition",
            "src": "674:143:126",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85",
            "name": "AttestationCreated",
            "nameLocation": "680:18:126",
            "parameters": {
              "id": 48787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48780,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "724:7:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 48788,
                  "src": "708:23:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48782,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "about",
                  "nameLocation": "757:5:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 48788,
                  "src": "741:21:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48784,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "788:3:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 48788,
                  "src": "772:19:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48783,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48786,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "val",
                  "nameLocation": "807:3:126",
                  "nodeType": "VariableDeclaration",
                  "scope": 48788,
                  "src": "801:9:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 48785,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:5:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:118:126"
            }
          },
          {
            "id": 48842,
            "nodeType": "FunctionDefinition",
            "src": "823:394:126",
            "nodes": [],
            "body": {
              "id": 48841,
              "nodeType": "Block",
              "src": "875:342:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48793,
                      "mutability": "mutable",
                      "name": "attestationStation",
                      "nameLocation": "904:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 48841,
                      "src": "885:37:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$46671",
                        "typeString": "contract AttestationStation"
                      },
                      "typeName": {
                        "id": 48792,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48791,
                          "name": "AttestationStation",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46671,
                          "src": "885:18:126"
                        },
                        "referencedDeclaration": 46671,
                        "src": "885:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48798,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "925:22:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationStation_$46671_$",
                        "typeString": "function () returns (contract AttestationStation)"
                      },
                      "typeName": {
                        "id": 48795,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48794,
                          "name": "AttestationStation",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46671,
                          "src": "929:18:126"
                        },
                        "referencedDeclaration": 46671,
                        "src": "929:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      }
                    },
                    "id": 48797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationStation_$46671",
                      "typeString": "contract AttestationStation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "885:64:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 48802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "974:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "986:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 48805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "992:4:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 48799,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "960:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118739,
                      "src": "960:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 48806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:37:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48807,
                  "nodeType": "ExpressionStatement",
                  "src": "960:37:126"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48809,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "1031:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48810,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48737,
                        "src": "1047:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "666f6f",
                            "id": 48813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1060:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_41b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
                              "typeString": "literal_string \"foo\""
                            },
                            "value": "foo"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_41b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
                              "typeString": "literal_string \"foo\""
                            }
                          ],
                          "id": 48812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1052:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 48811,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1052:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1052:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "626172",
                            "id": 48817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1074:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_435cd288e3694b535549c3af56ad805c149f92961bf84a1c647f7d86fc2431b4",
                              "typeString": "literal_string \"bar\""
                            },
                            "value": "bar"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_435cd288e3694b535549c3af56ad805c149f92961bf84a1c647f7d86fc2431b4",
                              "typeString": "literal_string \"bar\""
                            }
                          ],
                          "id": 48816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1068:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 48815,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1068:5:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1068:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48808,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48788,
                      "src": "1012:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 48819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:69:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48820,
                  "nodeType": "EmitStatement",
                  "src": "1007:74:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48824,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "1101:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48821,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1092:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "1092:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48826,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:24:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48830,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48737,
                        "src": "1162:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "666f6f",
                            "id": 48833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1181:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_41b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
                              "typeString": "literal_string \"foo\""
                            },
                            "value": "foo"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_41b1a0649752af1b28b3dc29a1556eee781e4a4c3a1f7f53f90fa834de098c4d",
                              "typeString": "literal_string \"foo\""
                            }
                          ],
                          "id": 48832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1173:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 48831,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1173:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:14:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "626172",
                            "id": 48837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1201:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_435cd288e3694b535549c3af56ad805c149f92961bf84a1c647f7d86fc2431b4",
                              "typeString": "literal_string \"bar\""
                            },
                            "value": "bar"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_435cd288e3694b535549c3af56ad805c149f92961bf84a1c647f7d86fc2431b4",
                              "typeString": "literal_string \"bar\""
                            }
                          ],
                          "id": 48836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1195:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 48835,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1195:5:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1195:12:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48827,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48793,
                        "src": "1126:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 48829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "1126:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 48839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_about",
                      "_key",
                      "_val"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1126:84:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48840,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:84:126"
                }
              ]
            },
            "functionSelector": "073b27cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_attest_individual_succeeds",
            "nameLocation": "832:31:126",
            "parameters": {
              "id": 48789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:2:126"
            },
            "returnParameters": {
              "id": 48790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:126"
            },
            "scope": 49123,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48977,
            "nodeType": "FunctionDefinition",
            "src": "1223:1967:126",
            "nodes": [],
            "body": {
              "id": 48976,
              "nodeType": "Block",
              "src": "1271:1919:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48847
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48847,
                      "mutability": "mutable",
                      "name": "attestationStation",
                      "nameLocation": "1300:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 48976,
                      "src": "1281:37:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$46671",
                        "typeString": "contract AttestationStation"
                      },
                      "typeName": {
                        "id": 48846,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48845,
                          "name": "AttestationStation",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46671,
                          "src": "1281:18:126"
                        },
                        "referencedDeclaration": 46671,
                        "src": "1281:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48852,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1321:22:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationStation_$46671_$",
                        "typeString": "function () returns (contract AttestationStation)"
                      },
                      "typeName": {
                        "id": 48849,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48848,
                          "name": "AttestationStation",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46671,
                          "src": "1325:18:126"
                        },
                        "referencedDeclaration": 46671,
                        "src": "1325:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      }
                    },
                    "id": 48851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1321:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationStation_$46671",
                      "typeString": "contract AttestationStation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1281:64:126"
                },
                {
                  "assignments": [
                    48858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48858,
                      "mutability": "mutable",
                      "name": "attestationDataArr",
                      "nameLocation": "1412:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 48976,
                      "src": "1356:74:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48856,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48855,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "1356:34:126"
                          },
                          "referencedDeclaration": 46567,
                          "src": "1356:34:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 48857,
                        "nodeType": "ArrayTypeName",
                        "src": "1356:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48865,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1474:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 48862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1433:40:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AttestationStation.AttestationData memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48860,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48859,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "1437:34:126"
                          },
                          "referencedDeclaration": 46567,
                          "src": "1437:34:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 48861,
                        "nodeType": "ArrayTypeName",
                        "src": "1437:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      }
                    },
                    "id": 48864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1356:120:126"
                },
                {
                  "assignments": [
                    48870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48870,
                      "mutability": "mutable",
                      "name": "attestationData",
                      "nameLocation": "1575:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 48976,
                      "src": "1533:57:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData"
                      },
                      "typeName": {
                        "id": 48869,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48868,
                          "name": "AttestationStation.AttestationData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46567,
                          "src": "1533:34:126"
                        },
                        "referencedDeclaration": 46567,
                        "src": "1533:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48883,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48873,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48737,
                        "src": "1666:3:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "746573742d6b65793a737472696e67",
                            "id": 48876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1700:17:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6c7778eb2a842164618a5081da452bd8ef57198c4608cda8a37609cc6b430e90",
                              "typeString": "literal_string \"test-key:string\""
                            },
                            "value": "test-key:string"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6c7778eb2a842164618a5081da452bd8ef57198c4608cda8a37609cc6b430e90",
                              "typeString": "literal_string \"test-key:string\""
                            }
                          ],
                          "id": 48875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1692:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 48874,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1692:7:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1692:26:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "746573742d76616c7565",
                            "id": 48880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1747:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a3afcc600e675b2064fe253b908696ef54851d23a2bfe23351dc51858cb1fe03",
                              "typeString": "literal_string \"test-value\""
                            },
                            "value": "test-value"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a3afcc600e675b2064fe253b908696ef54851d23a2bfe23351dc51858cb1fe03",
                              "typeString": "literal_string \"test-value\""
                            }
                          ],
                          "id": 48879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1741:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 48878,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1741:5:126",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:19:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 48871,
                        "name": "AttestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46671,
                        "src": "1593:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                          "typeString": "type(contract AttestationStation)"
                        }
                      },
                      "id": 48872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "AttestationData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46567,
                      "src": "1593:47:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                        "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                      }
                    },
                    "id": 48882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "about",
                      "key",
                      "val"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1593:182:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1533:242:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48887,
                            "name": "alice_attestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48731,
                            "src": "1904:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 48888,
                              "name": "attestationData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48870,
                              "src": "1936:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 48889,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "about",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46562,
                            "src": "1936:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 48890,
                              "name": "attestationData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48870,
                              "src": "1975:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 48891,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46564,
                            "src": "1975:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 48885,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48847,
                            "src": "1855:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          },
                          "id": 48886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46576,
                          "src": "1855:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,address,bytes32) view external returns (bytes memory)"
                          }
                        },
                        "id": 48892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1855:153:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 48893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 48884,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123109,
                      "src": "1833:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 48894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1833:201:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48895,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:201:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48899,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "2082:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48896,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "2073:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "2073:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48901,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:24:126"
                },
                {
                  "expression": {
                    "id": 48906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48902,
                        "name": "attestationDataArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48858,
                        "src": "2107:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 48904,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 48903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2126:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2107:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48905,
                      "name": "attestationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48870,
                      "src": "2131:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "2107:39:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 48907,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:39:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48911,
                        "name": "attestationDataArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48858,
                        "src": "2182:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 48908,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48847,
                        "src": "2156:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 48910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46670,
                      "src": "2156:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 48912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:45:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48913,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:45:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48917,
                            "name": "alice_attestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48731,
                            "src": "2326:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 48918,
                              "name": "attestationData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48870,
                              "src": "2358:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 48919,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "about",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46562,
                            "src": "2358:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 48920,
                              "name": "attestationData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48870,
                              "src": "2397:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 48921,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46564,
                            "src": "2397:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 48915,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48847,
                            "src": "2277:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          },
                          "id": 48916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46576,
                          "src": "2277:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,address,bytes32) view external returns (bytes memory)"
                          }
                        },
                        "id": 48922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2277:153:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 48923,
                          "name": "attestationData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48870,
                          "src": "2444:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                            "typeString": "struct AttestationStation.AttestationData memory"
                          }
                        },
                        "id": 48924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "val",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46566,
                        "src": "2444:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48914,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123109,
                      "src": "2255:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 48925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:218:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48926,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:218:126"
                },
                {
                  "assignments": [
                    48928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48928,
                      "mutability": "mutable",
                      "name": "new_val",
                      "nameLocation": "2497:7:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 48976,
                      "src": "2484:20:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48927,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2484:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48933,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6e657720757064617465642076616c7565",
                        "id": 48931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2513:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85bbda46b7f3378860d52b92114bda21e594a1690e27aad4b964879aa20ff92e",
                          "typeString": "literal_string \"new updated value\""
                        },
                        "value": "new updated value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_85bbda46b7f3378860d52b92114bda21e594a1690e27aad4b964879aa20ff92e",
                          "typeString": "literal_string \"new updated value\""
                        }
                      ],
                      "id": 48930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2507:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 48929,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2507:5:126",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:26:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2484:49:126"
                },
                {
                  "expression": {
                    "id": 48943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48934,
                      "name": "attestationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48870,
                      "src": "2600:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48937,
                            "name": "attestationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48870,
                            "src": "2674:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData memory"
                            }
                          },
                          "id": 48938,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "about",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46562,
                          "src": "2674:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 48939,
                            "name": "attestationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48870,
                            "src": "2714:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData memory"
                            }
                          },
                          "id": 48940,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46564,
                          "src": "2714:19:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 48941,
                          "name": "new_val",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48928,
                          "src": "2752:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 48935,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46671,
                          "src": "2618:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 48936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46567,
                        "src": "2618:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 48942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2618:152:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "2600:170:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 48944,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:170:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48948,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "2790:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48945,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "2781:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "2781:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48950,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:24:126"
                },
                {
                  "expression": {
                    "id": 48955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48951,
                        "name": "attestationDataArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48858,
                        "src": "2815:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 48953,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 48952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2834:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2815:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48954,
                      "name": "attestationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48870,
                      "src": "2839:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "2815:39:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 48956,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:39:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48960,
                        "name": "attestationDataArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48858,
                        "src": "2890:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 48957,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48847,
                        "src": "2864:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 48959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46670,
                      "src": "2864:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 48961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2864:45:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48962,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:45:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48966,
                            "name": "alice_attestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48731,
                            "src": "3036:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 48967,
                              "name": "attestationData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48870,
                              "src": "3068:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 48968,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "about",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46562,
                            "src": "3068:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 48969,
                              "name": "attestationData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48870,
                              "src": "3107:15:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 48970,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46564,
                            "src": "3107:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 48964,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48847,
                            "src": "2987:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          },
                          "id": 48965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46576,
                          "src": "2987:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,address,bytes32) view external returns (bytes memory)"
                          }
                        },
                        "id": 48971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2987:153:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 48972,
                          "name": "attestationData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48870,
                          "src": "3154:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                            "typeString": "struct AttestationStation.AttestationData memory"
                          }
                        },
                        "id": 48973,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "val",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46566,
                        "src": "3154:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48963,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123109,
                      "src": "2965:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 48974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:218:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48975,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:218:126"
                }
              ]
            },
            "functionSelector": "b7791169",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_attest_single_succeeds",
            "nameLocation": "1232:27:126",
            "parameters": {
              "id": 48843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:2:126"
            },
            "returnParameters": {
              "id": 48844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:126"
            },
            "scope": 49123,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49122,
            "nodeType": "FunctionDefinition",
            "src": "3196:1652:126",
            "nodes": [],
            "body": {
              "id": 49121,
              "nodeType": "Block",
              "src": "3242:1606:126",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48982,
                      "mutability": "mutable",
                      "name": "attestationStation",
                      "nameLocation": "3271:18:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 49121,
                      "src": "3252:37:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$46671",
                        "typeString": "contract AttestationStation"
                      },
                      "typeName": {
                        "id": 48981,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48980,
                          "name": "AttestationStation",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46671,
                          "src": "3252:18:126"
                        },
                        "referencedDeclaration": 46671,
                        "src": "3252:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48987,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3292:22:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationStation_$46671_$",
                        "typeString": "function () returns (contract AttestationStation)"
                      },
                      "typeName": {
                        "id": 48984,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48983,
                          "name": "AttestationStation",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46671,
                          "src": "3296:18:126"
                        },
                        "referencedDeclaration": 46671,
                        "src": "3296:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      }
                    },
                    "id": 48986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3292:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationStation_$46671",
                      "typeString": "contract AttestationStation"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3252:64:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48991,
                        "name": "alice_attestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48731,
                        "src": "3336:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48988,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "3327:2:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 48990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "3327:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:24:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48993,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:24:126"
                },
                {
                  "assignments": [
                    48999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48999,
                      "mutability": "mutable",
                      "name": "attestationData",
                      "nameLocation": "3418:15:126",
                      "nodeType": "VariableDeclaration",
                      "scope": 49121,
                      "src": "3362:71:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48997,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48996,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "3362:34:126"
                          },
                          "referencedDeclaration": 46567,
                          "src": "3362:34:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 48998,
                        "nodeType": "ArrayTypeName",
                        "src": "3362:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49006,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 49004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3477:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 49003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3436:40:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AttestationStation.AttestationData memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49001,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 49000,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "3440:34:126"
                          },
                          "referencedDeclaration": 46567,
                          "src": "3440:34:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 49002,
                        "nodeType": "ArrayTypeName",
                        "src": "3440:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      }
                    },
                    "id": 49005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3436:43:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3362:117:126"
                },
                {
                  "expression": {
                    "id": 49022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49007,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48999,
                        "src": "3489:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 49009,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3505:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3489:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49012,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48737,
                          "src": "3566:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "746573742d6b65793a737472696e67",
                              "id": 49015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3596:17:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6c7778eb2a842164618a5081da452bd8ef57198c4608cda8a37609cc6b430e90",
                                "typeString": "literal_string \"test-key:string\""
                              },
                              "value": "test-key:string"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6c7778eb2a842164618a5081da452bd8ef57198c4608cda8a37609cc6b430e90",
                                "typeString": "literal_string \"test-key:string\""
                              }
                            ],
                            "id": 49014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3588:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 49013,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3588:7:126",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3588:26:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "746573742d76616c7565",
                              "id": 49019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3639:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a3afcc600e675b2064fe253b908696ef54851d23a2bfe23351dc51858cb1fe03",
                                "typeString": "literal_string \"test-value\""
                              },
                              "value": "test-value"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a3afcc600e675b2064fe253b908696ef54851d23a2bfe23351dc51858cb1fe03",
                                "typeString": "literal_string \"test-value\""
                              }
                            ],
                            "id": 49018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3633:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 49017,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3633:5:126",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3633:19:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 49010,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46671,
                          "src": "3510:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 49011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46567,
                        "src": "3510:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 49021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3510:153:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "3489:174:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 49023,
                  "nodeType": "ExpressionStatement",
                  "src": "3489:174:126"
                },
                {
                  "expression": {
                    "id": 49039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49024,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48999,
                        "src": "3674:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 49026,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 49025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3674:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49029,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48737,
                          "src": "3751:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "746573742d6b657932",
                              "id": 49032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3781:11:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb2c7854f7a67a91c34430f1000d538ee123c37d9a8b3ba3d2f94edeb03729e5",
                                "typeString": "literal_string \"test-key2\""
                              },
                              "value": "test-key2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fb2c7854f7a67a91c34430f1000d538ee123c37d9a8b3ba3d2f94edeb03729e5",
                                "typeString": "literal_string \"test-key2\""
                              }
                            ],
                            "id": 49031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3773:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 49030,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3773:7:126",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3773:20:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "746573742d76616c756532",
                              "id": 49036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3818:13:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb67461b6e01c8fdda89450d535af00a32bbde1cdbf7e352ca9a64f097dd13f6",
                                "typeString": "literal_string \"test-value2\""
                              },
                              "value": "test-value2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bb67461b6e01c8fdda89450d535af00a32bbde1cdbf7e352ca9a64f097dd13f6",
                                "typeString": "literal_string \"test-value2\""
                              }
                            ],
                            "id": 49035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3812:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 49034,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3812:5:126",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3812:20:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 49027,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46671,
                          "src": "3695:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 49028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46567,
                        "src": "3695:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 49038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3695:148:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "3674:169:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 49040,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:169:126"
                },
                {
                  "expression": {
                    "id": 49056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49041,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48999,
                        "src": "3854:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 49043,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 49042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3870:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3854:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49046,
                          "name": "sally",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48743,
                          "src": "3931:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "746573742d6b65793a737472696e67",
                              "id": 49049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3963:17:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6c7778eb2a842164618a5081da452bd8ef57198c4608cda8a37609cc6b430e90",
                                "typeString": "literal_string \"test-key:string\""
                              },
                              "value": "test-key:string"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6c7778eb2a842164618a5081da452bd8ef57198c4608cda8a37609cc6b430e90",
                                "typeString": "literal_string \"test-key:string\""
                              }
                            ],
                            "id": 49048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3955:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 49047,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3955:7:126",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3955:26:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "746573742d76616c756533",
                              "id": 49053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4006:13:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e72265246d3de62839c180e2129d264a4ae9aef55327f4db36dd5d7651cec3fc",
                                "typeString": "literal_string \"test-value3\""
                              },
                              "value": "test-value3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e72265246d3de62839c180e2129d264a4ae9aef55327f4db36dd5d7651cec3fc",
                                "typeString": "literal_string \"test-value3\""
                              }
                            ],
                            "id": 49052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4000:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 49051,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4000:5:126",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4000:20:126",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 49044,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46671,
                          "src": "3875:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 49045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46567,
                        "src": "3875:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 49055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3875:156:126",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "3854:177:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 49057,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:177:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49061,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48999,
                        "src": "4068:15:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 49058,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48982,
                        "src": "4042:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 49060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46670,
                      "src": "4042:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 49062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:42:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49063,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:42:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49067,
                            "name": "alice_attestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48731,
                            "src": "4211:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 49068,
                                "name": "attestationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48999,
                                "src": "4243:15:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory[] memory"
                                }
                              },
                              "id": 49070,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 49069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4259:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4243:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 49071,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "about",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46562,
                            "src": "4243:24:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 49072,
                                "name": "attestationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48999,
                                "src": "4285:15:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory[] memory"
                                }
                              },
                              "id": 49074,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 49073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4301:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4285:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 49075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46564,
                            "src": "4285:22:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 49065,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48982,
                            "src": "4162:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          },
                          "id": 49066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46576,
                          "src": "4162:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,address,bytes32) view external returns (bytes memory)"
                          }
                        },
                        "id": 49076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4162:159:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 49077,
                            "name": "attestationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48999,
                            "src": "4335:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData memory[] memory"
                            }
                          },
                          "id": 49079,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 49078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4351:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4335:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                            "typeString": "struct AttestationStation.AttestationData memory"
                          }
                        },
                        "id": 49080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "val",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46566,
                        "src": "4335:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 49064,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123109,
                      "src": "4140:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 49081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:227:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49082,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:227:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49086,
                            "name": "alice_attestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48731,
                            "src": "4448:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 49087,
                                "name": "attestationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48999,
                                "src": "4480:15:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory[] memory"
                                }
                              },
                              "id": 49089,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 49088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4496:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4480:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 49090,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "about",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46562,
                            "src": "4480:24:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 49091,
                                "name": "attestationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48999,
                                "src": "4522:15:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory[] memory"
                                }
                              },
                              "id": 49093,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 49092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4538:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4522:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 49094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46564,
                            "src": "4522:22:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 49084,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48982,
                            "src": "4399:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          },
                          "id": 49085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46576,
                          "src": "4399:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,address,bytes32) view external returns (bytes memory)"
                          }
                        },
                        "id": 49095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4399:159:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 49096,
                            "name": "attestationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48999,
                            "src": "4572:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData memory[] memory"
                            }
                          },
                          "id": 49098,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 49097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4588:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4572:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                            "typeString": "struct AttestationStation.AttestationData memory"
                          }
                        },
                        "id": 49099,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "val",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46566,
                        "src": "4572:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 49083,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123109,
                      "src": "4377:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 49100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:227:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49101,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:227:126"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 49105,
                            "name": "alice_attestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48731,
                            "src": "4685:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 49106,
                                "name": "attestationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48999,
                                "src": "4717:15:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory[] memory"
                                }
                              },
                              "id": 49108,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 49107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4733:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4717:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 49109,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "about",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46562,
                            "src": "4717:24:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 49110,
                                "name": "attestationData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48999,
                                "src": "4759:15:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory[] memory"
                                }
                              },
                              "id": 49112,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 49111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4775:1:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4759:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                "typeString": "struct AttestationStation.AttestationData memory"
                              }
                            },
                            "id": 49113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46564,
                            "src": "4759:22:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 49103,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48982,
                            "src": "4636:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          },
                          "id": 49104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46576,
                          "src": "4636:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,address,bytes32) view external returns (bytes memory)"
                          }
                        },
                        "id": 49114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4636:159:126",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 49115,
                            "name": "attestationData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48999,
                            "src": "4809:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData memory[] memory"
                            }
                          },
                          "id": 49117,
                          "indexExpression": {
                            "hexValue": "32",
                            "id": 49116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4825:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4809:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                            "typeString": "struct AttestationStation.AttestationData memory"
                          }
                        },
                        "id": 49118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "val",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46566,
                        "src": "4809:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 49102,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123109,
                      "src": "4614:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory)"
                      }
                    },
                    "id": 49119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4614:227:126",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49120,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:227:126"
                }
              ]
            },
            "functionSelector": "842184cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_attest_bulk_succeeds",
            "nameLocation": "3205:25:126",
            "parameters": {
              "id": 48978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3230:2:126"
            },
            "returnParameters": {
              "id": 48979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3242:0:126"
            },
            "scope": 49123,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48777,
              "name": "AttestationStation_Initializer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48776,
              "src": "637:30:126"
            },
            "id": 48778,
            "nodeType": "InheritanceSpecifier",
            "src": "637:30:126"
          }
        ],
        "canonicalName": "AttestationStationTest",
        "contractDependencies": [
          46671
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49123,
          48776,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "AttestationStationTest",
        "nameLocation": "611:22:126",
        "scope": 49124,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 126
}