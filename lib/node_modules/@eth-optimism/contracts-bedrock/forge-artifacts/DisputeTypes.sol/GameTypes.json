{
  "abi": [],
  "bytecode": {
    "object": "0x602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a",
    "sourceMap": "3072:485:95:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3072:485:95;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c634300080f000a",
    "sourceMap": "3072:485:95:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ATTESTATION\":{\"details\":\"The game will use a `IDisputeGame` implementation that utilizes attestation proofs.\"},\"FAULT\":{\"details\":\"The game will use a `IDisputeGame` implementation that utilizes fault proofs.\"},\"VALIDITY\":{\"details\":\"The game will use a `IDisputeGame` implementation that utilizes validity proofs.\"}},\"title\":\"GameTypes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library that defines the IDs of games that can be played.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/DisputeTypes.sol\":\"GameTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/dispute/lib/LibClock.sol\":{\"keccak256\":\"0xa5e0ab5658506760ac26d6b73755af9c03e43184dee996e40113dbaa71199551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1305bffdb301d190ce749d67274f6caac24002846e506f28d950f8cbc230e8c0\",\"dweb:/ipfs/QmdG6DAX2nznmwyp4VmTNxHy7orx6sdGzUKwgJ9kB69Epm\"]},\"contracts/dispute/lib/LibHashing.sol\":{\"keccak256\":\"0xc0174b32e6585e7192d385b405c3825528150f9fc941a4f14448edaa662e042c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae57fb5cb98d7b4b96cd60779920122e800d0d7db9415f16808e19175e45f89\",\"dweb:/ipfs/QmRZfqzW7Aa5FtfL5d16UdjD53q95w1VeVDkeGsnTJusrE\"]},\"contracts/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0x1836d08aaf755a6afea8a4d6bc92b8b96061c7df681a7308a536114ec3cd9276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd7a4e1cfdf656f32f5959e78a79872be90c9d5f089f1b0c56595b929d030ecc\",\"dweb:/ipfs/QmZsLmahruxKVRxpMXbnqeVonLwcaiuqHEXK1dXfx2YCZk\"]},\"contracts/libraries/DisputeTypes.sol\":{\"keccak256\":\"0x11ba4465bbe25641801a34aef36fc6fd754afcf8811f1a5c2275d1a3f4567a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb9fb8f3e78ca4a02952a15b8163d298298c315bf61ade3e3198068c25351b9\",\"dweb:/ipfs/QmRBBtVzEXY66UcSjonGiP1RZ32KmugDjgXexu5sswe7sh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/libraries/DisputeTypes.sol": "GameTypes"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dispute/lib/LibClock.sol": {
        "keccak256": "0xa5e0ab5658506760ac26d6b73755af9c03e43184dee996e40113dbaa71199551",
        "urls": [
          "bzz-raw://1305bffdb301d190ce749d67274f6caac24002846e506f28d950f8cbc230e8c0",
          "dweb:/ipfs/QmdG6DAX2nznmwyp4VmTNxHy7orx6sdGzUKwgJ9kB69Epm"
        ],
        "license": "MIT"
      },
      "contracts/dispute/lib/LibHashing.sol": {
        "keccak256": "0xc0174b32e6585e7192d385b405c3825528150f9fc941a4f14448edaa662e042c",
        "urls": [
          "bzz-raw://cae57fb5cb98d7b4b96cd60779920122e800d0d7db9415f16808e19175e45f89",
          "dweb:/ipfs/QmRZfqzW7Aa5FtfL5d16UdjD53q95w1VeVDkeGsnTJusrE"
        ],
        "license": "MIT"
      },
      "contracts/dispute/lib/LibPosition.sol": {
        "keccak256": "0x1836d08aaf755a6afea8a4d6bc92b8b96061c7df681a7308a536114ec3cd9276",
        "urls": [
          "bzz-raw://cd7a4e1cfdf656f32f5959e78a79872be90c9d5f089f1b0c56595b929d030ecc",
          "dweb:/ipfs/QmZsLmahruxKVRxpMXbnqeVonLwcaiuqHEXK1dXfx2YCZk"
        ],
        "license": "MIT"
      },
      "contracts/libraries/DisputeTypes.sol": {
        "keccak256": "0x11ba4465bbe25641801a34aef36fc6fd754afcf8811f1a5c2275d1a3f4567a9c",
        "urls": [
          "bzz-raw://eeb9fb8f3e78ca4a02952a15b8163d298298c315bf61ade3e3198068c25351b9",
          "dweb:/ipfs/QmRBBtVzEXY66UcSjonGiP1RZ32KmugDjgXexu5sswe7sh"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "notice": "A library that defines the IDs of games that can be played."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "title": "GameTypes"
  },
  "ast": {
    "absolutePath": "contracts/libraries/DisputeTypes.sol",
    "id": 42729,
    "exportedSymbols": {
      "BondAmount": [
        42686
      ],
      "Claim": [
        42682
      ],
      "ClaimHash": [
        42684
      ],
      "Clock": [
        42694
      ],
      "Duration": [
        42690
      ],
      "GameId": [
        42692
      ],
      "GameStatus": [
        42702
      ],
      "GameType": [
        42698
      ],
      "GameTypes": [
        42728
      ],
      "Hash": [
        42680
      ],
      "LibClock": [
        40731
      ],
      "LibHashing": [
        40751
      ],
      "LibPosition": [
        40909
      ],
      "Position": [
        42696
      ],
      "Timestamp": [
        42688
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3526:95",
    "nodes": [
      {
        "id": 42660,
        "nodeType": "PragmaDirective",
        "src": "32:24:95",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 42662,
        "nodeType": "ImportDirective",
        "src": "58:59:95",
        "nodes": [],
        "absolutePath": "contracts/dispute/lib/LibHashing.sol",
        "file": "../dispute/lib/LibHashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42729,
        "sourceUnit": 40752,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42661,
              "name": "LibHashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40751,
              "src": "67:10:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42664,
        "nodeType": "ImportDirective",
        "src": "118:61:95",
        "nodes": [],
        "absolutePath": "contracts/dispute/lib/LibPosition.sol",
        "file": "../dispute/lib/LibPosition.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42729,
        "sourceUnit": 40910,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42663,
              "name": "LibPosition",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40909,
              "src": "127:11:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42666,
        "nodeType": "ImportDirective",
        "src": "180:55:95",
        "nodes": [],
        "absolutePath": "contracts/dispute/lib/LibClock.sol",
        "file": "../dispute/lib/LibClock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42729,
        "sourceUnit": 40732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42665,
              "name": "LibClock",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40731,
              "src": "189:8:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42670,
        "nodeType": "UsingForDirective",
        "src": "237:34:95",
        "nodes": [],
        "global": true,
        "libraryName": {
          "id": 42667,
          "name": "LibHashing",
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 40751,
          "src": "243:10:95"
        },
        "typeName": {
          "id": 42669,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 42668,
            "name": "Claim",
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 42682,
            "src": "258:5:95"
          },
          "referencedDeclaration": 42682,
          "src": "258:5:95",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_Claim_$42682",
            "typeString": "Claim"
          }
        }
      },
      {
        "id": 42674,
        "nodeType": "UsingForDirective",
        "src": "272:38:95",
        "nodes": [],
        "global": true,
        "libraryName": {
          "id": 42671,
          "name": "LibPosition",
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 40909,
          "src": "278:11:95"
        },
        "typeName": {
          "id": 42673,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 42672,
            "name": "Position",
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 42696,
            "src": "294:8:95"
          },
          "referencedDeclaration": 42696,
          "src": "294:8:95",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_Position_$42696",
            "typeString": "Position"
          }
        }
      },
      {
        "id": 42678,
        "nodeType": "UsingForDirective",
        "src": "311:32:95",
        "nodes": [],
        "global": true,
        "libraryName": {
          "id": 42675,
          "name": "LibClock",
          "nodeType": "IdentifierPath",
          "referencedDeclaration": 40731,
          "src": "317:8:95"
        },
        "typeName": {
          "id": 42677,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 42676,
            "name": "Clock",
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 42694,
            "src": "330:5:95"
          },
          "referencedDeclaration": 42694,
          "src": "330:5:95",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_Clock_$42694",
            "typeString": "Clock"
          }
        }
      },
      {
        "id": 42680,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "391:21:95",
        "nodes": [],
        "canonicalName": "Hash",
        "name": "Hash",
        "nameLocation": "396:4:95",
        "underlyingType": {
          "id": 42679,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "404:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        }
      },
      {
        "id": 42682,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "508:22:95",
        "nodes": [],
        "canonicalName": "Claim",
        "name": "Claim",
        "nameLocation": "513:5:95",
        "underlyingType": {
          "id": 42681,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "522:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        }
      },
      {
        "id": 42684,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "682:26:95",
        "nodes": [],
        "canonicalName": "ClaimHash",
        "name": "ClaimHash",
        "nameLocation": "687:9:95",
        "underlyingType": {
          "id": 42683,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "700:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        }
      },
      {
        "id": 42686,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "809:27:95",
        "nodes": [],
        "canonicalName": "BondAmount",
        "name": "BondAmount",
        "nameLocation": "814:10:95",
        "underlyingType": {
          "id": 42685,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "828:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        }
      },
      {
        "id": 42688,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "878:25:95",
        "nodes": [],
        "canonicalName": "Timestamp",
        "name": "Timestamp",
        "nameLocation": "883:9:95",
        "underlyingType": {
          "id": 42687,
          "name": "uint64",
          "nodeType": "ElementaryTypeName",
          "src": "896:6:95",
          "typeDescriptions": {
            "typeIdentifier": "t_uint64",
            "typeString": "uint64"
          }
        }
      },
      {
        "id": 42690,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "967:24:95",
        "nodes": [],
        "canonicalName": "Duration",
        "name": "Duration",
        "nameLocation": "972:8:95",
        "underlyingType": {
          "id": 42689,
          "name": "uint64",
          "nodeType": "ElementaryTypeName",
          "src": "984:6:95",
          "typeDescriptions": {
            "typeIdentifier": "t_uint64",
            "typeString": "uint64"
          }
        }
      },
      {
        "id": 42692,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "1552:23:95",
        "nodes": [],
        "canonicalName": "GameId",
        "name": "GameId",
        "nameLocation": "1557:6:95",
        "underlyingType": {
          "id": 42691,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "1567:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        }
      },
      {
        "id": 42694,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "2121:22:95",
        "nodes": [],
        "canonicalName": "Clock",
        "name": "Clock",
        "nameLocation": "2126:5:95",
        "underlyingType": {
          "id": 42693,
          "name": "uint128",
          "nodeType": "ElementaryTypeName",
          "src": "2135:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_uint128",
            "typeString": "uint128"
          }
        }
      },
      {
        "id": 42696,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "2507:25:95",
        "nodes": [],
        "canonicalName": "Position",
        "name": "Position",
        "nameLocation": "2512:8:95",
        "underlyingType": {
          "id": 42695,
          "name": "uint128",
          "nodeType": "ElementaryTypeName",
          "src": "2524:7:95",
          "typeDescriptions": {
            "typeIdentifier": "t_uint128",
            "typeString": "uint128"
          }
        }
      },
      {
        "id": 42698,
        "nodeType": "UserDefinedValueTypeDefinition",
        "src": "2601:23:95",
        "nodes": [],
        "canonicalName": "GameType",
        "name": "GameType",
        "nameLocation": "2606:8:95",
        "underlyingType": {
          "id": 42697,
          "name": "uint8",
          "nodeType": "ElementaryTypeName",
          "src": "2618:5:95",
          "typeDescriptions": {
            "typeIdentifier": "t_uint8",
            "typeString": "uint8"
          }
        }
      },
      {
        "id": 42702,
        "nodeType": "EnumDefinition",
        "src": "2678:299:95",
        "nodes": [],
        "canonicalName": "GameStatus",
        "members": [
          {
            "id": 42699,
            "name": "IN_PROGRESS",
            "nameLocation": "2769:11:95",
            "nodeType": "EnumValue",
            "src": "2769:11:95"
          },
          {
            "id": 42700,
            "name": "CHALLENGER_WINS",
            "nameLocation": "2866:15:95",
            "nodeType": "EnumValue",
            "src": "2866:15:95"
          },
          {
            "id": 42701,
            "name": "DEFENDER_WINS",
            "nameLocation": "2962:13:95",
            "nodeType": "EnumValue",
            "src": "2962:13:95"
          }
        ],
        "name": "GameStatus",
        "nameLocation": "2683:10:95"
      },
      {
        "id": 42728,
        "nodeType": "ContractDefinition",
        "src": "3072:485:95",
        "nodes": [
          {
            "id": 42711,
            "nodeType": "VariableDeclaration",
            "src": "3187:51:95",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42704,
              "nodeType": "StructuredDocumentation",
              "src": "3096:86:95",
              "text": "@dev The game will use a `IDisputeGame` implementation that utilizes fault proofs."
            },
            "mutability": "constant",
            "name": "FAULT",
            "nameLocation": "3214:5:95",
            "scope": 42728,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
              "typeString": "GameType"
            },
            "typeName": {
              "id": 42706,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42705,
                "name": "GameType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "3187:8:95"
              },
              "referencedDeclaration": 42698,
              "src": "3187:8:95",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
                "typeString": "GameType"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 42709,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3236:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "expression": {
                  "id": 42707,
                  "name": "GameType",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42698,
                  "src": "3222:8:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$42698_$",
                    "typeString": "type(GameType)"
                  }
                },
                "id": 42708,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberName": "wrap",
                "nodeType": "MemberAccess",
                "src": "3222:13:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$42698_$",
                  "typeString": "function (uint8) pure returns (GameType)"
                }
              },
              "id": 42710,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3222:16:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
                "typeString": "GameType"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42719,
            "nodeType": "VariableDeclaration",
            "src": "3339:54:95",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42712,
              "nodeType": "StructuredDocumentation",
              "src": "3245:89:95",
              "text": "@dev The game will use a `IDisputeGame` implementation that utilizes validity proofs."
            },
            "mutability": "constant",
            "name": "VALIDITY",
            "nameLocation": "3366:8:95",
            "scope": 42728,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
              "typeString": "GameType"
            },
            "typeName": {
              "id": 42714,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42713,
                "name": "GameType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "3339:8:95"
              },
              "referencedDeclaration": 42698,
              "src": "3339:8:95",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
                "typeString": "GameType"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "31",
                  "id": 42717,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3391:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "expression": {
                  "id": 42715,
                  "name": "GameType",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42698,
                  "src": "3377:8:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$42698_$",
                    "typeString": "type(GameType)"
                  }
                },
                "id": 42716,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberName": "wrap",
                "nodeType": "MemberAccess",
                "src": "3377:13:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$42698_$",
                  "typeString": "function (uint8) pure returns (GameType)"
                }
              },
              "id": 42718,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3377:16:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
                "typeString": "GameType"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42727,
            "nodeType": "VariableDeclaration",
            "src": "3497:57:95",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42720,
              "nodeType": "StructuredDocumentation",
              "src": "3400:92:95",
              "text": "@dev The game will use a `IDisputeGame` implementation that utilizes attestation proofs."
            },
            "mutability": "constant",
            "name": "ATTESTATION",
            "nameLocation": "3524:11:95",
            "scope": 42728,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
              "typeString": "GameType"
            },
            "typeName": {
              "id": 42722,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 42721,
                "name": "GameType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42698,
                "src": "3497:8:95"
              },
              "referencedDeclaration": 42698,
              "src": "3497:8:95",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
                "typeString": "GameType"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "32",
                  "id": 42725,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3552:1:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  }
                ],
                "expression": {
                  "id": 42723,
                  "name": "GameType",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42698,
                  "src": "3538:8:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_userDefinedValueType$_GameType_$42698_$",
                    "typeString": "type(GameType)"
                  }
                },
                "id": 42724,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberName": "wrap",
                "nodeType": "MemberAccess",
                "src": "3538:13:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_GameType_$42698_$",
                  "typeString": "function (uint8) pure returns (GameType)"
                }
              },
              "id": 42726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3538:16:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$42698",
                "typeString": "GameType"
              }
            },
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GameTypes",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 42703,
          "nodeType": "StructuredDocumentation",
          "src": "2979:93:95",
          "text": "@title GameTypes\n @notice A library that defines the IDs of games that can be played."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42728
        ],
        "name": "GameTypes",
        "nameLocation": "3080:9:95",
        "scope": 42729,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 95
}