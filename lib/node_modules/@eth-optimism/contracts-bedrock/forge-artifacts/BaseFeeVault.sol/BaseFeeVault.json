{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minWithdrawalAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum FeeVault.WithdrawalNetwork",
          "name": "_withdrawalNetwork",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum FeeVault.WithdrawalNetwork",
          "name": "withdrawalNetwork",
          "type": "uint8"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MIN_WITHDRAWAL_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RECIPIENT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWAL_NETWORK",
      "outputs": [
        {
          "internalType": "enum FeeVault.WithdrawalNetwork",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProcessed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x61014060405234801561001157600080fd5b50604051610b74380380610b748339810160408190526100309161008f565b6001600160a01b03831660a05260808290526001600281858585808481111561005b5761005b6100e2565b60c081600181111561006f5761006f6100e2565b905250505060e0939093526101009190915261012052506100f892505050565b6000806000606084860312156100a457600080fd5b83516001600160a01b03811681146100bb57600080fd5b602085015160408601519194509250600281106100d757600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b60805160a05160c05160e05161010051610120516109fd6101776000396000610504015260006104db015260006104b201526000818161014201528181610354015261038f0152600081816087015281816102a301528181610332015281816103c9015261044a01526000818161018301526101a701526109fd6000f3fe6080604052600436106100695760003560e01c806384411d651161004357806384411d651461010c578063d0e12f9014610130578063d3e5792b1461017157600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e86101a5565b005b3480156100f657600080fd5b506100ff6104ab565b6040516100ca919061071b565b34801561011857600080fd5b5061012260005481565b6040519081526020016100ca565b34801561013c57600080fd5b506101647f000000000000000000000000000000000000000000000000000000000000000081565b6040516100ca919061079f565b34801561017d57600080fd5b506101227f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000047101561027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40160405180910390fd5b60004790508060008082825461029591906107e2565b9091555050604080518281527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a17f38e04cbeb8c10f8f568618aa75be0f10b6729b8b4237743b4de20cbcde2839ee817f0000000000000000000000000000000000000000000000000000000000000000337f000000000000000000000000000000000000000000000000000000000000000060405161038394939291906107fa565b60405180910390a160017f000000000000000000000000000000000000000000000000000000000000000060018111156103bf576103bf610735565b036103f3576103ef7f00000000000000000000000000000000000000000000000000000000000000005a8361054e565b5050565b604080516020810182526000815290517fe11013dd0000000000000000000000000000000000000000000000000000000081527342000000000000000000000000000000000000109163e11013dd918491610476917f0000000000000000000000000000000000000000000000000000000000000000916188b89160040161083b565b6000604051808303818588803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b505050505050565b60606104d67f0000000000000000000000000000000000000000000000000000000000000000610564565b6104ff7f0000000000000000000000000000000000000000000000000000000000000000610564565b6105287f0000000000000000000000000000000000000000000000000000000000000000610564565b60405160200161053a93929190610876565b604051602081830303815290604052905090565b600080600080600080868989f195945050505050565b6060816000036105a757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156105d157806105bb816108ec565b91506105ca9050600a83610953565b91506105ab565b60008167ffffffffffffffff8111156105ec576105ec610967565b6040519080825280601f01601f191660200182016040528015610616576020820181803683370190505b5090505b84156106995761062b600183610996565b9150610638600a866109ad565b6106439060306107e2565b60f81b818381518110610658576106586109c1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610692600a86610953565b945061061a565b949350505050565b60005b838110156106bc5781810151838201526020016106a4565b838111156106cb576000848401525b50505050565b600081518084526106e98160208601602086016106a1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061072e60208301846106d1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061079b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016107ad8284610764565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156107f5576107f56107b3565b500190565b84815273ffffffffffffffffffffffffffffffffffffffff848116602083015283166040820152608081016108326060830184610764565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff8316602082015260606040820152600061083260608301846106d1565b600084516108888184602089016106a1565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516108c4816001850160208a016106a1565b600192019182015283516108df8160028401602088016106a1565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361091d5761091d6107b3565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261096257610962610924565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156109a8576109a86107b3565b500390565b6000826109bc576109bc610924565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "355:570:55:-:0;;;712:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2511:22:202;;;;2543:44;;;;912:1:55;915;912;851:10;863:20;885:18;;2597:39:202;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;762:22:211;;;;;794;;;;;826;;-1:-1:-1;355:570:55;;-1:-1:-1;;;355:570:55;14:518:283;126:6;134;142;195:2;183:9;174:7;170:23;166:32;163:52;;;211:1;208;201:12;163:52;237:16;;-1:-1:-1;;;;;282:31:283;;272:42;;262:70;;328:1;325;318:12;262:70;396:2;381:18;;375:25;445:2;430:18;;424:25;351:5;;-1:-1:-1;375:25:283;-1:-1:-1;480:1:283;468:14;;458:42;;496:1;493;486:12;458:42;519:7;509:17;;;14:518;;;;;:::o;537:127::-;598:10;593:3;589:20;586:1;579:31;629:4;626:1;619:15;653:4;650:1;643:15;537:127;355:570:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100695760003560e01c806384411d651161004357806384411d651461010c578063d0e12f9014610130578063d3e5792b1461017157600080fd5b80630d9019e1146100755780633ccfd60b146100d357806354fd4d50146100ea57600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156100df57600080fd5b506100e86101a5565b005b3480156100f657600080fd5b506100ff6104ab565b6040516100ca919061071b565b34801561011857600080fd5b5061012260005481565b6040519081526020016100ca565b34801561013c57600080fd5b506101647f000000000000000000000000000000000000000000000000000000000000000081565b6040516100ca919061079f565b34801561017d57600080fd5b506101227f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000047101561027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40160405180910390fd5b60004790508060008082825461029591906107e2565b9091555050604080518281527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a17f38e04cbeb8c10f8f568618aa75be0f10b6729b8b4237743b4de20cbcde2839ee817f0000000000000000000000000000000000000000000000000000000000000000337f000000000000000000000000000000000000000000000000000000000000000060405161038394939291906107fa565b60405180910390a160017f000000000000000000000000000000000000000000000000000000000000000060018111156103bf576103bf610735565b036103f3576103ef7f00000000000000000000000000000000000000000000000000000000000000005a8361054e565b5050565b604080516020810182526000815290517fe11013dd0000000000000000000000000000000000000000000000000000000081527342000000000000000000000000000000000000109163e11013dd918491610476917f0000000000000000000000000000000000000000000000000000000000000000916188b89160040161083b565b6000604051808303818588803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b505050505050565b60606104d67f0000000000000000000000000000000000000000000000000000000000000000610564565b6104ff7f0000000000000000000000000000000000000000000000000000000000000000610564565b6105287f0000000000000000000000000000000000000000000000000000000000000000610564565b60405160200161053a93929190610876565b604051602081830303815290604052905090565b600080600080600080868989f195945050505050565b6060816000036105a757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156105d157806105bb816108ec565b91506105ca9050600a83610953565b91506105ab565b60008167ffffffffffffffff8111156105ec576105ec610967565b6040519080825280601f01601f191660200182016040528015610616576020820181803683370190505b5090505b84156106995761062b600183610996565b9150610638600a866109ad565b6106439060306107e2565b60f81b818381518110610658576106586109c1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610692600a86610953565b945061061a565b949350505050565b60005b838110156106bc5781810151838201526020016106a4565b838111156106cb576000848401525b50505050565b600081518084526106e98160208601602086016106a1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061072e60208301846106d1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061079b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016107ad8284610764565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156107f5576107f56107b3565b500190565b84815273ffffffffffffffffffffffffffffffffffffffff848116602083015283166040820152608081016108326060830184610764565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff8316602082015260606040820152600061083260608301846106d1565b600084516108888184602089016106a1565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516108c4816001850160208a016106a1565b600192019182015283516108df8160028401602088016106a1565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361091d5761091d6107b3565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261096257610962610924565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156109a8576109a86107b3565b500390565b6000826109bc576109bc610924565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "355:570:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:34:202;;;;;;;;;;;;;;;;;;190:42:283;178:55;;;160:74;;148:2;133:18;872:34:202;;;;;;;;2813:769;;;;;;;;;;;;;:::i;:::-;;972:372:211;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1240:29:202:-;;;;;;;;;;;;;;;;;;;1201:25:283;;;1189:2;1174:18;1240:29:202;1055:177:283;979:53:202;;;;;;;;;;;;;;;;;;;;;;:::i;768:46::-;;;;;;;;;;;;;;;2813:769;2898:21;2873;:46;;2852:167;;;;;;;2166:2:283;2852:167:202;;;2148:21:283;2205:2;2185:18;;;2178:30;2244:34;2224:18;;;2217:62;2315:34;2295:18;;;2288:62;2387:12;2366:19;;;2359:41;2417:19;;2852:167:202;;;;;;;;3030:13;3046:21;3030:37;;3095:5;3077:14;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;3116:40:202;;;2971:25:283;;;3134:9:202;3015:42:283;3093:15;3088:2;3073:18;;3066:43;3145:10:202;3125:18:283;;;3118:43;3116:40:202;;;;;;;2959:2:283;3116:40:202;;;3171:60;3182:5;3189:9;3200:10;3212:18;3171:60;;;;;;;;;:::i;:::-;;;;;;;;3268:20;3246:18;:42;;;;;;;;:::i;:::-;;3242:334;;3304:42;3318:9;3329;3340:5;3304:13;:42::i;:::-;;2842:740;2813:769::o;3242:334::-;3542:9;;;;;;;;-1:-1:-1;3542:9:202;;3377:188;;;;;643:42:99;;3377:68:202;;3454:5;;3377:188;;3479:9;;1164:6;;3377:188;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2842:740;2813:769::o;972:372:211:-;1012:13;1118:31;1135:13;1118:16;:31::i;:::-;1196;1213:13;1196:16;:31::i;:::-;1274;1291:13;1274:16;:31::i;:::-;1080:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1037:300;;972:372;:::o;429:462:100:-;538:4;554:13;825:1;796;768;740;701:6;663:7;634:4;612:238;600:250;429:462;-1:-1:-1;;;;;429:462:100:o;392:703:250:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:250;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:250;;-1:-1:-1;837:2:250;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:250;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:250;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:250;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:250:o;245:258:283:-;317:1;327:113;341:6;338:1;335:13;327:113;;;417:11;;;411:18;398:11;;;391:39;363:2;356:10;327:113;;;458:6;455:1;452:13;449:48;;;493:1;484:6;479:3;475:16;468:27;449:48;;245:258;;;:::o;508:317::-;550:3;588:5;582:12;615:6;610:3;603:19;631:63;687:6;680:4;675:3;671:14;664:4;657:5;653:16;631:63;:::i;:::-;739:2;727:15;744:66;723:88;714:98;;;;814:4;710:109;;508:317;-1:-1:-1;;508:317:283:o;830:220::-;979:2;968:9;961:21;942:4;999:45;1040:2;1029:9;1025:18;1017:6;999:45;:::i;:::-;991:53;830:220;-1:-1:-1;;;830:220:283:o;1237:184::-;1289:77;1286:1;1279:88;1386:4;1383:1;1376:15;1410:4;1407:1;1400:15;1426:302;1515:1;1508:5;1505:12;1495:200;;1551:77;1548:1;1541:88;1652:4;1649:1;1642:15;1680:4;1677:1;1670:15;1495:200;1704:18;;1426:302::o;1733:226::-;1889:2;1874:18;;1901:52;1878:9;1935:6;1901:52;:::i;:::-;1733:226;;;;:::o;2447:184::-;2499:77;2496:1;2489:88;2596:4;2593:1;2586:15;2620:4;2617:1;2610:15;2636:128;2676:3;2707:1;2703:6;2700:1;2697:13;2694:39;;;2713:18;;:::i;:::-;-1:-1:-1;2749:9:283;;2636:128::o;3172:519::-;3425:25;;;3469:42;3547:15;;;3542:2;3527:18;;3520:43;3599:15;;3594:2;3579:18;;3572:43;3412:3;3397:19;;3624:61;3681:2;3666:18;;3658:6;3624:61;:::i;:::-;3172:519;;;;;;;:::o;3696:424::-;3909:42;3901:6;3897:55;3886:9;3879:74;4001:10;3993:6;3989:23;3984:2;3973:9;3969:18;3962:51;4049:2;4044;4033:9;4029:18;4022:30;3860:4;4069:45;4110:2;4099:9;4095:18;4087:6;4069:45;:::i;4125:960::-;4554:3;4592:6;4586:13;4608:53;4654:6;4649:3;4642:4;4634:6;4630:17;4608:53;:::i;:::-;4692:6;4687:3;4683:16;4670:29;;4718:3;4744:2;4737:5;4730:17;4778:6;4772:13;4794:65;4850:8;4846:1;4839:5;4835:13;4828:4;4820:6;4816:17;4794:65;:::i;:::-;4922:1;4878:20;;4914:10;;;4907:22;4954:13;;4976:62;4954:13;5025:1;5017:10;;5010:4;4998:17;;4976:62;:::i;:::-;5058:17;5077:1;5054:25;;4125:960;-1:-1:-1;;;;;4125:960:283:o;5090:195::-;5129:3;5160:66;5153:5;5150:77;5147:103;;5230:18;;:::i;:::-;-1:-1:-1;5277:1:283;5266:13;;5090:195::o;5290:184::-;5342:77;5339:1;5332:88;5439:4;5436:1;5429:15;5463:4;5460:1;5453:15;5479:120;5519:1;5545;5535:35;;5550:18;;:::i;:::-;-1:-1:-1;5584:9:283;;5479:120::o;5604:184::-;5656:77;5653:1;5646:88;5753:4;5750:1;5743:15;5777:4;5774:1;5767:15;5793:125;5833:4;5861:1;5858;5855:8;5852:34;;;5866:18;;:::i;:::-;-1:-1:-1;5903:9:283;;5793:125::o;5923:112::-;5955:1;5981;5971:35;;5986:18;;:::i;:::-;-1:-1:-1;6020:9:283;;5923:112::o;6040:184::-;6092:77;6089:1;6082:88;6189:4;6186:1;6179:15;6213:4;6210:1;6203:15",
    "linkReferences": {},
    "immutableReferences": {
      "104363": [
        {
          "start": 387,
          "length": 32
        },
        {
          "start": 423,
          "length": 32
        }
      ],
      "104366": [
        {
          "start": 135,
          "length": 32
        },
        {
          "start": 675,
          "length": 32
        },
        {
          "start": 818,
          "length": 32
        },
        {
          "start": 969,
          "length": 32
        },
        {
          "start": 1098,
          "length": 32
        }
      ],
      "104370": [
        {
          "start": 322,
          "length": 32
        },
        {
          "start": 852,
          "length": 32
        },
        {
          "start": 911,
          "length": 32
        }
      ],
      "106017": [
        {
          "start": 1202,
          "length": 32
        }
      ],
      "106020": [
        {
          "start": 1243,
          "length": 32
        }
      ],
      "106023": [
        {
          "start": 1284,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MIN_WITHDRAWAL_AMOUNT()": "d3e5792b",
    "RECIPIENT()": "0d9019e1",
    "WITHDRAWAL_NETWORK()": "d0e12f90",
    "totalProcessed()": "84411d65",
    "version()": "54fd4d50",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minWithdrawalAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FeeVault.WithdrawalNetwork\",\"name\":\"_withdrawalNetwork\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum FeeVault.WithdrawalNetwork\",\"name\":\"withdrawalNetwork\",\"type\":\"uint8\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_WITHDRAWAL_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECIPIENT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_NETWORK\",\"outputs\":[{\"internalType\":\"enum FeeVault.WithdrawalNetwork\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProcessed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@custom:predeploy 0x4200000000000000000000000000000000000019\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:semver\":\"1.2.1\",\"params\":{\"_minWithdrawalAmount\":\"Minimum balance for withdrawals.\",\"_recipient\":\"Wallet that will receive the fees.\",\"_withdrawalNetwork\":\"Network which the recipient will receive fees on.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"BaseFeeVault\",\"version\":1},\"userdoc\":{\"events\":{\"Withdrawal(uint256,address,address)\":{\"notice\":\"Emitted each time a withdrawal occurs. This event will be deprecated         in favor of the Withdrawal event containing the WithdrawalNetwork parameter.\"},\"Withdrawal(uint256,address,address,uint8)\":{\"notice\":\"Emitted each time a withdrawal occurs.\"}},\"kind\":\"user\",\"methods\":{\"MIN_WITHDRAWAL_AMOUNT()\":{\"notice\":\"Minimum balance before a withdrawal can be triggered.\"},\"RECIPIENT()\":{\"notice\":\"Wallet that will receive the fees.\"},\"WITHDRAWAL_NETWORK()\":{\"notice\":\"Network which the RECIPIENT will receive fees on.\"},\"constructor\":{\"notice\":\"Constructs the BaseFeeVault contract.\"},\"totalProcessed()\":{\"notice\":\"Total amount of wei processed by the contract.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"},\"withdraw()\":{\"notice\":\"Triggers a withdrawal of funds to the fee wallet on L1 or L2.\"}},\"notice\":\"The BaseFeeVault accumulates the base fee that is paid by transactions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L2/BaseFeeVault.sol\":\"BaseFeeVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L1/ResourceMetering.sol\":{\"keccak256\":\"0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562\",\"dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP\"]},\"contracts/L2/BaseFeeVault.sol\":{\"keccak256\":\"0x3c929cb49a6f56923198ed5b0dd26063f71826497e2b7b157cc29ce3be613b05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d68460aae3415cba49dd72ada3e7677880f22600b3ba56c040096a87a881185b\",\"dweb:/ipfs/QmUR7Y7n6232ZTL6d2wmqD3uq9yMQEZqXDLVCUKLkKebGL\"]},\"contracts/L2/L2StandardBridge.sol\":{\"keccak256\":\"0x37f55677ac9c8604d1cd138df27360a3d39a9ce235e52e18d7f3bf097c2e11c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdb0a0e224e874b8407147b9697401e81b089f1bbdea9cd232914371dfe223c9\",\"dweb:/ipfs/Qme9T3GFUtgf24ceTKt1h8Bm42VeUgKvtwEpnQT5KjDv9R\"]},\"contracts/libraries/Arithmetic.sol\":{\"keccak256\":\"0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0\",\"dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0xb3d5f5370d106d181fd6a3cc6c8ca2e476577d487572be089b746c1a71a7b82b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b20c0f7818daf78634aa721b441a2fd7469bfd20fd2d63c922437c3037b8cdb\",\"dweb:/ipfs/QmUtpZYavK7njnqXkpi1QA5A2mwDKXyjkU1hhSo9vRLoFq\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0xb6908eada9896c172eb16ac196763fe82b07c595f424c19c1734ffd7cd437622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382ddbc903bf239dcd752f13cbc40cd271afd99323f2d11b8d7b20a069d257be\",\"dweb:/ipfs/QmeUbvEbwDoJV1ytiu4xUMReMePMYSHJ2m4mFPiidCGJrf\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x2e232df6b4c6e30f33d8242b41848331285a0439227e80bd4e0a2d7d599ce06d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495ca371e91787525f421162ac77fb30e0887a8df0a6e36a79017e711f8496e4\",\"dweb:/ipfs/QmcJjNWwXiKeosTQRoRM1qjC2f8GUkrFNA8hwthoNedjsq\"]},\"contracts/libraries/Predeploys.sol\":{\"keccak256\":\"0x2d52e58c80b25dde5b2d5dfb341402e75b80eef445a471d8865eea61afbfe386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecfed7520b882ddb78c7c24903450e9e4bca75a4ee98bccf812fc29ce6bf9fac\",\"dweb:/ipfs/QmU9Vb4geyqujXucm6w343nZpZeXhp4b9YtiRAX3nnFdmv\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0x4cabce33fa3c59ff3206dae21722fe34e5753ea8d9246fc07c0d23cbdb3610f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba2beeed5a481afdd92fe09ff8b25b423a8f8d77816b41039603d35aca733cc\",\"dweb:/ipfs/QmPztnkeUeZjZ5BnWAdAAF9fg7QiCkYdffzzvoCxUsVLLM\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x2371d20825b028f3d4b79db49b58d132929476f828fe4dcade9a2ddf5376d563\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1406d7d1f508361eaec926f28b0921fd95b2c57a3919d1f9f40b39e805472c64\",\"dweb:/ipfs/QmRtGgeFBt1RimoRRNKHL8VDZP9q9eRCke2gcWNZhYaTc6\"]},\"contracts/universal/FeeVault.sol\":{\"keccak256\":\"0x752bd5f6dfb864abda3b4265959a45cefa8c2ce4173c76e6cf81b462e78fdb2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaa59c23469de0729f3a0e5e1ec67c53f01c7edb5950ad9979cf46336372f9a7\",\"dweb:/ipfs/QmfYqWreCqe9XJ6C1J57A9gV4YhZexsVuZR6AhB9KeXYTy\"]},\"contracts/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"contracts/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x5a1ab7017a51cdab1fa9e7e1115d457f7e9de3cbaafc6e5ebd0b3d329c68067a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://724ca40a2633281496b7937c3d2779d111e687992da270c01fb34c3e910f8972\",\"dweb:/ipfs/QmRCPnPttVn1BW5yiD15kgHvzEfQskAYEGpDhwGa9RtK2Y\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"contracts/universal/StandardBridge.sol\":{\"keccak256\":\"0x26b356ba263e3b450aa9d5552eec610d0f0230ee03419eb79244d22751d13270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c169ebe65997b38be60549481a706fb3136d758a722f69fd1814f11f4db1165f\",\"dweb:/ipfs/QmeJ6jVABTZJ17vAwniU48crERAkbKkTwqZr25wJkBXBV7\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minWithdrawalAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FeeVault.WithdrawalNetwork",
              "name": "_withdrawalNetwork",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "enum FeeVault.WithdrawalNetwork",
              "name": "withdrawalNetwork",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_WITHDRAWAL_AMOUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RECIPIENT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WITHDRAWAL_NETWORK",
          "outputs": [
            {
              "internalType": "enum FeeVault.WithdrawalNetwork",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalProcessed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:semver": "1.2.1",
            "params": {
              "_minWithdrawalAmount": "Minimum balance for withdrawals.",
              "_recipient": "Wallet that will receive the fees.",
              "_withdrawalNetwork": "Network which the recipient will receive fees on."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MIN_WITHDRAWAL_AMOUNT()": {
            "notice": "Minimum balance before a withdrawal can be triggered."
          },
          "RECIPIENT()": {
            "notice": "Wallet that will receive the fees."
          },
          "WITHDRAWAL_NETWORK()": {
            "notice": "Network which the RECIPIENT will receive fees on."
          },
          "constructor": {
            "notice": "Constructs the BaseFeeVault contract."
          },
          "totalProcessed()": {
            "notice": "Total amount of wei processed by the contract."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          },
          "withdraw()": {
            "notice": "Triggers a withdrawal of funds to the fee wallet on L1 or L2."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/L2/BaseFeeVault.sol": "BaseFeeVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L1/ResourceMetering.sol": {
        "keccak256": "0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743",
        "urls": [
          "bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562",
          "dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP"
        ],
        "license": "MIT"
      },
      "contracts/L2/BaseFeeVault.sol": {
        "keccak256": "0x3c929cb49a6f56923198ed5b0dd26063f71826497e2b7b157cc29ce3be613b05",
        "urls": [
          "bzz-raw://d68460aae3415cba49dd72ada3e7677880f22600b3ba56c040096a87a881185b",
          "dweb:/ipfs/QmUR7Y7n6232ZTL6d2wmqD3uq9yMQEZqXDLVCUKLkKebGL"
        ],
        "license": "MIT"
      },
      "contracts/L2/L2StandardBridge.sol": {
        "keccak256": "0x37f55677ac9c8604d1cd138df27360a3d39a9ce235e52e18d7f3bf097c2e11c4",
        "urls": [
          "bzz-raw://cdb0a0e224e874b8407147b9697401e81b089f1bbdea9cd232914371dfe223c9",
          "dweb:/ipfs/Qme9T3GFUtgf24ceTKt1h8Bm42VeUgKvtwEpnQT5KjDv9R"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Arithmetic.sol": {
        "keccak256": "0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2",
        "urls": [
          "bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0",
          "dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Constants.sol": {
        "keccak256": "0xb3d5f5370d106d181fd6a3cc6c8ca2e476577d487572be089b746c1a71a7b82b",
        "urls": [
          "bzz-raw://1b20c0f7818daf78634aa721b441a2fd7469bfd20fd2d63c922437c3037b8cdb",
          "dweb:/ipfs/QmUtpZYavK7njnqXkpi1QA5A2mwDKXyjkU1hhSo9vRLoFq"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0xb6908eada9896c172eb16ac196763fe82b07c595f424c19c1734ffd7cd437622",
        "urls": [
          "bzz-raw://382ddbc903bf239dcd752f13cbc40cd271afd99323f2d11b8d7b20a069d257be",
          "dweb:/ipfs/QmeUbvEbwDoJV1ytiu4xUMReMePMYSHJ2m4mFPiidCGJrf"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x2e232df6b4c6e30f33d8242b41848331285a0439227e80bd4e0a2d7d599ce06d",
        "urls": [
          "bzz-raw://495ca371e91787525f421162ac77fb30e0887a8df0a6e36a79017e711f8496e4",
          "dweb:/ipfs/QmcJjNWwXiKeosTQRoRM1qjC2f8GUkrFNA8hwthoNedjsq"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Predeploys.sol": {
        "keccak256": "0x2d52e58c80b25dde5b2d5dfb341402e75b80eef445a471d8865eea61afbfe386",
        "urls": [
          "bzz-raw://ecfed7520b882ddb78c7c24903450e9e4bca75a4ee98bccf812fc29ce6bf9fac",
          "dweb:/ipfs/QmU9Vb4geyqujXucm6w343nZpZeXhp4b9YtiRAX3nnFdmv"
        ],
        "license": "MIT"
      },
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0x4cabce33fa3c59ff3206dae21722fe34e5753ea8d9246fc07c0d23cbdb3610f3",
        "urls": [
          "bzz-raw://6ba2beeed5a481afdd92fe09ff8b25b423a8f8d77816b41039603d35aca733cc",
          "dweb:/ipfs/QmPztnkeUeZjZ5BnWAdAAF9fg7QiCkYdffzzvoCxUsVLLM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x2371d20825b028f3d4b79db49b58d132929476f828fe4dcade9a2ddf5376d563",
        "urls": [
          "bzz-raw://1406d7d1f508361eaec926f28b0921fd95b2c57a3919d1f9f40b39e805472c64",
          "dweb:/ipfs/QmRtGgeFBt1RimoRRNKHL8VDZP9q9eRCke2gcWNZhYaTc6"
        ],
        "license": "MIT"
      },
      "contracts/universal/FeeVault.sol": {
        "keccak256": "0x752bd5f6dfb864abda3b4265959a45cefa8c2ce4173c76e6cf81b462e78fdb2c",
        "urls": [
          "bzz-raw://aaa59c23469de0729f3a0e5e1ec67c53f01c7edb5950ad9979cf46336372f9a7",
          "dweb:/ipfs/QmfYqWreCqe9XJ6C1J57A9gV4YhZexsVuZR6AhB9KeXYTy"
        ],
        "license": "MIT"
      },
      "contracts/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "contracts/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x5a1ab7017a51cdab1fa9e7e1115d457f7e9de3cbaafc6e5ebd0b3d329c68067a",
        "urls": [
          "bzz-raw://724ca40a2633281496b7937c3d2779d111e687992da270c01fb34c3e910f8972",
          "dweb:/ipfs/QmRCPnPttVn1BW5yiD15kgHvzEfQskAYEGpDhwGa9RtK2Y"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "contracts/universal/StandardBridge.sol": {
        "keccak256": "0x26b356ba263e3b450aa9d5552eec610d0f0230ee03419eb79244d22751d13270",
        "urls": [
          "bzz-raw://c169ebe65997b38be60549481a706fb3136d758a722f69fd1814f11f4db1165f",
          "dweb:/ipfs/QmeJ6jVABTZJ17vAwniU48crERAkbKkTwqZr25wJkBXBV7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 104377,
        "contract": "contracts/L2/BaseFeeVault.sol:BaseFeeVault",
        "label": "totalProcessed",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MIN_WITHDRAWAL_AMOUNT()": {
        "notice": "Minimum balance before a withdrawal can be triggered."
      },
      "RECIPIENT()": {
        "notice": "Wallet that will receive the fees."
      },
      "WITHDRAWAL_NETWORK()": {
        "notice": "Network which the RECIPIENT will receive fees on."
      },
      "constructor": {
        "notice": "Constructs the BaseFeeVault contract."
      },
      "totalProcessed()": {
        "notice": "Total amount of wei processed by the contract."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      },
      "withdraw()": {
        "notice": "Triggers a withdrawal of funds to the fee wallet on L1 or L2."
      }
    },
    "events": {
      "Withdrawal(uint256,address,address)": {
        "notice": "Emitted each time a withdrawal occurs. This event will be deprecated         in favor of the Withdrawal event containing the WithdrawalNetwork parameter."
      },
      "Withdrawal(uint256,address,address,uint8)": {
        "notice": "Emitted each time a withdrawal occurs."
      }
    },
    "notice": "The BaseFeeVault accumulates the base fee that is paid by transactions."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_minWithdrawalAmount": "Minimum balance for withdrawals.",
          "_recipient": "Wallet that will receive the fees.",
          "_withdrawalNetwork": "Network which the recipient will receive fees on."
        }
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "title": "BaseFeeVault"
  },
  "ast": {
    "absolutePath": "contracts/L2/BaseFeeVault.sol",
    "id": 37453,
    "exportedSymbols": {
      "BaseFeeVault": [
        37452
      ],
      "FeeVault": [
        104505
      ],
      "Semver": [
        106075
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:894:55",
    "nodes": [
      {
        "id": 37420,
        "nodeType": "PragmaDirective",
        "src": "32:23:55",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 37422,
        "nodeType": "ImportDirective",
        "src": "57:49:55",
        "nodes": [],
        "absolutePath": "contracts/universal/Semver.sol",
        "file": "../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37453,
        "sourceUnit": 106076,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37421,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106075,
              "src": "66:6:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37424,
        "nodeType": "ImportDirective",
        "src": "107:53:55",
        "nodes": [],
        "absolutePath": "contracts/universal/FeeVault.sol",
        "file": "../universal/FeeVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37453,
        "sourceUnit": 104506,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37423,
              "name": "FeeVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 104505,
              "src": "116:8:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37452,
        "nodeType": "ContractDefinition",
        "src": "355:570:55",
        "nodes": [
          {
            "id": 37451,
            "nodeType": "FunctionDefinition",
            "src": "712:211:55",
            "nodes": [],
            "body": {
              "id": 37450,
              "nodeType": "Block",
              "src": "921:2:55",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 37430,
              "nodeType": "StructuredDocumentation",
              "src": "403:304:55",
              "text": "@custom:semver 1.2.1\n @notice Constructs the BaseFeeVault contract.\n @param _recipient           Wallet that will receive the fees.\n @param _minWithdrawalAmount Minimum balance for withdrawals.\n @param _withdrawalNetwork   Network which the recipient will receive fees on."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37440,
                    "name": "_recipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37432,
                    "src": "851:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 37441,
                    "name": "_minWithdrawalAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37434,
                    "src": "863:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 37442,
                    "name": "_withdrawalNetwork",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37437,
                    "src": "885:18:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WithdrawalNetwork_$104360",
                      "typeString": "enum FeeVault.WithdrawalNetwork"
                    }
                  }
                ],
                "id": 37443,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37439,
                  "name": "FeeVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104505,
                  "src": "842:8:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "842:62:55"
              },
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 37445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "912:1:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "32",
                    "id": 37446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "915:1:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  {
                    "hexValue": "31",
                    "id": 37447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "918:1:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 37448,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37444,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106075,
                  "src": "905:6:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "905:15:55"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37432,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "741:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 37451,
                  "src": "733:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37434,
                  "mutability": "mutable",
                  "name": "_minWithdrawalAmount",
                  "nameLocation": "769:20:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 37451,
                  "src": "761:28:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37437,
                  "mutability": "mutable",
                  "name": "_withdrawalNetwork",
                  "nameLocation": "817:18:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 37451,
                  "src": "799:36:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WithdrawalNetwork_$104360",
                    "typeString": "enum FeeVault.WithdrawalNetwork"
                  },
                  "typeName": {
                    "id": 37436,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37435,
                      "name": "WithdrawalNetwork",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 104360,
                      "src": "799:17:55"
                    },
                    "referencedDeclaration": 104360,
                    "src": "799:17:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WithdrawalNetwork_$104360",
                      "typeString": "enum FeeVault.WithdrawalNetwork"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:118:55"
            },
            "returnParameters": {
              "id": 37449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:55"
            },
            "scope": 37452,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37426,
              "name": "FeeVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104505,
              "src": "380:8:55"
            },
            "id": 37427,
            "nodeType": "InheritanceSpecifier",
            "src": "380:8:55"
          },
          {
            "baseName": {
              "id": 37428,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106075,
              "src": "390:6:55"
            },
            "id": 37429,
            "nodeType": "InheritanceSpecifier",
            "src": "390:6:55"
          }
        ],
        "canonicalName": "BaseFeeVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37425,
          "nodeType": "StructuredDocumentation",
          "src": "162:193:55",
          "text": "@custom:proxied\n @custom:predeploy 0x4200000000000000000000000000000000000019\n @title BaseFeeVault\n @notice The BaseFeeVault accumulates the base fee that is paid by transactions."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37452,
          106075,
          104505
        ],
        "name": "BaseFeeVault",
        "nameLocation": "364:12:55",
        "scope": 37453,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 55
}