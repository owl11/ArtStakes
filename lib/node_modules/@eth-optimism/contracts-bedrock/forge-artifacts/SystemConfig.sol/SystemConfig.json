{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_overhead",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_scalar",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_batcherHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_gasLimit",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_unsafeBlockSigner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "maxResourceLimit",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "elasticityMultiplier",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "minimumBaseFee",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "systemTxMaxGas",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "maximumBaseFee",
              "type": "uint128"
            }
          ],
          "internalType": "struct ResourceMetering.ResourceConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "enum SystemConfig.UpdateType",
          "name": "updateType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ConfigUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "UNSAFE_BLOCK_SIGNER_SLOT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batcherHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasLimit",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_overhead",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_scalar",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_batcherHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_gasLimit",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_unsafeBlockSigner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "maxResourceLimit",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "elasticityMultiplier",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "minimumBaseFee",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "systemTxMaxGas",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "maximumBaseFee",
              "type": "uint128"
            }
          ],
          "internalType": "struct ResourceMetering.ResourceConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumGasLimit",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "overhead",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resourceConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "maxResourceLimit",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "elasticityMultiplier",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "minimumBaseFee",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "systemTxMaxGas",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "maximumBaseFee",
              "type": "uint128"
            }
          ],
          "internalType": "struct ResourceMetering.ResourceConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scalar",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_batcherHash",
          "type": "bytes32"
        }
      ],
      "name": "setBatcherHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_overhead",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_scalar",
          "type": "uint256"
        }
      ],
      "name": "setGasConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_gasLimit",
          "type": "uint64"
        }
      ],
      "name": "setGasLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "maxResourceLimit",
              "type": "uint32"
            },
            {
              "internalType": "uint8",
              "name": "elasticityMultiplier",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "minimumBaseFee",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "systemTxMaxGas",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "maximumBaseFee",
              "type": "uint128"
            }
          ],
          "internalType": "struct ResourceMetering.ResourceConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "setResourceConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_unsafeBlockSigner",
          "type": "address"
        }
      ],
      "name": "setUnsafeBlockSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unsafeBlockSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620022d2380380620022d2833981016040819052620000349162000859565b60016080819052600360a05260c052620000548787878787878762000061565b5050505050505062000a59565b600054610100900460ff1615808015620000825750600054600160ff909116105b80620000b257506200009f306200027060201b62000adf1760201c565b158015620000b2575060005460ff166001145b6200011b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156200013f576000805461ff0019166101001790555b620001496200027f565b6200015488620002e7565b606587905560668690556067859055606880546001600160401b0319166001600160401b038616179055620001a7837f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c0855565b620001b28262000366565b620001bc620006bb565b6001600160401b0316846001600160401b031610156200021f5760405162461bcd60e51b815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f7700604482015260640162000112565b801562000266576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b03163b151590565b600054610100900460ff16620002db5760405162461bcd60e51b815260206004820152602b6024820152600080516020620022b283398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000112565b620002e5620006e8565b565b620002f16200074f565b6001600160a01b038116620003585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000112565b6200036381620007ab565b50565b8060a001516001600160801b0316816060015163ffffffff161115620003f55760405162461bcd60e51b815260206004820152603560248201527f53797374656d436f6e6669673a206d696e206261736520666565206d7573742060448201527f6265206c657373207468616e206d617820626173650000000000000000000000606482015260840162000112565b6001816040015160ff1611620004665760405162461bcd60e51b815260206004820152602f60248201527f53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206260448201526e65206c6172676572207468616e203160881b606482015260840162000112565b606854608082015182516001600160401b0390921691620004889190620009a8565b63ffffffff161115620004de5760405162461bcd60e51b815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f7700604482015260640162000112565b6000816020015160ff16116200054f5760405162461bcd60e51b815260206004820152602f60248201527f53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c60448201526e06965722063616e6e6f74206265203608c1b606482015260840162000112565b8051602082015163ffffffff82169160ff9091169062000571908290620009d3565b6200057d919062000a05565b63ffffffff1614620005f85760405162461bcd60e51b815260206004820152603760248201527f53797374656d436f6e6669673a20707265636973696f6e206c6f73732077697460448201527f6820746172676574207265736f75726365206c696d6974000000000000000000606482015260840162000112565b805160698054602084015160408501516060860151608087015160a09097015163ffffffff96871664ffffffffff199095169490941764010000000060ff948516021764ffffffffff60281b191665010000000000939092169290920263ffffffff60301b19161766010000000000009185169190910217600160501b600160f01b0319166a01000000000000000000009390941692909202600160701b600160f01b03191692909217600160701b6001600160801b0390921691909102179055565b606954600090620006e39063ffffffff6a010000000000000000000082048116911662000a34565b905090565b600054610100900460ff16620007445760405162461bcd60e51b815260206004820152602b6024820152600080516020620022b283398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000112565b620002e533620007ab565b6033546001600160a01b03163314620002e55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000112565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200081557600080fd5b919050565b805163ffffffff811681146200081557600080fd5b805160ff811681146200081557600080fd5b80516001600160801b03811681146200081557600080fd5b60008060008060008060008789036101808112156200087757600080fd5b6200088289620007fd565b60208a015160408b015160608c015160808d0151939b50919950975095506001600160401b038082168214620008b757600080fd5b819550620008c860a08c01620007fd565b945060c060bf1984011215620008dd57600080fd5b604051925060c08301915082821081831117156200090b57634e487b7160e01b600052604160045260246000fd5b506040526200091d60c08a016200081a565b81526200092d60e08a016200082f565b6020820152620009416101008a016200082f565b6040820152620009556101208a016200081a565b6060820152620009696101408a016200081a565b60808201526200097d6101608a0162000841565b60a08201528091505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff808316818516808303821115620009ca57620009ca62000992565b01949350505050565b600063ffffffff80841680620009f957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600063ffffffff8083168185168183048111821515161562000a2b5762000a2b62000992565b02949350505050565b60006001600160401b03828116848216808303821115620009ca57620009ca62000992565b60805160a05160c05161182962000a89600039600061056e015260006105450152600061051c01526118296000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063b40a817c116100cd578063f2fde38b11610081578063f68016b711610066578063f68016b7146103f7578063f975e9251461040b578063ffa1ad741461041e57600080fd5b8063f2fde38b146103db578063f45e65d8146103ee57600080fd5b8063c9b26f61116100b2578063c9b26f611461028b578063cc731b021461029e578063e81b2c6d146103d257600080fd5b8063b40a817c14610265578063c71973f61461027857600080fd5b80634f16540b11610124578063715018a611610109578063715018a61461022c5780638da5cb5b14610234578063935f029e1461025257600080fd5b80634f16540b146101f057806354fd4d501461021757600080fd5b80630c18c1621461015657806318d13918146101725780631fd19ee1146101875780634add321d146101cf575b600080fd5b61015f60655481565b6040519081526020015b60405180910390f35b610185610180366004611307565b610426565b005b7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08545b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610169565b6101d76104ea565b60405167ffffffffffffffff9091168152602001610169565b61015f7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c0881565b61021f610515565b60405161016991906113a3565b6101856105b8565b60335473ffffffffffffffffffffffffffffffffffffffff166101aa565b6101856102603660046113b6565b6105cc565b6101856102733660046113f0565b610665565b610185610286366004611548565b610750565b610185610299366004611564565b610764565b6103626040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260695463ffffffff8082168352640100000000820460ff9081166020850152650100000000008304169383019390935266010000000000008104831660608301526a0100000000000000000000810490921660808201526e0100000000000000000000000000009091046fffffffffffffffffffffffffffffffff1660a082015290565b6040516101699190600060c08201905063ffffffff80845116835260ff602085015116602084015260ff6040850151166040840152806060850151166060840152806080850151166080840152506fffffffffffffffffffffffffffffffff60a08401511660a083015292915050565b61015f60675481565b6101856103e9366004611307565b610794565b61015f60665481565b6068546101d79067ffffffffffffffff1681565b61018561041936600461157d565b610848565b61015f600081565b61042e610afb565b610456817f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c0855565b6040805173ffffffffffffffffffffffffffffffffffffffff8316602082015260009101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060035b60007f1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be836040516104de91906113a3565b60405180910390a35050565b6069546000906105109063ffffffff6a010000000000000000000082048116911661161f565b905090565b60606105407f0000000000000000000000000000000000000000000000000000000000000000610b7c565b6105697f0000000000000000000000000000000000000000000000000000000000000000610b7c565b6105927f0000000000000000000000000000000000000000000000000000000000000000610b7c565b6040516020016105a49392919061164b565b604051602081830303815290604052905090565b6105c0610afb565b6105ca6000610cb9565b565b6105d4610afb565b606582905560668190556040805160208101849052908101829052600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529050600160007f1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be8360405161065891906113a3565b60405180910390a3505050565b61066d610afb565b6106756104ea565b67ffffffffffffffff168167ffffffffffffffff1610156106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f770060448201526064015b60405180910390fd5b606880547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff831690811790915560408051602080820193909352815180820390930183528101905260026104ad565b610758610afb565b61076181610d30565b50565b61076c610afb565b60678190556040805160208082018490528251808303909101815290820190915260006104ad565b61079c610afb565b73ffffffffffffffffffffffffffffffffffffffff811661083f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ee565b61076181610cb9565b600054610100900460ff16158080156108685750600054600160ff909116105b806108825750303b158015610882575060005460ff166001145b61090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106ee565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561096c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6109746111a4565b61097d88610794565b606587905560668690556067859055606880547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff86161790557f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c088390556109ed82610d30565b6109f56104ea565b67ffffffffffffffff168467ffffffffffffffff161015610a72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f770060448201526064016106ee565b8015610ad557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60335473ffffffffffffffffffffffffffffffffffffffff1633146105ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b606081600003610bbf57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610be95780610bd3816116c1565b9150610be29050600a83611728565b9150610bc3565b60008167ffffffffffffffff811115610c0457610c0461140b565b6040519080825280601f01601f191660200182016040528015610c2e576020820181803683370190505b5090505b8415610cb157610c4360018361173c565b9150610c50600a86611753565b610c5b906030611767565b60f81b818381518110610c7057610c7061177f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610caa600a86611728565b9450610c32565b949350505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060a001516fffffffffffffffffffffffffffffffff16816060015163ffffffff161115610de0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f53797374656d436f6e6669673a206d696e206261736520666565206d7573742060448201527f6265206c657373207468616e206d61782062617365000000000000000000000060648201526084016106ee565b6001816040015160ff1611610e77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206260448201527f65206c6172676572207468616e2031000000000000000000000000000000000060648201526084016106ee565b6068546080820151825167ffffffffffffffff90921691610e9891906117ae565b63ffffffff161115610f06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f770060448201526064016106ee565b6000816020015160ff1611610f9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c60448201527f6965722063616e6e6f742062652030000000000000000000000000000000000060648201526084016106ee565b8051602082015163ffffffff82169160ff90911690610fbd9082906117cd565b610fc791906117f0565b63ffffffff161461105a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f53797374656d436f6e6669673a20707265636973696f6e206c6f73732077697460448201527f6820746172676574207265736f75726365206c696d697400000000000000000060648201526084016106ee565b805160698054602084015160408501516060860151608087015160a09097015163ffffffff9687167fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000009095169490941764010000000060ff94851602177fffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffff166501000000000093909216929092027fffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffff1617660100000000000091851691909102177fffff0000000000000000000000000000000000000000ffffffffffffffffffff166a010000000000000000000093909416929092027fffff00000000000000000000000000000000ffffffffffffffffffffffffffff16929092176e0100000000000000000000000000006fffffffffffffffffffffffffffffffff90921691909102179055565b600054610100900460ff1661123b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106ee565b6105ca600054610100900460ff166112d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106ee565b6105ca33610cb9565b803573ffffffffffffffffffffffffffffffffffffffff8116811461130257600080fd5b919050565b60006020828403121561131957600080fd5b611322826112de565b9392505050565b60005b8381101561134457818101518382015260200161132c565b83811115611353576000848401525b50505050565b60008151808452611371816020860160208601611329565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006113226020830184611359565b600080604083850312156113c957600080fd5b50508035926020909101359150565b803567ffffffffffffffff8116811461130257600080fd5b60006020828403121561140257600080fd5b611322826113d8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803563ffffffff8116811461130257600080fd5b803560ff8116811461130257600080fd5b80356fffffffffffffffffffffffffffffffff8116811461130257600080fd5b600060c0828403121561149157600080fd5b60405160c0810181811067ffffffffffffffff821117156114db577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040529050806114ea8361143a565b81526114f86020840161144e565b60208201526115096040840161144e565b604082015261151a6060840161143a565b606082015261152b6080840161143a565b608082015261153c60a0840161145f565b60a08201525092915050565b600060c0828403121561155a57600080fd5b611322838361147f565b60006020828403121561157657600080fd5b5035919050565b6000806000806000806000610180888a03121561159957600080fd5b6115a2886112de565b96506020880135955060408801359450606088013593506115c5608089016113d8565b92506115d360a089016112de565b91506115e28960c08a0161147f565b905092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818516808303821115611642576116426115f0565b01949350505050565b6000845161165d818460208901611329565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551611699816001850160208a01611329565b600192019182015283516116b4816002840160208801611329565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116f2576116f26115f0565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611737576117376116f9565b500490565b60008282101561174e5761174e6115f0565b500390565b600082611762576117626116f9565b500690565b6000821982111561177a5761177a6115f0565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600063ffffffff808316818516808303821115611642576116426115f0565b600063ffffffff808416806117e4576117e46116f9565b92169190910492915050565b600063ffffffff80831681851681830481118215151615611813576118136115f0565b0294935050505056fea164736f6c634300080f000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
    "sourceMap": "514:9864:54:-:0;;;3257:545;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3506:1;762:22:211;;;;3509:1:54;794:22:211;;826;;3525:270:54::1;3558:6:::0;3589:9;3621:7;3656:12;3693:9;3736:18;3777:7;3525:10:::1;:270::i;:::-;3257:545:::0;;;;;;;514:9864;;4328:631;3111:19:215;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:215;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:215;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:215;;2513:2:283;3157:201:215;;;2495:21:283;2552:2;2532:18;;;2525:30;2591:34;2571:18;;;2564:62;-1:-1:-1;;;2642:18:283;;;2635:44;2696:19;;3157:201:215;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:215;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:215;;;;;3394:65;4607:16:54::1;:14;:16::i;:::-;4633:25;4651:6:::0;4633:17:::1;:25::i;:::-;4668:8;:20:::0;;;4698:6:::1;:16:::0;;;4724:11:::1;:26:::0;;;4760:8:::1;:20:::0;;-1:-1:-1;;;;;;4760:20:54::1;-1:-1:-1::0;;;;;4760:20:54;::::1;;::::0;;4790:41:::1;4812:18:::0;1615:43;8035:32;7885:198;4790:41:::1;4841:27;4860:7:::0;4841:18:::1;:27::i;:::-;4899:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;4886:30:54::1;:9;-1:-1:-1::0;;;;;4886:30:54::1;;;4878:74;;;::::0;-1:-1:-1;;;4878:74:54;;2928:2:283;4878:74:54::1;::::0;::::1;2910:21:283::0;2967:2;2947:18;;;2940:30;3006:33;2986:18;;;2979:61;3057:18;;4878:74:54::1;2726:355:283::0;4878:74:54::1;3483:14:215::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:215;;;3553:14;;-1:-1:-1;3238:36:283;;3553:14:215;;3226:2:283;3211:18;3553:14:215;;;;;;;3479:99;3101:483;4328:631:54;;;;;;;:::o;1186:320:221:-;-1:-1:-1;;;;;1476:19:221;;:23;;;1186:320::o;1003:95:214:-;4910:13:215;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:215;;3487:2:283;4902:69:215;;;3469:21:283;3526:2;3506:18;;;3499:30;-1:-1:-1;;;;;;;;;;;3545:18:283;;;3538:62;-1:-1:-1;;;3616:18:283;;;3609:41;3667:19;;4902:69:215;3285:407:283;4902:69:215;1065:26:214::1;:24;:26::i;:::-;1003:95::o:0;2321:198::-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:214;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:214;;3899:2:283;2401:73:214::1;::::0;::::1;3881:21:283::0;3938:2;3918:18;;;3911:30;3977:34;3957:18;;;3950:62;-1:-1:-1;;;4028:18:283;;;4021:36;4074:19;;2401:73:214::1;3697:402:283::0;2401:73:214::1;2484:28;2503:8:::0;2484:18:::1;:28::i;:::-;2321:198:::0;:::o;8983:1393:54:-;9193:7;:22;;;-1:-1:-1;;;;;9167:48:54;:7;:22;;;:48;;;;9146:148;;;;-1:-1:-1;;;9146:148:54;;4306:2:283;9146:148:54;;;4288:21:283;4345:2;4325:18;;;4318:30;4384:34;4364:18;;;4357:62;4455:23;4435:18;;;4428:51;4496:19;;9146:148:54;4104:417:283;9146:148:54;9426:1;9388:7;:35;;;:39;;;9367:133;;;;-1:-1:-1;;;9367:133:54;;4728:2:283;9367:133:54;;;4710:21:283;4767:2;4747:18;;;4740:30;4806:34;4786:18;;;4779:62;-1:-1:-1;;;4857:18:283;;;4850:45;4912:19;;9367:133:54;4526:411:283;9367:133:54;9762:8;;9736:22;;;;9709:24;;-1:-1:-1;;;;;9762:8:54;;;;9709:49;;9736:22;9709:49;:::i;:::-;:61;;;;9688:139;;;;-1:-1:-1;;;9688:139:54;;2928:2:283;9688:139:54;;;2910:21:283;2967:2;2947:18;;;2940:30;3006:33;2986:18;;;2979:61;3057:18;;9688:139:54;2726:355:283;9688:139:54;9946:1;9915:7;:28;;;:32;;;9894:126;;;;-1:-1:-1;;;9894:126:54;;5509:2:283;9894:126:54;;;5491:21:283;5548:2;5528:18;;;5521:30;5587:34;5567:18;;;5560:62;-1:-1:-1;;;5638:18:283;;;5631:45;5693:19;;9894:126:54;5307:411:283;9894:126:54;10228:24;;10195:28;;;;10118:134;;;;10119:104;;;;;10120:55;;10119:104;;10120:55;:::i;:::-;10119:104;;;;:::i;:::-;10118:134;;;10097:236;;;;-1:-1:-1;;;10097:236:54;;6485:2:283;10097:236:54;;;6467:21:283;6524:2;6504:18;;;6497:30;6563:34;6543:18;;;6536:62;6634:25;6614:18;;;6607:53;6677:19;;10097:236:54;6283:419:283;10097:236:54;10344:25;;:15;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10344:25:54;;;;;;;;;;;;;;-1:-1:-1;;;;10344:25:54;;;;;;;;;;-1:-1:-1;;;;10344:25:54;;;;;;;;;;;-1:-1:-1;;;;;;;;10344:25:54;;;;;;;;;;-1:-1:-1;;;;;;;;10344:25:54;;;;;-1:-1:-1;;;;;;;;10344:25:54;;;;;;;;;;8983:1393::o;5417:161::-;5540:15;:30;5465:6;;5490:81;;5540:30;;;;;;;5497:32;5490:81;:::i;:::-;5483:88;;5417:161;:::o;1104:111:214:-;4910:13:215;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:215;;3487:2:283;4902:69:215;;;3469:21:283;3526:2;3506:18;;;3499:30;-1:-1:-1;;;;;;;;;;;3545:18:283;;;3538:62;-1:-1:-1;;;3616:18:283;;;3609:41;3667:19;;4902:69:215;3285:407:283;4902:69:215;1176:32:214::1;929:10:222::0;1176:18:214::1;:32::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:214;929:10:222;1662:23:214;1654:68;;;;-1:-1:-1;;;1654:68:214;;7150:2:283;1654:68:214;;;7132:21:283;;;7169:18;;;7162:30;7228:34;7208:18;;;7201:62;7280:18;;1654:68:214;6948:356:283;2673:187:214;2765:6;;;-1:-1:-1;;;;;2781:17:214;;;-1:-1:-1;;;;;;2781:17:214;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;14:177:283:-;93:13;;-1:-1:-1;;;;;135:31:283;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:167::-;274:13;;327:10;316:22;;306:33;;296:61;;353:1;350;343:12;368:160;445:13;;498:4;487:16;;477:27;;467:55;;518:1;515;508:12;533:177;612:13;;-1:-1:-1;;;;;654:31:283;;644:42;;634:70;;700:1;697;690:12;715:1591;871:6;879;887;895;903;911;919;963:9;954:7;950:23;993:3;989:2;985:12;982:32;;;1010:1;1007;1000:12;982:32;1033:40;1063:9;1033:40;:::i;:::-;1113:2;1098:18;;1092:25;1157:2;1142:18;;1136:25;1201:2;1186:18;;1180:25;1248:3;1233:19;;1227:26;1023:50;;-1:-1:-1;1092:25:283;;-1:-1:-1;1136:25:283;-1:-1:-1;1180:25:283;-1:-1:-1;;;;;;1319:14:283;;;1309:25;;1299:53;;1348:1;1345;1338:12;1299:53;1371:5;1361:15;;1395:50;1440:3;1429:9;1425:19;1395:50;:::i;:::-;1385:60;-1:-1:-1;1480:3:283;-1:-1:-1;;1461:17:283;;1457:27;1454:47;;;1497:1;1494;1487:12;1454:47;1530:2;1524:9;1510:23;;1572:3;1564:6;1560:16;1542:34;;1626:6;1614:10;1611:22;1606:2;1594:10;1591:18;1588:46;1585:169;;;1676:10;1671:3;1667:20;1664:1;1657:31;1711:4;1708:1;1701:15;1739:4;1736:1;1729:15;1585:169;-1:-1:-1;1770:2:283;1763:22;1809:49;1853:3;1838:19;;1809:49;:::i;:::-;1801:6;1794:65;1892:48;1935:3;1924:9;1920:19;1892:48;:::i;:::-;1887:2;1879:6;1875:15;1868:73;1974:48;2017:3;2006:9;2002:19;1974:48;:::i;:::-;1969:2;1961:6;1957:15;1950:73;2056:49;2100:3;2089:9;2085:19;2056:49;:::i;:::-;2051:2;2043:6;2039:15;2032:74;2140:49;2184:3;2173:9;2169:19;2140:49;:::i;:::-;2134:3;2126:6;2122:16;2115:75;2224:50;2269:3;2258:9;2254:19;2224:50;:::i;:::-;2218:3;2210:6;2206:16;2199:76;2294:6;2284:16;;;715:1591;;;;;;;;;;:::o;4942:127::-;5003:10;4998:3;4994:20;4991:1;4984:31;5034:4;5031:1;5024:15;5058:4;5055:1;5048:15;5074:228;5113:3;5141:10;5178:2;5175:1;5171:10;5208:2;5205:1;5201:10;5239:3;5235:2;5231:12;5226:3;5223:21;5220:47;;;5247:18;;:::i;:::-;5283:13;;5074:228;-1:-1:-1;;;;5074:228:283:o;5723:288::-;5762:1;5788:10;5825:2;5822:1;5818:10;5847:3;5837:134;;5893:10;5888:3;5884:20;5881:1;5874:31;5928:4;5925:1;5918:15;5956:4;5953:1;5946:15;5837:134;5989:10;;5985:20;;;;;5723:288;-1:-1:-1;;5723:288:283:o;6016:262::-;6055:7;6087:10;6124:2;6121:1;6117:10;6154:2;6151:1;6147:10;6210:3;6206:2;6202:12;6197:3;6194:21;6187:3;6180:11;6173:19;6169:47;6166:73;;;6219:18;;:::i;:::-;6259:13;;6016:262;-1:-1:-1;;;;6016:262:283:o;6707:236::-;6746:3;-1:-1:-1;;;;;6812:10:283;;;6842;;;6872:12;;;6864:21;;6861:47;;;6888:18;;:::i;6948:356::-;514:9864:54;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c8063b40a817c116100cd578063f2fde38b11610081578063f68016b711610066578063f68016b7146103f7578063f975e9251461040b578063ffa1ad741461041e57600080fd5b8063f2fde38b146103db578063f45e65d8146103ee57600080fd5b8063c9b26f61116100b2578063c9b26f611461028b578063cc731b021461029e578063e81b2c6d146103d257600080fd5b8063b40a817c14610265578063c71973f61461027857600080fd5b80634f16540b11610124578063715018a611610109578063715018a61461022c5780638da5cb5b14610234578063935f029e1461025257600080fd5b80634f16540b146101f057806354fd4d501461021757600080fd5b80630c18c1621461015657806318d13918146101725780631fd19ee1146101875780634add321d146101cf575b600080fd5b61015f60655481565b6040519081526020015b60405180910390f35b610185610180366004611307565b610426565b005b7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08545b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610169565b6101d76104ea565b60405167ffffffffffffffff9091168152602001610169565b61015f7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c0881565b61021f610515565b60405161016991906113a3565b6101856105b8565b60335473ffffffffffffffffffffffffffffffffffffffff166101aa565b6101856102603660046113b6565b6105cc565b6101856102733660046113f0565b610665565b610185610286366004611548565b610750565b610185610299366004611564565b610764565b6103626040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260695463ffffffff8082168352640100000000820460ff9081166020850152650100000000008304169383019390935266010000000000008104831660608301526a0100000000000000000000810490921660808201526e0100000000000000000000000000009091046fffffffffffffffffffffffffffffffff1660a082015290565b6040516101699190600060c08201905063ffffffff80845116835260ff602085015116602084015260ff6040850151166040840152806060850151166060840152806080850151166080840152506fffffffffffffffffffffffffffffffff60a08401511660a083015292915050565b61015f60675481565b6101856103e9366004611307565b610794565b61015f60665481565b6068546101d79067ffffffffffffffff1681565b61018561041936600461157d565b610848565b61015f600081565b61042e610afb565b610456817f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c0855565b6040805173ffffffffffffffffffffffffffffffffffffffff8316602082015260009101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060035b60007f1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be836040516104de91906113a3565b60405180910390a35050565b6069546000906105109063ffffffff6a010000000000000000000082048116911661161f565b905090565b60606105407f0000000000000000000000000000000000000000000000000000000000000000610b7c565b6105697f0000000000000000000000000000000000000000000000000000000000000000610b7c565b6105927f0000000000000000000000000000000000000000000000000000000000000000610b7c565b6040516020016105a49392919061164b565b604051602081830303815290604052905090565b6105c0610afb565b6105ca6000610cb9565b565b6105d4610afb565b606582905560668190556040805160208101849052908101829052600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529050600160007f1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be8360405161065891906113a3565b60405180910390a3505050565b61066d610afb565b6106756104ea565b67ffffffffffffffff168167ffffffffffffffff1610156106f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f770060448201526064015b60405180910390fd5b606880547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff831690811790915560408051602080820193909352815180820390930183528101905260026104ad565b610758610afb565b61076181610d30565b50565b61076c610afb565b60678190556040805160208082018490528251808303909101815290820190915260006104ad565b61079c610afb565b73ffffffffffffffffffffffffffffffffffffffff811661083f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ee565b61076181610cb9565b600054610100900460ff16158080156108685750600054600160ff909116105b806108825750303b158015610882575060005460ff166001145b61090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106ee565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561096c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6109746111a4565b61097d88610794565b606587905560668690556067859055606880547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff86161790557f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c088390556109ed82610d30565b6109f56104ea565b67ffffffffffffffff168467ffffffffffffffff161015610a72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f770060448201526064016106ee565b8015610ad557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60335473ffffffffffffffffffffffffffffffffffffffff1633146105ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ee565b606081600003610bbf57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610be95780610bd3816116c1565b9150610be29050600a83611728565b9150610bc3565b60008167ffffffffffffffff811115610c0457610c0461140b565b6040519080825280601f01601f191660200182016040528015610c2e576020820181803683370190505b5090505b8415610cb157610c4360018361173c565b9150610c50600a86611753565b610c5b906030611767565b60f81b818381518110610c7057610c7061177f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610caa600a86611728565b9450610c32565b949350505050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8060a001516fffffffffffffffffffffffffffffffff16816060015163ffffffff161115610de0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f53797374656d436f6e6669673a206d696e206261736520666565206d7573742060448201527f6265206c657373207468616e206d61782062617365000000000000000000000060648201526084016106ee565b6001816040015160ff1611610e77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206260448201527f65206c6172676572207468616e2031000000000000000000000000000000000060648201526084016106ee565b6068546080820151825167ffffffffffffffff90921691610e9891906117ae565b63ffffffff161115610f06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f770060448201526064016106ee565b6000816020015160ff1611610f9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c60448201527f6965722063616e6e6f742062652030000000000000000000000000000000000060648201526084016106ee565b8051602082015163ffffffff82169160ff90911690610fbd9082906117cd565b610fc791906117f0565b63ffffffff161461105a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f53797374656d436f6e6669673a20707265636973696f6e206c6f73732077697460448201527f6820746172676574207265736f75726365206c696d697400000000000000000060648201526084016106ee565b805160698054602084015160408501516060860151608087015160a09097015163ffffffff9687167fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000009095169490941764010000000060ff94851602177fffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffff166501000000000093909216929092027fffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffff1617660100000000000091851691909102177fffff0000000000000000000000000000000000000000ffffffffffffffffffff166a010000000000000000000093909416929092027fffff00000000000000000000000000000000ffffffffffffffffffffffffffff16929092176e0100000000000000000000000000006fffffffffffffffffffffffffffffffff90921691909102179055565b600054610100900460ff1661123b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106ee565b6105ca600054610100900460ff166112d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106ee565b6105ca33610cb9565b803573ffffffffffffffffffffffffffffffffffffffff8116811461130257600080fd5b919050565b60006020828403121561131957600080fd5b611322826112de565b9392505050565b60005b8381101561134457818101518382015260200161132c565b83811115611353576000848401525b50505050565b60008151808452611371816020860160208601611329565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006113226020830184611359565b600080604083850312156113c957600080fd5b50508035926020909101359150565b803567ffffffffffffffff8116811461130257600080fd5b60006020828403121561140257600080fd5b611322826113d8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803563ffffffff8116811461130257600080fd5b803560ff8116811461130257600080fd5b80356fffffffffffffffffffffffffffffffff8116811461130257600080fd5b600060c0828403121561149157600080fd5b60405160c0810181811067ffffffffffffffff821117156114db577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040529050806114ea8361143a565b81526114f86020840161144e565b60208201526115096040840161144e565b604082015261151a6060840161143a565b606082015261152b6080840161143a565b608082015261153c60a0840161145f565b60a08201525092915050565b600060c0828403121561155a57600080fd5b611322838361147f565b60006020828403121561157657600080fd5b5035919050565b6000806000806000806000610180888a03121561159957600080fd5b6115a2886112de565b96506020880135955060408801359450606088013593506115c5608089016113d8565b92506115d360a089016112de565b91506115e28960c08a0161147f565b905092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818516808303821115611642576116426115f0565b01949350505050565b6000845161165d818460208901611329565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551611699816001850160208a01611329565b600192019182015283516116b4816002840160208801611329565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116f2576116f26115f0565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611737576117376116f9565b500490565b60008282101561174e5761174e6115f0565b500390565b600082611762576117626116f9565b500690565b6000821982111561177a5761177a6115f0565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600063ffffffff808316818516808303821115611642576116426115f0565b600063ffffffff808416806117e4576117e46116f9565b92169190910492915050565b600063ffffffff80831681851681830481118215151615611813576118136115f0565b0294935050505056fea164736f6c634300080f000a",
    "sourceMap": "514:9864:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1744:23;;;;;;;;;160:25:283;;;148:2;133:18;1744:23:54;;;;;;;;6248:270;;;;;;:::i;:::-;;:::i;:::-;;5897:221;1615:43;6070:11;5897:221;;;764:42:283;752:55;;;734:74;;722:2;707:18;5897:221:54;588:226:283;5417:161:54;;;:::i;:::-;;;993:18:283;981:31;;;963:50;;951:2;936:18;5417:161:54;819:200:283;1564:94:54;;1615:43;1564:94;;972:372:211;;;:::i;:::-;;;;;;;:::i;2071:101:214:-;;;:::i;1441:85::-;1513:6;;;;1441:85;;6967:266:54;;;;;;:::i;:::-;;:::i;7321:295::-;;;;;;:::i;:::-;;:::i;8637:138::-;;;;;;:::i;:::-;;:::i;6612:225::-;;;;;;:::i;:::-;;:::i;8242:128::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8341:22:54;;;;;;;;8348:15;8341:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8242:128;;;;;;;4871:4:283;4913:3;4902:9;4898:19;4890:27;;4936:10;4992:2;4983:6;4977:13;4973:22;4962:9;4955:41;5064:4;5056;5048:6;5044:17;5038:24;5034:35;5027:4;5016:9;5012:20;5005:65;5138:4;5130;5122:6;5118:17;5112:24;5108:35;5101:4;5090:9;5086:20;5079:65;5212:2;5204:4;5196:6;5192:17;5186:24;5182:33;5175:4;5164:9;5160:20;5153:63;5284:2;5276:4;5268:6;5264:17;5258:24;5254:33;5247:4;5236:9;5232:20;5225:63;;5356:34;5348:4;5340:6;5336:17;5330:24;5326:65;5319:4;5308:9;5304:20;5297:95;4713:685;;;;;2066:26:54;;;;;;2321:198:214;;;;;;:::i;:::-;;:::i;1855:21:54:-;;;;;;2135:22;;;;;;;;;4328:631;;;;;;:::i;:::-;;:::i;1216:35::-;;1250:1;1216:35;;6248:270;1334:13:214;:11;:13::i;:::-;6335:41:54::1;6357:18;1615:43:::0;8035:32;7885:198;6335:41:::1;6407:30;::::0;;764:42:283;752:55;;6407:30:54::1;::::0;::::1;734:74:283::0;6387:17:54::1;::::0;707:18:283;6407:30:54::1;::::0;;;;;::::1;::::0;;;;;;;-1:-1:-1;6474:30:54::1;6452:59;1250:1;6452:59;6506:4;6452:59;;;;;;:::i;:::-;;;;;;;;6325:193;6248:270:::0;:::o;5417:161::-;5540:15;:30;5465:6;;5490:81;;5540:30;;;;;;;5497:32;5490:81;:::i;:::-;5483:88;;5417:161;:::o;972:372:211:-;1012:13;1118:31;1135:13;1118:16;:31::i;:::-;1196;1213:13;1196:16;:31::i;:::-;1274;1291:13;1274:16;:31::i;:::-;1080:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1037:300;;972:372;:::o;2071:101:214:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;6967:266:54:-;1334:13:214;:11;:13::i;:::-;7054:8:54::1;:20:::0;;;7084:6:::1;:16:::0;;;7131:30:::1;::::0;;::::1;::::0;::::1;8059:25:283::0;;;8100:18;;;8093:34;;;-1:-1:-1;;8032:18:283;;7131:30:54::1;::::0;;;;;::::1;::::0;;;;;;;-1:-1:-1;7198:21:54::1;1250:1;7176:50;7221:4;7176:50;;;;;;:::i;:::-;;;;;;;;7044:189;6967:266:::0;;:::o;7321:295::-;1334:13:214;:11;:13::i;:::-;7410:17:54::1;:15;:17::i;:::-;7397:30;;:9;:30;;;;7389:74;;;::::0;::::1;::::0;;8340:2:283;7389:74:54::1;::::0;::::1;8322:21:283::0;8379:2;8359:18;;;8352:30;8418:33;8398:18;;;8391:61;8469:18;;7389:74:54::1;;;;;;;;;7473:8;:20:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;7524:21:::1;::::0;;::::1;::::0;;::::1;963:50:283::0;;;;7524:21:54;;;;;;;;;;936:18:283;;7524:21:54;;7582:20:::1;7560:49;::::0;8637:138;1334:13:214;:11;:13::i;:::-;8741:27:54::1;8760:7;8741:18;:27::i;:::-;8637:138:::0;:::o;6612:225::-;1334:13:214;:11;:13::i;:::-;6687:11:54::1;:26:::0;;;6744:24:::1;::::0;;::::1;::::0;;::::1;160:25:283::0;;;6744:24:54;;;;;;;;;;133:18:283;;;6744:24:54;;;6724:17:::1;6783:47;::::0;2321:198:214;1334:13;:11;:13::i;:::-;2409:22:::1;::::0;::::1;2401:73;;;::::0;::::1;::::0;;8700:2:283;2401:73:214::1;::::0;::::1;8682:21:283::0;8739:2;8719:18;;;8712:30;8778:34;8758:18;;;8751:62;8849:8;8829:18;;;8822:36;8875:19;;2401:73:214::1;8498:402:283::0;2401:73:214::1;2484:28;2503:8;2484:18;:28::i;4328:631:54:-:0;3111:19:215;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:215;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:215;1476:19:221;:23;;;3219:66:215;;-1:-1:-1;3268:12:215;;;;;:17;3219:66;3157:201;;;;;;;9107:2:283;3157:201:215;;;9089:21:283;9146:2;9126:18;;;9119:30;9185:34;9165:18;;;9158:62;9256:16;9236:18;;;9229:44;9290:19;;3157:201:215;8905:410:283;3157:201:215;3368:12;:16;;;;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;;;;;;;3394:65;4607:16:54::1;:14;:16::i;:::-;4633:25;4651:6;4633:17;:25::i;:::-;4668:8;:20:::0;;;4698:6:::1;:16:::0;;;4724:11:::1;:26:::0;;;4760:8:::1;:20:::0;;;::::1;;::::0;::::1;;::::0;;1615:43;8035:32;;;4841:27:::1;4860:7;4841:18;:27::i;:::-;4899:17;:15;:17::i;:::-;4886:30;;:9;:30;;;;4878:74;;;::::0;::::1;::::0;;8340:2:283;4878:74:54::1;::::0;::::1;8322:21:283::0;8379:2;8359:18;;;8352:30;8418:33;8398:18;;;8391:61;8469:18;;4878:74:54::1;8138:355:283::0;4878:74:54::1;3483:14:215::0;3479:99;;;3529:5;3513:21;;;;;;3553:14;;-1:-1:-1;9472:36:283;;3553:14:215;;9460:2:283;9445:18;3553:14:215;;;;;;;3479:99;3101:483;4328:631:54;;;;;;;:::o;1186:320:221:-;1476:19;;;:23;;;1186:320::o;1599:130:214:-;1513:6;;1662:23;1513:6;929:10:222;1662:23:214;1654:68;;;;;;;9721:2:283;1654:68:214;;;9703:21:283;;;9740:18;;;9733:30;9799:34;9779:18;;;9772:62;9851:18;;1654:68:214;9519:356:283;392:703:250;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:250;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:250;;-1:-1:-1;837:2:250;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:250;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:250;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:250;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:250:o;2673:187:214:-;2765:6;;;;2781:17;;;;;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;8983:1393:54:-;9193:7;:22;;;9167:48;;:7;:22;;;:48;;;;9146:148;;;;;;;11165:2:283;9146:148:54;;;11147:21:283;11204:2;11184:18;;;11177:30;11243:34;11223:18;;;11216:62;11314:23;11294:18;;;11287:51;11355:19;;9146:148:54;10963:417:283;9146:148:54;9426:1;9388:7;:35;;;:39;;;9367:133;;;;;;;11587:2:283;9367:133:54;;;11569:21:283;11626:2;11606:18;;;11599:30;11665:34;11645:18;;;11638:62;11736:17;11716:18;;;11709:45;11771:19;;9367:133:54;11385:411:283;9367:133:54;9762:8;;9736:22;;;;9709:24;;9762:8;;;;;9709:49;;9736:22;9709:49;:::i;:::-;:61;;;;9688:139;;;;;;;8340:2:283;9688:139:54;;;8322:21:283;8379:2;8359:18;;;8352:30;8418:33;8398:18;;;8391:61;8469:18;;9688:139:54;8138:355:283;9688:139:54;9946:1;9915:7;:28;;;:32;;;9894:126;;;;;;;12236:2:283;9894:126:54;;;12218:21:283;12275:2;12255:18;;;12248:30;12314:34;12294:18;;;12287:62;12385:17;12365:18;;;12358:45;12420:19;;9894:126:54;12034:411:283;9894:126:54;10228:24;;10195:28;;;;10118:134;;;;10119:104;;;;;10120:55;;10119:104;;10120:55;:::i;:::-;10119:104;;;;:::i;:::-;10118:134;;;10097:236;;;;;;;13115:2:283;10097:236:54;;;13097:21:283;13154:2;13134:18;;;13127:30;13193:34;13173:18;;;13166:62;13264:25;13244:18;;;13237:53;13307:19;;10097:236:54;12913:419:283;10097:236:54;10344:25;;:15;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8983:1393::o;1003:95:214:-;4910:13:215;;;;;;;4902:69;;;;;;;13539:2:283;4902:69:215;;;13521:21:283;13578:2;13558:18;;;13551:30;13617:34;13597:18;;;13590:62;13688:13;13668:18;;;13661:41;13719:19;;4902:69:215;13337:407:283;4902:69:215;1065:26:214::1;4910:13:215::0;;;;;;;4902:69;;;;;;;13539:2:283;4902:69:215;;;13521:21:283;13578:2;13558:18;;;13551:30;13617:34;13597:18;;;13590:62;13688:13;13668:18;;;13661:41;13719:19;;4902:69:215;13337:407:283;4902:69:215;1176:32:214::1;929:10:222::0;1176:18:214::1;:32::i;196:196:283:-:0;264:20;;324:42;313:54;;303:65;;293:93;;382:1;379;372:12;293:93;196:196;;;:::o;397:186::-;456:6;509:2;497:9;488:7;484:23;480:32;477:52;;;525:1;522;515:12;477:52;548:29;567:9;548:29;:::i;:::-;538:39;397:186;-1:-1:-1;;;397:186:283:o;1206:258::-;1278:1;1288:113;1302:6;1299:1;1296:13;1288:113;;;1378:11;;;1372:18;1359:11;;;1352:39;1324:2;1317:10;1288:113;;;1419:6;1416:1;1413:13;1410:48;;;1454:1;1445:6;1440:3;1436:16;1429:27;1410:48;;1206:258;;;:::o;1469:317::-;1511:3;1549:5;1543:12;1576:6;1571:3;1564:19;1592:63;1648:6;1641:4;1636:3;1632:14;1625:4;1618:5;1614:16;1592:63;:::i;:::-;1700:2;1688:15;1705:66;1684:88;1675:98;;;;1775:4;1671:109;;1469:317;-1:-1:-1;;1469:317:283:o;1791:220::-;1940:2;1929:9;1922:21;1903:4;1960:45;2001:2;1990:9;1986:18;1978:6;1960:45;:::i;2016:248::-;2084:6;2092;2145:2;2133:9;2124:7;2120:23;2116:32;2113:52;;;2161:1;2158;2151:12;2113:52;-1:-1:-1;;2184:23:283;;;2254:2;2239:18;;;2226:32;;-1:-1:-1;2016:248:283:o;2269:171::-;2336:20;;2396:18;2385:30;;2375:41;;2365:69;;2430:1;2427;2420:12;2445:184;2503:6;2556:2;2544:9;2535:7;2531:23;2527:32;2524:52;;;2572:1;2569;2562:12;2524:52;2595:28;2613:9;2595:28;:::i;2634:184::-;2686:77;2683:1;2676:88;2783:4;2780:1;2773:15;2807:4;2804:1;2797:15;2823:163;2890:20;;2950:10;2939:22;;2929:33;;2919:61;;2976:1;2973;2966:12;2991:156;3057:20;;3117:4;3106:16;;3096:27;;3086:55;;3137:1;3134;3127:12;3152:188;3220:20;;3280:34;3269:46;;3259:57;;3249:85;;3330:1;3327;3320:12;3345:930;3406:5;3454:4;3442:9;3437:3;3433:19;3429:30;3426:50;;;3472:1;3469;3462:12;3426:50;3505:2;3499:9;3547:4;3539:6;3535:17;3618:6;3606:10;3603:22;3582:18;3570:10;3567:34;3564:62;3561:242;;;3659:77;3656:1;3649:88;3760:4;3757:1;3750:15;3788:4;3785:1;3778:15;3561:242;3819:2;3812:22;3852:6;-1:-1:-1;3852:6:283;3882:28;3900:9;3882:28;:::i;:::-;3874:6;3867:44;3944:36;3976:2;3965:9;3961:18;3944:36;:::i;:::-;3939:2;3931:6;3927:15;3920:61;4014:36;4046:2;4035:9;4031:18;4014:36;:::i;:::-;4009:2;4001:6;3997:15;3990:61;4084:37;4117:2;4106:9;4102:18;4084:37;:::i;:::-;4079:2;4071:6;4067:15;4060:62;4156:38;4189:3;4178:9;4174:19;4156:38;:::i;:::-;4150:3;4142:6;4138:16;4131:64;4229:39;4263:3;4252:9;4248:19;4229:39;:::i;:::-;4223:3;4215:6;4211:16;4204:65;;3345:930;;;;:::o;4280:243::-;4372:6;4425:3;4413:9;4404:7;4400:23;4396:33;4393:53;;;4442:1;4439;4432:12;4393:53;4465:52;4509:7;4498:9;4465:52;:::i;4528:180::-;4587:6;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;-1:-1:-1;4679:23:283;;4528:180;-1:-1:-1;4528:180:283:o;5403:670::-;5548:6;5556;5564;5572;5580;5588;5596;5649:3;5637:9;5628:7;5624:23;5620:33;5617:53;;;5666:1;5663;5656:12;5617:53;5689:29;5708:9;5689:29;:::i;:::-;5679:39;;5765:2;5754:9;5750:18;5737:32;5727:42;;5816:2;5805:9;5801:18;5788:32;5778:42;;5867:2;5856:9;5852:18;5839:32;5829:42;;5890:38;5923:3;5912:9;5908:19;5890:38;:::i;:::-;5880:48;;5947:39;5981:3;5970:9;5966:19;5947:39;:::i;:::-;5937:49;;6005:62;6059:7;6053:3;6042:9;6038:19;6005:62;:::i;:::-;5995:72;;5403:670;;;;;;;;;;:::o;6490:184::-;6542:77;6539:1;6532:88;6639:4;6636:1;6629:15;6663:4;6660:1;6653:15;6679:236;6718:3;6746:18;6791:2;6788:1;6784:10;6821:2;6818:1;6814:10;6852:3;6848:2;6844:12;6839:3;6836:21;6833:47;;;6860:18;;:::i;:::-;6896:13;;6679:236;-1:-1:-1;;;;6679:236:283:o;6920:960::-;7349:3;7387:6;7381:13;7403:53;7449:6;7444:3;7437:4;7429:6;7425:17;7403:53;:::i;:::-;7487:6;7482:3;7478:16;7465:29;;7513:3;7539:2;7532:5;7525:17;7573:6;7567:13;7589:65;7645:8;7641:1;7634:5;7630:13;7623:4;7615:6;7611:17;7589:65;:::i;:::-;7717:1;7673:20;;7709:10;;;7702:22;7749:13;;7771:62;7749:13;7820:1;7812:10;;7805:4;7793:17;;7771:62;:::i;:::-;7853:17;7872:1;7849:25;;6920:960;-1:-1:-1;;;;;6920:960:283:o;9880:195::-;9919:3;9950:66;9943:5;9940:77;9937:103;;10020:18;;:::i;:::-;-1:-1:-1;10067:1:283;10056:13;;9880:195::o;10080:184::-;10132:77;10129:1;10122:88;10229:4;10226:1;10219:15;10253:4;10250:1;10243:15;10269:120;10309:1;10335;10325:35;;10340:18;;:::i;:::-;-1:-1:-1;10374:9:283;;10269:120::o;10394:125::-;10434:4;10462:1;10459;10456:8;10453:34;;;10467:18;;:::i;:::-;-1:-1:-1;10504:9:283;;10394:125::o;10524:112::-;10556:1;10582;10572:35;;10587:18;;:::i;:::-;-1:-1:-1;10621:9:283;;10524:112::o;10641:128::-;10681:3;10712:1;10708:6;10705:1;10702:13;10699:39;;;10718:18;;:::i;:::-;-1:-1:-1;10754:9:283;;10641:128::o;10774:184::-;10826:77;10823:1;10816:88;10923:4;10920:1;10913:15;10947:4;10944:1;10937:15;11801:228;11840:3;11868:10;11905:2;11902:1;11898:10;11935:2;11932:1;11928:10;11966:3;11962:2;11958:12;11953:3;11950:21;11947:47;;;11974:18;;:::i;12450:191::-;12489:1;12515:10;12552:2;12549:1;12545:10;12574:3;12564:37;;12581:18;;:::i;:::-;12619:10;;12615:20;;;;;12450:191;-1:-1:-1;;12450:191:283:o;12646:262::-;12685:7;12717:10;12754:2;12751:1;12747:10;12784:2;12781:1;12777:10;12840:3;12836:2;12832:12;12827:3;12824:21;12817:3;12810:11;12803:19;12799:47;12796:73;;;12849:18;;:::i;:::-;12889:13;;12646:262;-1:-1:-1;;;;12646:262:283:o",
    "linkReferences": {},
    "immutableReferences": {
      "106017": [
        {
          "start": 1308,
          "length": 32
        }
      ],
      "106020": [
        {
          "start": 1349,
          "length": 32
        }
      ],
      "106023": [
        {
          "start": 1390,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "UNSAFE_BLOCK_SIGNER_SLOT()": "4f16540b",
    "VERSION()": "ffa1ad74",
    "batcherHash()": "e81b2c6d",
    "gasLimit()": "f68016b7",
    "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": "f975e925",
    "minimumGasLimit()": "4add321d",
    "overhead()": "0c18c162",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "resourceConfig()": "cc731b02",
    "scalar()": "f45e65d8",
    "setBatcherHash(bytes32)": "c9b26f61",
    "setGasConfig(uint256,uint256)": "935f029e",
    "setGasLimit(uint64)": "b40a817c",
    "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": "c71973f6",
    "setUnsafeBlockSigner(address)": "18d13918",
    "transferOwnership(address)": "f2fde38b",
    "unsafeBlockSigner()": "1fd19ee1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_batcherHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_unsafeBlockSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum SystemConfig.UpdateType\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ConfigUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNSAFE_BLOCK_SIGNER_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batcherHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_batcherHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_unsafeBlockSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"overhead\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resourceConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scalar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batcherHash\",\"type\":\"bytes32\"}],\"name\":\"setBatcherHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"}],\"name\":\"setGasConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"}],\"name\":\"setGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"setResourceConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unsafeBlockSigner\",\"type\":\"address\"}],\"name\":\"setUnsafeBlockSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unsafeBlockSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ConfigUpdate(uint256,uint8,bytes)\":{\"params\":{\"data\":\"Encoded update data.\",\"updateType\":\"Type of update.\",\"version\":\"SystemConfig version.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:semver\":\"1.3.1\",\"params\":{\"_batcherHash\":\"Initial batcher hash.\",\"_config\":\"Initial resource config.\",\"_gasLimit\":\"Initial gas limit.\",\"_overhead\":\"Initial overhead value.\",\"_owner\":\"Initial owner of the contract.\",\"_scalar\":\"Initial scalar value.\",\"_unsafeBlockSigner\":\"Initial unsafe block signer address.\"}},\"initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))\":{\"params\":{\"_batcherHash\":\"Initial batcher hash.\",\"_config\":\"Initial ResourceConfig.\",\"_gasLimit\":\"Initial gas limit.\",\"_overhead\":\"Initial overhead value.\",\"_owner\":\"Initial owner of the contract.\",\"_scalar\":\"Initial scalar value.\",\"_unsafeBlockSigner\":\"Initial unsafe block signer address.\"}},\"minimumGasLimit()\":{\"returns\":{\"_0\":\"uint64 Minimum gas limit.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"resourceConfig()\":{\"returns\":{\"_0\":\"ResourceConfig\"}},\"setBatcherHash(bytes32)\":{\"params\":{\"_batcherHash\":\"New batcher hash.\"}},\"setGasConfig(uint256,uint256)\":{\"params\":{\"_overhead\":\"New overhead value.\",\"_scalar\":\"New scalar value.\"}},\"setGasLimit(uint64)\":{\"params\":{\"_gasLimit\":\"New gas limit.\"}},\"setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))\":{\"params\":{\"_config\":\"The new resource config values.\"}},\"setUnsafeBlockSigner(address)\":{\"params\":{\"_unsafeBlockSigner\":\"New unsafe block signer address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unsafeBlockSigner()\":{\"returns\":{\"_0\":\"Address of the unsafe block signer.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"SystemConfig\",\"version\":1},\"userdoc\":{\"events\":{\"ConfigUpdate(uint256,uint8,bytes)\":{\"notice\":\"Emitted when configuration is updated.\"}},\"kind\":\"user\",\"methods\":{\"UNSAFE_BLOCK_SIGNER_SLOT()\":{\"notice\":\"Storage slot that the unsafe block signer is stored at.         Storing it at this deterministic storage slot allows for decoupling the storage         layout from the way that `solc` lays out storage. The `op-node` uses a storage         proof to fetch this value.\"},\"VERSION()\":{\"notice\":\"Version identifier, used for upgrades.\"},\"batcherHash()\":{\"notice\":\"Identifier for the batcher.         For version 1 of this configuration, this is represented as an address left-padded         with zeros to 32 bytes.\"},\"constructor\":{\"notice\":\"Constructs the SystemConfig contract.\"},\"gasLimit()\":{\"notice\":\"L2 block gas limit.\"},\"initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))\":{\"notice\":\"Initializer.         The resource config must be set before the require check.\"},\"minimumGasLimit()\":{\"notice\":\"Returns the minimum L2 gas limit that can be safely set for the system to         operate. The L2 gas limit must be larger than or equal to the amount of         gas that is allocated for deposits per block plus the amount of gas that         is allocated for the system transaction.         This function is used to determine if changes to parameters are safe.\"},\"overhead()\":{\"notice\":\"Fixed L2 gas overhead. Used as part of the L2 fee calculation.\"},\"resourceConfig()\":{\"notice\":\"A getter for the resource config.         Ensures that the struct is returned instead of a tuple.\"},\"scalar()\":{\"notice\":\"Dynamic L2 gas overhead. Used as part of the L2 fee calculation.\"},\"setBatcherHash(bytes32)\":{\"notice\":\"Updates the batcher hash.\"},\"setGasConfig(uint256,uint256)\":{\"notice\":\"Updates gas config.\"},\"setGasLimit(uint64)\":{\"notice\":\"Updates the L2 gas limit.\"},\"setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))\":{\"notice\":\"An external setter for the resource config.         In the future, this method may emit an event that the `op-node` picks up         for when the resource config is changed.\"},\"setUnsafeBlockSigner(address)\":{\"notice\":\"Updates the unsafe block signer address.\"},\"unsafeBlockSigner()\":{\"notice\":\"High level getter for the unsafe block signer address.         Unsafe blocks can be propagated across the p2p network if they are signed by the         key corresponding to this address.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The SystemConfig contract is used to manage configuration of an Optimism network.         All configuration is stored on L1 and picked up by L2 as part of the derviation of         the L2 chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/SystemConfig.sol\":\"SystemConfig\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L1/ResourceMetering.sol\":{\"keccak256\":\"0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562\",\"dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP\"]},\"contracts/L1/SystemConfig.sol\":{\"keccak256\":\"0xec46d56f890657263eb03a136d50c340d346a5dca8a8d3a8575b97ba8435452a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8825682fbc7fc06894826ffab8722d75f5ff27880a96b5da5af03552d2a0c918\",\"dweb:/ipfs/QmVH1fEgqY9VbfJFEhaJdAaMKT8SAd1D4AHn7GLZazW1wp\"]},\"contracts/libraries/Arithmetic.sol\":{\"keccak256\":\"0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0\",\"dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_overhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scalar",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "_batcherHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "_gasLimit",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "_unsafeBlockSigner",
              "type": "address"
            },
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "enum SystemConfig.UpdateType",
              "name": "updateType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNSAFE_BLOCK_SIGNER_SLOT",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "batcherHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gasLimit",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_overhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scalar",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "_batcherHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "_gasLimit",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "_unsafeBlockSigner",
              "type": "address"
            },
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumGasLimit",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "overhead",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "resourceConfig",
          "outputs": [
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scalar",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_batcherHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBatcherHash"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_overhead",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_scalar",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasConfig"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_gasLimit",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResourceConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_unsafeBlockSigner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnsafeBlockSigner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unsafeBlockSigner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:semver": "1.3.1",
            "params": {
              "_batcherHash": "Initial batcher hash.",
              "_config": "Initial resource config.",
              "_gasLimit": "Initial gas limit.",
              "_overhead": "Initial overhead value.",
              "_owner": "Initial owner of the contract.",
              "_scalar": "Initial scalar value.",
              "_unsafeBlockSigner": "Initial unsafe block signer address."
            }
          },
          "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
            "params": {
              "_batcherHash": "Initial batcher hash.",
              "_config": "Initial ResourceConfig.",
              "_gasLimit": "Initial gas limit.",
              "_overhead": "Initial overhead value.",
              "_owner": "Initial owner of the contract.",
              "_scalar": "Initial scalar value.",
              "_unsafeBlockSigner": "Initial unsafe block signer address."
            }
          },
          "minimumGasLimit()": {
            "returns": {
              "_0": "uint64 Minimum gas limit."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "resourceConfig()": {
            "returns": {
              "_0": "ResourceConfig"
            }
          },
          "setBatcherHash(bytes32)": {
            "params": {
              "_batcherHash": "New batcher hash."
            }
          },
          "setGasConfig(uint256,uint256)": {
            "params": {
              "_overhead": "New overhead value.",
              "_scalar": "New scalar value."
            }
          },
          "setGasLimit(uint64)": {
            "params": {
              "_gasLimit": "New gas limit."
            }
          },
          "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
            "params": {
              "_config": "The new resource config values."
            }
          },
          "setUnsafeBlockSigner(address)": {
            "params": {
              "_unsafeBlockSigner": "New unsafe block signer address."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unsafeBlockSigner()": {
            "returns": {
              "_0": "Address of the unsafe block signer."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "UNSAFE_BLOCK_SIGNER_SLOT()": {
            "notice": "Storage slot that the unsafe block signer is stored at.         Storing it at this deterministic storage slot allows for decoupling the storage         layout from the way that `solc` lays out storage. The `op-node` uses a storage         proof to fetch this value."
          },
          "VERSION()": {
            "notice": "Version identifier, used for upgrades."
          },
          "batcherHash()": {
            "notice": "Identifier for the batcher.         For version 1 of this configuration, this is represented as an address left-padded         with zeros to 32 bytes."
          },
          "constructor": {
            "notice": "Constructs the SystemConfig contract."
          },
          "gasLimit()": {
            "notice": "L2 block gas limit."
          },
          "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
            "notice": "Initializer.         The resource config must be set before the require check."
          },
          "minimumGasLimit()": {
            "notice": "Returns the minimum L2 gas limit that can be safely set for the system to         operate. The L2 gas limit must be larger than or equal to the amount of         gas that is allocated for deposits per block plus the amount of gas that         is allocated for the system transaction.         This function is used to determine if changes to parameters are safe."
          },
          "overhead()": {
            "notice": "Fixed L2 gas overhead. Used as part of the L2 fee calculation."
          },
          "resourceConfig()": {
            "notice": "A getter for the resource config.         Ensures that the struct is returned instead of a tuple."
          },
          "scalar()": {
            "notice": "Dynamic L2 gas overhead. Used as part of the L2 fee calculation."
          },
          "setBatcherHash(bytes32)": {
            "notice": "Updates the batcher hash."
          },
          "setGasConfig(uint256,uint256)": {
            "notice": "Updates gas config."
          },
          "setGasLimit(uint64)": {
            "notice": "Updates the L2 gas limit."
          },
          "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
            "notice": "An external setter for the resource config.         In the future, this method may emit an event that the `op-node` picks up         for when the resource config is changed."
          },
          "setUnsafeBlockSigner(address)": {
            "notice": "Updates the unsafe block signer address."
          },
          "unsafeBlockSigner()": {
            "notice": "High level getter for the unsafe block signer address.         Unsafe blocks can be propagated across the p2p network if they are signed by the         key corresponding to this address."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/L1/SystemConfig.sol": "SystemConfig"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L1/ResourceMetering.sol": {
        "keccak256": "0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743",
        "urls": [
          "bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562",
          "dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP"
        ],
        "license": "MIT"
      },
      "contracts/L1/SystemConfig.sol": {
        "keccak256": "0xec46d56f890657263eb03a136d50c340d346a5dca8a8d3a8575b97ba8435452a",
        "urls": [
          "bzz-raw://8825682fbc7fc06894826ffab8722d75f5ff27880a96b5da5af03552d2a0c918",
          "dweb:/ipfs/QmVH1fEgqY9VbfJFEhaJdAaMKT8SAd1D4AHn7GLZazW1wp"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Arithmetic.sol": {
        "keccak256": "0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2",
        "urls": [
          "bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0",
          "dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 106994,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 106997,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 119099,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 106866,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 106986,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 37038,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "overhead",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 37041,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "scalar",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 37044,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "batcherHash",
        "offset": 0,
        "slot": "103",
        "type": "t_bytes32"
      },
      {
        "astId": 37047,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "gasLimit",
        "offset": 0,
        "slot": "104",
        "type": "t_uint64"
      },
      {
        "astId": 37051,
        "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
        "label": "_resourceConfig",
        "offset": 0,
        "slot": "105",
        "type": "t_struct(ResourceConfig)36691_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_struct(ResourceConfig)36691_storage": {
        "encoding": "inplace",
        "label": "struct ResourceMetering.ResourceConfig",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 36680,
            "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
            "label": "maxResourceLimit",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 36682,
            "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
            "label": "elasticityMultiplier",
            "offset": 4,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 36684,
            "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
            "label": "baseFeeMaxChangeDenominator",
            "offset": 5,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 36686,
            "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
            "label": "minimumBaseFee",
            "offset": 6,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 36688,
            "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
            "label": "systemTxMaxGas",
            "offset": 10,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 36690,
            "contract": "contracts/L1/SystemConfig.sol:SystemConfig",
            "label": "maximumBaseFee",
            "offset": 14,
            "slot": "0",
            "type": "t_uint128"
          }
        ]
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "UNSAFE_BLOCK_SIGNER_SLOT()": {
        "notice": "Storage slot that the unsafe block signer is stored at.         Storing it at this deterministic storage slot allows for decoupling the storage         layout from the way that `solc` lays out storage. The `op-node` uses a storage         proof to fetch this value."
      },
      "VERSION()": {
        "notice": "Version identifier, used for upgrades."
      },
      "batcherHash()": {
        "notice": "Identifier for the batcher.         For version 1 of this configuration, this is represented as an address left-padded         with zeros to 32 bytes."
      },
      "constructor": {
        "notice": "Constructs the SystemConfig contract."
      },
      "gasLimit()": {
        "notice": "L2 block gas limit."
      },
      "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
        "notice": "Initializer.         The resource config must be set before the require check."
      },
      "minimumGasLimit()": {
        "notice": "Returns the minimum L2 gas limit that can be safely set for the system to         operate. The L2 gas limit must be larger than or equal to the amount of         gas that is allocated for deposits per block plus the amount of gas that         is allocated for the system transaction.         This function is used to determine if changes to parameters are safe."
      },
      "overhead()": {
        "notice": "Fixed L2 gas overhead. Used as part of the L2 fee calculation."
      },
      "resourceConfig()": {
        "notice": "A getter for the resource config.         Ensures that the struct is returned instead of a tuple."
      },
      "scalar()": {
        "notice": "Dynamic L2 gas overhead. Used as part of the L2 fee calculation."
      },
      "setBatcherHash(bytes32)": {
        "notice": "Updates the batcher hash."
      },
      "setGasConfig(uint256,uint256)": {
        "notice": "Updates gas config."
      },
      "setGasLimit(uint64)": {
        "notice": "Updates the L2 gas limit."
      },
      "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
        "notice": "An external setter for the resource config.         In the future, this method may emit an event that the `op-node` picks up         for when the resource config is changed."
      },
      "setUnsafeBlockSigner(address)": {
        "notice": "Updates the unsafe block signer address."
      },
      "unsafeBlockSigner()": {
        "notice": "High level getter for the unsafe block signer address.         Unsafe blocks can be propagated across the p2p network if they are signed by the         key corresponding to this address."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      }
    },
    "events": {
      "ConfigUpdate(uint256,uint8,bytes)": {
        "notice": "Emitted when configuration is updated."
      }
    },
    "notice": "The SystemConfig contract is used to manage configuration of an Optimism network.         All configuration is stored on L1 and picked up by L2 as part of the derviation of         the L2 chain."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_batcherHash": "Initial batcher hash.",
          "_config": "Initial resource config.",
          "_gasLimit": "Initial gas limit.",
          "_overhead": "Initial overhead value.",
          "_owner": "Initial owner of the contract.",
          "_scalar": "Initial scalar value.",
          "_unsafeBlockSigner": "Initial unsafe block signer address."
        }
      },
      "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
        "params": {
          "_batcherHash": "Initial batcher hash.",
          "_config": "Initial ResourceConfig.",
          "_gasLimit": "Initial gas limit.",
          "_overhead": "Initial overhead value.",
          "_owner": "Initial owner of the contract.",
          "_scalar": "Initial scalar value.",
          "_unsafeBlockSigner": "Initial unsafe block signer address."
        }
      },
      "minimumGasLimit()": {
        "returns": {
          "_0": "uint64 Minimum gas limit."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resourceConfig()": {
        "returns": {
          "_0": "ResourceConfig"
        }
      },
      "setBatcherHash(bytes32)": {
        "params": {
          "_batcherHash": "New batcher hash."
        }
      },
      "setGasConfig(uint256,uint256)": {
        "params": {
          "_overhead": "New overhead value.",
          "_scalar": "New scalar value."
        }
      },
      "setGasLimit(uint64)": {
        "params": {
          "_gasLimit": "New gas limit."
        }
      },
      "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
        "params": {
          "_config": "The new resource config values."
        }
      },
      "setUnsafeBlockSigner(address)": {
        "params": {
          "_unsafeBlockSigner": "New unsafe block signer address."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unsafeBlockSigner()": {
        "returns": {
          "_0": "Address of the unsafe block signer."
        }
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "events": {
      "ConfigUpdate(uint256,uint8,bytes)": {
        "params": {
          "data": "Encoded update data.",
          "updateType": "Type of update.",
          "version": "SystemConfig version."
        }
      }
    },
    "title": "SystemConfig"
  },
  "ast": {
    "absolutePath": "contracts/L1/SystemConfig.sol",
    "id": 37419,
    "exportedSymbols": {
      "OwnableUpgradeable": [
        106987
      ],
      "ResourceMetering": [
        37007
      ],
      "Semver": [
        106075
      ],
      "SystemConfig": [
        37418
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:10347:54",
    "nodes": [
      {
        "id": 37009,
        "nodeType": "PragmaDirective",
        "src": "32:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 37011,
        "nodeType": "ImportDirective",
        "src": "57:107:54",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37419,
        "sourceUnit": 106988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37010,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106987,
              "src": "70:18:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37013,
        "nodeType": "ImportDirective",
        "src": "165:49:54",
        "nodes": [],
        "absolutePath": "contracts/universal/Semver.sol",
        "file": "../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37419,
        "sourceUnit": 106076,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37012,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106075,
              "src": "174:6:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37015,
        "nodeType": "ImportDirective",
        "src": "215:58:54",
        "nodes": [],
        "absolutePath": "contracts/L1/ResourceMetering.sol",
        "file": "./ResourceMetering.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37419,
        "sourceUnit": 37008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37014,
              "name": "ResourceMetering",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37007,
              "src": "224:16:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37418,
        "nodeType": "ContractDefinition",
        "src": "514:9864:54",
        "nodes": [
          {
            "id": 37025,
            "nodeType": "EnumDefinition",
            "src": "1048:107:54",
            "nodes": [],
            "canonicalName": "SystemConfig.UpdateType",
            "members": [
              {
                "id": 37021,
                "name": "BATCHER",
                "nameLocation": "1074:7:54",
                "nodeType": "EnumValue",
                "src": "1074:7:54"
              },
              {
                "id": 37022,
                "name": "GAS_CONFIG",
                "nameLocation": "1091:10:54",
                "nodeType": "EnumValue",
                "src": "1091:10:54"
              },
              {
                "id": 37023,
                "name": "GAS_LIMIT",
                "nameLocation": "1111:9:54",
                "nodeType": "EnumValue",
                "src": "1111:9:54"
              },
              {
                "id": 37024,
                "name": "UNSAFE_BLOCK_SIGNER",
                "nameLocation": "1130:19:54",
                "nodeType": "EnumValue",
                "src": "1130:19:54"
              }
            ],
            "name": "UpdateType",
            "nameLocation": "1053:10:54"
          },
          {
            "id": 37029,
            "nodeType": "VariableDeclaration",
            "src": "1216:35:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 37026,
              "nodeType": "StructuredDocumentation",
              "src": "1161:50:54",
              "text": "@notice Version identifier, used for upgrades."
            },
            "functionSelector": "ffa1ad74",
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1240:7:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37027,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1216:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 37028,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1250:1:54",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 37035,
            "nodeType": "VariableDeclaration",
            "src": "1564:94:54",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 37030,
              "nodeType": "StructuredDocumentation",
              "src": "1258:301:54",
              "text": "@notice Storage slot that the unsafe block signer is stored at.\n         Storing it at this deterministic storage slot allows for decoupling the storage\n         layout from the way that `solc` lays out storage. The `op-node` uses a storage\n         proof to fetch this value."
            },
            "functionSelector": "4f16540b",
            "mutability": "constant",
            "name": "UNSAFE_BLOCK_SIGNER_SLOT",
            "nameLocation": "1588:24:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 37031,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1564:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "73797374656d636f6e6669672e756e73616665626c6f636b7369676e6572",
                  "id": 37033,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1625:32:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
                    "typeString": "literal_string \"systemconfig.unsafeblocksigner\""
                  },
                  "value": "systemconfig.unsafeblocksigner"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
                    "typeString": "literal_string \"systemconfig.unsafeblocksigner\""
                  }
                ],
                "id": 37032,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1615:9:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 37034,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1615:43:54",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37038,
            "nodeType": "VariableDeclaration",
            "src": "1744:23:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37036,
              "nodeType": "StructuredDocumentation",
              "src": "1665:74:54",
              "text": "@notice Fixed L2 gas overhead. Used as part of the L2 fee calculation."
            },
            "functionSelector": "0c18c162",
            "mutability": "mutable",
            "name": "overhead",
            "nameLocation": "1759:8:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37037,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1744:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37041,
            "nodeType": "VariableDeclaration",
            "src": "1855:21:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37039,
              "nodeType": "StructuredDocumentation",
              "src": "1774:76:54",
              "text": "@notice Dynamic L2 gas overhead. Used as part of the L2 fee calculation."
            },
            "functionSelector": "f45e65d8",
            "mutability": "mutable",
            "name": "scalar",
            "nameLocation": "1870:6:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37040,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1855:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37044,
            "nodeType": "VariableDeclaration",
            "src": "2066:26:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37042,
              "nodeType": "StructuredDocumentation",
              "src": "1883:178:54",
              "text": "@notice Identifier for the batcher.\n         For version 1 of this configuration, this is represented as an address left-padded\n         with zeros to 32 bytes."
            },
            "functionSelector": "e81b2c6d",
            "mutability": "mutable",
            "name": "batcherHash",
            "nameLocation": "2081:11:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 37043,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2066:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37047,
            "nodeType": "VariableDeclaration",
            "src": "2135:22:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37045,
              "nodeType": "StructuredDocumentation",
              "src": "2099:31:54",
              "text": "@notice L2 block gas limit."
            },
            "functionSelector": "f68016b7",
            "mutability": "mutable",
            "name": "gasLimit",
            "nameLocation": "2149:8:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 37046,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2135:6:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37051,
            "nodeType": "VariableDeclaration",
            "src": "2408:56:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37048,
              "nodeType": "StructuredDocumentation",
              "src": "2164:239:54",
              "text": "@notice The configuration for the deposit fee market.\n         Used by the OptimismPortal to meter the cost of buying L2 gas on L1.\n         Set as internal with a getter so that the struct is returned instead of a tuple."
            },
            "mutability": "mutable",
            "name": "_resourceConfig",
            "nameLocation": "2449:15:54",
            "scope": 37418,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage",
              "typeString": "struct ResourceMetering.ResourceConfig"
            },
            "typeName": {
              "id": 37050,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37049,
                "name": "ResourceMetering.ResourceConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36691,
                "src": "2408:31:54"
              },
              "referencedDeclaration": 36691,
              "src": "2408:31:54",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                "typeString": "struct ResourceMetering.ResourceConfig"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 37061,
            "nodeType": "EventDefinition",
            "src": "2663:87:54",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 37052,
              "nodeType": "StructuredDocumentation",
              "src": "2471:187:54",
              "text": "@notice Emitted when configuration is updated.\n @param version    SystemConfig version.\n @param updateType Type of update.\n @param data       Encoded update data."
            },
            "eventSelector": "1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be",
            "name": "ConfigUpdate",
            "nameLocation": "2669:12:54",
            "parameters": {
              "id": 37060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37054,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "2698:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37061,
                  "src": "2682:23:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37057,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "updateType",
                  "nameLocation": "2726:10:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37061,
                  "src": "2707:29:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UpdateType_$37025",
                    "typeString": "enum SystemConfig.UpdateType"
                  },
                  "typeName": {
                    "id": 37056,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37055,
                      "name": "UpdateType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37025,
                      "src": "2707:10:54"
                    },
                    "referencedDeclaration": 37025,
                    "src": "2707:10:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UpdateType_$37025",
                      "typeString": "enum SystemConfig.UpdateType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37059,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2744:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37061,
                  "src": "2738:10:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37058,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2738:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2681:68:54"
            }
          },
          {
            "id": 37096,
            "nodeType": "FunctionDefinition",
            "src": "3257:545:54",
            "nodes": [],
            "body": {
              "id": 37095,
              "nodeType": "Block",
              "src": "3515:287:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37086,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37064,
                        "src": "3558:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37087,
                        "name": "_overhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37066,
                        "src": "3589:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37088,
                        "name": "_scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37068,
                        "src": "3621:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37089,
                        "name": "_batcherHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37070,
                        "src": "3656:12:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 37090,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37072,
                        "src": "3693:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 37091,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37074,
                        "src": "3736:18:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37092,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37077,
                        "src": "3777:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      ],
                      "id": 37085,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37157,
                      "src": "3525:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint64_$_t_address_$_t_struct$_ResourceConfig_$36691_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32,uint64,address,struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 37093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_owner",
                      "_overhead",
                      "_scalar",
                      "_batcherHash",
                      "_gasLimit",
                      "_unsafeBlockSigner",
                      "_config"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3525:270:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37094,
                  "nodeType": "ExpressionStatement",
                  "src": "3525:270:54"
                }
              ]
            },
            "documentation": {
              "id": 37062,
              "nodeType": "StructuredDocumentation",
              "src": "2756:496:54",
              "text": "@custom:semver 1.3.1\n @notice Constructs the SystemConfig contract.\n @param _owner             Initial owner of the contract.\n @param _overhead          Initial overhead value.\n @param _scalar            Initial scalar value.\n @param _batcherHash       Initial batcher hash.\n @param _gasLimit          Initial gas limit.\n @param _unsafeBlockSigner Initial unsafe block signer address.\n @param _config            Initial resource config."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 37080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3506:1:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "33",
                    "id": 37081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3509:1:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  {
                    "hexValue": "31",
                    "id": 37082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3512:1:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 37083,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37079,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106075,
                  "src": "3499:6:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "3499:15:54"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37064,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3286:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3278:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37066,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "3310:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3302:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37068,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "3337:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3329:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37070,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "3362:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3354:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3354:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37072,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "3391:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3384:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 37071,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37074,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "3418:18:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3410:26:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37077,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "3485:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37096,
                  "src": "3446:46:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 37076,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37075,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36691,
                      "src": "3446:31:54"
                    },
                    "referencedDeclaration": 36691,
                    "src": "3446:31:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3268:230:54"
            },
            "returnParameters": {
              "id": 37084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3515:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37157,
            "nodeType": "FunctionDefinition",
            "src": "4328:631:54",
            "nodes": [],
            "body": {
              "id": 37156,
              "nodeType": "Block",
              "src": "4597:362:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37117,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106882,
                      "src": "4607:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:16:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37119,
                  "nodeType": "ExpressionStatement",
                  "src": "4607:16:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37121,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37099,
                        "src": "4651:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37120,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106961,
                      "src": "4633:17:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4633:25:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37123,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:25:54"
                },
                {
                  "expression": {
                    "id": 37126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37124,
                      "name": "overhead",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37038,
                      "src": "4668:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37125,
                      "name": "_overhead",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37101,
                      "src": "4679:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4668:20:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37127,
                  "nodeType": "ExpressionStatement",
                  "src": "4668:20:54"
                },
                {
                  "expression": {
                    "id": 37130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37128,
                      "name": "scalar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37041,
                      "src": "4698:6:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37129,
                      "name": "_scalar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37103,
                      "src": "4707:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4698:16:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37131,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:16:54"
                },
                {
                  "expression": {
                    "id": 37134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37132,
                      "name": "batcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37044,
                      "src": "4724:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37133,
                      "name": "_batcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37105,
                      "src": "4738:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4724:26:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 37135,
                  "nodeType": "ExpressionStatement",
                  "src": "4724:26:54"
                },
                {
                  "expression": {
                    "id": 37138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37136,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37047,
                      "src": "4760:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37137,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37107,
                      "src": "4771:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4760:20:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 37139,
                  "nodeType": "ExpressionStatement",
                  "src": "4760:20:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37141,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37109,
                        "src": "4812:18:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37140,
                      "name": "_setUnsafeBlockSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37328,
                      "src": "4790:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4790:41:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37143,
                  "nodeType": "ExpressionStatement",
                  "src": "4790:41:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37145,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37112,
                        "src": "4860:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      ],
                      "id": 37144,
                      "name": "_setResourceConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37417,
                      "src": "4841:18:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResourceConfig_$36691_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 37146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4841:27:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37147,
                  "nodeType": "ExpressionStatement",
                  "src": "4841:27:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 37152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37149,
                          "name": "_gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37107,
                          "src": "4886:9:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37150,
                            "name": "minimumGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37176,
                            "src": "4899:15:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                              "typeString": "function () view returns (uint64)"
                            }
                          },
                          "id": 37151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4899:17:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4886:30:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77",
                        "id": 37153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4918:33:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        },
                        "value": "SystemConfig: gas limit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        }
                      ],
                      "id": 37148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4878:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4878:74:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37155,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:74:54"
                }
              ]
            },
            "documentation": {
              "id": 37097,
              "nodeType": "StructuredDocumentation",
              "src": "3808:515:54",
              "text": "@notice Initializer.\n         The resource config must be set before the require check.\n @param _owner             Initial owner of the contract.\n @param _overhead          Initial overhead value.\n @param _scalar            Initial scalar value.\n @param _batcherHash       Initial batcher hash.\n @param _gasLimit          Initial gas limit.\n @param _unsafeBlockSigner Initial unsafe block signer address.\n @param _config            Initial ResourceConfig."
            },
            "functionSelector": "f975e925",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37114,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 107058,
                  "src": "4585:11:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "4585:11:54"
              }
            ],
            "name": "initialize",
            "nameLocation": "4337:10:54",
            "parameters": {
              "id": 37113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37099,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4365:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4357:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4357:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37101,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "4389:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4381:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4381:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37103,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "4416:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4408:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4408:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37105,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "4441:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4433:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4433:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37107,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "4470:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4463:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 37106,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37109,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "4497:18:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4489:26:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37112,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "4564:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37157,
                  "src": "4525:46:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 37111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37110,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36691,
                      "src": "4525:31:54"
                    },
                    "referencedDeclaration": 36691,
                    "src": "4525:31:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4347:230:54"
            },
            "returnParameters": {
              "id": 37116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4597:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37176,
            "nodeType": "FunctionDefinition",
            "src": "5417:161:54",
            "nodes": [],
            "body": {
              "id": 37175,
              "nodeType": "Block",
              "src": "5473:105:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 37173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 37165,
                            "name": "_resourceConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37051,
                            "src": "5497:15:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage",
                              "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                            }
                          },
                          "id": 37166,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxResourceLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36680,
                          "src": "5497:32:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 37164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5490:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 37163,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5490:6:54",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 37167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5490:40:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 37170,
                            "name": "_resourceConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37051,
                            "src": "5540:15:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage",
                              "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                            }
                          },
                          "id": 37171,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "systemTxMaxGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36688,
                          "src": "5540:30:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 37169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5533:6:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 37168,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5533:6:54",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 37172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5533:38:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "5490:81:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 37162,
                  "id": 37174,
                  "nodeType": "Return",
                  "src": "5483:88:54"
                }
              ]
            },
            "documentation": {
              "id": 37158,
              "nodeType": "StructuredDocumentation",
              "src": "4965:447:54",
              "text": "@notice Returns the minimum L2 gas limit that can be safely set for the system to\n         operate. The L2 gas limit must be larger than or equal to the amount of\n         gas that is allocated for deposits per block plus the amount of gas that\n         is allocated for the system transaction.\n         This function is used to determine if changes to parameters are safe.\n @return uint64 Minimum gas limit."
            },
            "functionSelector": "4add321d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minimumGasLimit",
            "nameLocation": "5426:15:54",
            "parameters": {
              "id": 37159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5441:2:54"
            },
            "returnParameters": {
              "id": 37162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37176,
                  "src": "5465:6:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 37160,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:8:54"
            },
            "scope": 37418,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37193,
            "nodeType": "FunctionDefinition",
            "src": "5897:221:54",
            "nodes": [],
            "body": {
              "id": 37192,
              "nodeType": "Block",
              "src": "5958:160:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37183,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "5976:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37192,
                      "src": "5968:12:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37182,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5968:7:54",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37184,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5968:12:54"
                },
                {
                  "assignments": [
                    37186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37186,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "5998:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37192,
                      "src": "5990:12:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 37185,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5990:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37188,
                  "initialValue": {
                    "id": 37187,
                    "name": "UNSAFE_BLOCK_SIGNER_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37035,
                    "src": "6005:24:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5990:39:54"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6048:43:54",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6062:19:54",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "6076:4:54"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "6070:5:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6070:11:54"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "6062:4:54"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 37183,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6062:4:54",
                      "valueSize": 1
                    },
                    {
                      "declaration": 37186,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6076:4:54",
                      "valueSize": 1
                    }
                  ],
                  "id": 37189,
                  "nodeType": "InlineAssembly",
                  "src": "6039:52:54"
                },
                {
                  "expression": {
                    "id": 37190,
                    "name": "addr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37183,
                    "src": "6107:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 37181,
                  "id": 37191,
                  "nodeType": "Return",
                  "src": "6100:11:54"
                }
              ]
            },
            "documentation": {
              "id": 37177,
              "nodeType": "StructuredDocumentation",
              "src": "5584:266:54",
              "text": "@notice High level getter for the unsafe block signer address.\n         Unsafe blocks can be propagated across the p2p network if they are signed by the\n         key corresponding to this address.\n @return Address of the unsafe block signer."
            },
            "functionSelector": "1fd19ee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsafeBlockSigner",
            "nameLocation": "5906:17:54",
            "parameters": {
              "id": 37178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5923:2:54"
            },
            "returnParameters": {
              "id": 37181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37193,
                  "src": "5949:7:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5949:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5948:9:54"
            },
            "scope": 37418,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37220,
            "nodeType": "FunctionDefinition",
            "src": "6248:270:54",
            "nodes": [],
            "body": {
              "id": 37219,
              "nodeType": "Block",
              "src": "6325:193:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37202,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37196,
                        "src": "6357:18:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37201,
                      "name": "_setUnsafeBlockSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37328,
                      "src": "6335:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6335:41:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37204,
                  "nodeType": "ExpressionStatement",
                  "src": "6335:41:54"
                },
                {
                  "assignments": [
                    37206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37206,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6400:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37219,
                      "src": "6387:17:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37205,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6387:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37209,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37196,
                        "src": "6418:18:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37207,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6407:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "6407:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 37210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6407:30:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6387:50:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 37213,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37029,
                        "src": "6465:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37214,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37025,
                          "src": "6474:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$37025_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 37215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "UNSAFE_BLOCK_SIGNER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37024,
                        "src": "6474:30:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 37216,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37206,
                        "src": "6506:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37212,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37061,
                      "src": "6452:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$37025_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 37217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6452:59:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37218,
                  "nodeType": "EmitStatement",
                  "src": "6447:64:54"
                }
              ]
            },
            "documentation": {
              "id": 37194,
              "nodeType": "StructuredDocumentation",
              "src": "6124:119:54",
              "text": "@notice Updates the unsafe block signer address.\n @param _unsafeBlockSigner New unsafe block signer address."
            },
            "functionSelector": "18d13918",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37198,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106901,
                  "src": "6315:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "6315:9:54"
              }
            ],
            "name": "setUnsafeBlockSigner",
            "nameLocation": "6257:20:54",
            "parameters": {
              "id": 37197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37196,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "6286:18:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37220,
                  "src": "6278:26:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6277:28:54"
            },
            "returnParameters": {
              "id": 37200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6325:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37247,
            "nodeType": "FunctionDefinition",
            "src": "6612:225:54",
            "nodes": [],
            "body": {
              "id": 37246,
              "nodeType": "Block",
              "src": "6677:160:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37228,
                      "name": "batcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37044,
                      "src": "6687:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37229,
                      "name": "_batcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37223,
                      "src": "6701:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6687:26:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 37231,
                  "nodeType": "ExpressionStatement",
                  "src": "6687:26:54"
                },
                {
                  "assignments": [
                    37233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37233,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6737:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37246,
                      "src": "6724:17:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37232,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6724:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37238,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37236,
                        "name": "_batcherHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37223,
                        "src": "6755:12:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 37234,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6744:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "6744:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 37237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6744:24:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6724:44:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 37240,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37029,
                        "src": "6796:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37241,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37025,
                          "src": "6805:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$37025_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 37242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "BATCHER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37021,
                        "src": "6805:18:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 37243,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37233,
                        "src": "6825:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37239,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37061,
                      "src": "6783:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$37025_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 37244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6783:47:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37245,
                  "nodeType": "EmitStatement",
                  "src": "6778:52:54"
                }
              ]
            },
            "documentation": {
              "id": 37221,
              "nodeType": "StructuredDocumentation",
              "src": "6524:83:54",
              "text": "@notice Updates the batcher hash.\n @param _batcherHash New batcher hash."
            },
            "functionSelector": "c9b26f61",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37225,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106901,
                  "src": "6667:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "6667:9:54"
              }
            ],
            "name": "setBatcherHash",
            "nameLocation": "6621:14:54",
            "parameters": {
              "id": 37224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37223,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "6644:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37247,
                  "src": "6636:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37222,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6635:22:54"
            },
            "returnParameters": {
              "id": 37227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6677:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37281,
            "nodeType": "FunctionDefinition",
            "src": "6967:266:54",
            "nodes": [],
            "body": {
              "id": 37280,
              "nodeType": "Block",
              "src": "7044:189:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37257,
                      "name": "overhead",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37038,
                      "src": "7054:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37258,
                      "name": "_overhead",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37250,
                      "src": "7065:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7054:20:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37260,
                  "nodeType": "ExpressionStatement",
                  "src": "7054:20:54"
                },
                {
                  "expression": {
                    "id": 37263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37261,
                      "name": "scalar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37041,
                      "src": "7084:6:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37262,
                      "name": "_scalar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37252,
                      "src": "7093:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7084:16:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37264,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:16:54"
                },
                {
                  "assignments": [
                    37266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37266,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7124:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37280,
                      "src": "7111:17:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37265,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7111:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37272,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37269,
                        "name": "_overhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37250,
                        "src": "7142:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37270,
                        "name": "_scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37252,
                        "src": "7153:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37267,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7131:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "7131:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 37271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7131:30:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7111:50:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 37274,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37029,
                        "src": "7189:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37275,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37025,
                          "src": "7198:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$37025_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 37276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GAS_CONFIG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37022,
                        "src": "7198:21:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 37277,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37266,
                        "src": "7221:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37273,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37061,
                      "src": "7176:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$37025_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 37278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7176:50:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37279,
                  "nodeType": "EmitStatement",
                  "src": "7171:55:54"
                }
              ]
            },
            "documentation": {
              "id": 37248,
              "nodeType": "StructuredDocumentation",
              "src": "6843:119:54",
              "text": "@notice Updates gas config.\n @param _overhead New overhead value.\n @param _scalar   New scalar value."
            },
            "functionSelector": "935f029e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37254,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106901,
                  "src": "7034:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "7034:9:54"
              }
            ],
            "name": "setGasConfig",
            "nameLocation": "6976:12:54",
            "parameters": {
              "id": 37253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37250,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "6997:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37281,
                  "src": "6989:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6989:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37252,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "7016:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37281,
                  "src": "7008:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7008:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6988:36:54"
            },
            "returnParameters": {
              "id": 37256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7044:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37316,
            "nodeType": "FunctionDefinition",
            "src": "7321:295:54",
            "nodes": [],
            "body": {
              "id": 37315,
              "nodeType": "Block",
              "src": "7379:237:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 37293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37290,
                          "name": "_gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37284,
                          "src": "7397:9:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37291,
                            "name": "minimumGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37176,
                            "src": "7410:15:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                              "typeString": "function () view returns (uint64)"
                            }
                          },
                          "id": 37292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7410:17:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "7397:30:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77",
                        "id": 37294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7429:33:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        },
                        "value": "SystemConfig: gas limit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        }
                      ],
                      "id": 37289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7389:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7389:74:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37296,
                  "nodeType": "ExpressionStatement",
                  "src": "7389:74:54"
                },
                {
                  "expression": {
                    "id": 37299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37297,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37047,
                      "src": "7473:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37298,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37284,
                      "src": "7484:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7473:20:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 37300,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:20:54"
                },
                {
                  "assignments": [
                    37302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37302,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7517:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37315,
                      "src": "7504:17:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 37301,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7504:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37305,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37284,
                        "src": "7535:9:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 37303,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7524:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 37304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "7524:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 37306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7524:21:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7504:41:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 37309,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37029,
                        "src": "7573:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 37310,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37025,
                          "src": "7582:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$37025_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 37311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GAS_LIMIT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37023,
                        "src": "7582:20:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 37312,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37302,
                        "src": "7604:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$37025",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37308,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37061,
                      "src": "7560:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$37025_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 37313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7560:49:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37314,
                  "nodeType": "EmitStatement",
                  "src": "7555:54:54"
                }
              ]
            },
            "documentation": {
              "id": 37282,
              "nodeType": "StructuredDocumentation",
              "src": "7239:77:54",
              "text": "@notice Updates the L2 gas limit.\n @param _gasLimit New gas limit."
            },
            "functionSelector": "b40a817c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37286,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106901,
                  "src": "7369:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "7369:9:54"
              }
            ],
            "name": "setGasLimit",
            "nameLocation": "7330:11:54",
            "parameters": {
              "id": 37285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37284,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "7349:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37316,
                  "src": "7342:16:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 37283,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7342:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7341:18:54"
            },
            "returnParameters": {
              "id": 37288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7379:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37328,
            "nodeType": "FunctionDefinition",
            "src": "7885:198:54",
            "nodes": [],
            "body": {
              "id": 37327,
              "nodeType": "Block",
              "src": "7953:130:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37323,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "7971:4:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 37327,
                      "src": "7963:12:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 37322,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7963:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37325,
                  "initialValue": {
                    "id": 37324,
                    "name": "UNSAFE_BLOCK_SIGNER_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37035,
                    "src": "7978:24:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7963:39:54"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8021:56:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "8042:4:54"
                            },
                            {
                              "name": "_unsafeBlockSigner",
                              "nodeType": "YulIdentifier",
                              "src": "8048:18:54"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "8035:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8035:32:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8035:32:54"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 37319,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8048:18:54",
                      "valueSize": 1
                    },
                    {
                      "declaration": 37323,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8042:4:54",
                      "valueSize": 1
                    }
                  ],
                  "id": 37326,
                  "nodeType": "InlineAssembly",
                  "src": "8012:65:54"
                }
              ]
            },
            "documentation": {
              "id": 37317,
              "nodeType": "StructuredDocumentation",
              "src": "7622:258:54",
              "text": "@notice Low level setter for the unsafe block signer address.\n         This function exists to deduplicate code around storing the unsafeBlockSigner\n         address in storage.\n @param _unsafeBlockSigner New unsafeBlockSigner value."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setUnsafeBlockSigner",
            "nameLocation": "7894:21:54",
            "parameters": {
              "id": 37320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37319,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "7924:18:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37328,
                  "src": "7916:26:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7916:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7915:28:54"
            },
            "returnParameters": {
              "id": 37321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7953:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37338,
            "nodeType": "FunctionDefinition",
            "src": "8242:128:54",
            "nodes": [],
            "body": {
              "id": 37337,
              "nodeType": "Block",
              "src": "8331:39:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37335,
                    "name": "_resourceConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37051,
                    "src": "8348:15:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage",
                      "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 37334,
                  "id": 37336,
                  "nodeType": "Return",
                  "src": "8341:22:54"
                }
              ]
            },
            "documentation": {
              "id": 37329,
              "nodeType": "StructuredDocumentation",
              "src": "8089:148:54",
              "text": "@notice A getter for the resource config.\n         Ensures that the struct is returned instead of a tuple.\n @return ResourceConfig"
            },
            "functionSelector": "cc731b02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resourceConfig",
            "nameLocation": "8251:14:54",
            "parameters": {
              "id": 37330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8265:2:54"
            },
            "returnParameters": {
              "id": 37334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37338,
                  "src": "8291:38:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 37332,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37331,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36691,
                      "src": "8291:31:54"
                    },
                    "referencedDeclaration": 36691,
                    "src": "8291:31:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8290:40:54"
            },
            "scope": 37418,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37352,
            "nodeType": "FunctionDefinition",
            "src": "8637:138:54",
            "nodes": [],
            "body": {
              "id": 37351,
              "nodeType": "Block",
              "src": "8731:44:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37348,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37342,
                        "src": "8760:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      ],
                      "id": 37347,
                      "name": "_setResourceConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37417,
                      "src": "8741:18:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResourceConfig_$36691_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 37349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8741:27:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37350,
                  "nodeType": "ExpressionStatement",
                  "src": "8741:27:54"
                }
              ]
            },
            "documentation": {
              "id": 37339,
              "nodeType": "StructuredDocumentation",
              "src": "8376:256:54",
              "text": "@notice An external setter for the resource config.\n         In the future, this method may emit an event that the `op-node` picks up\n         for when the resource config is changed.\n @param _config The new resource config values."
            },
            "functionSelector": "c71973f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37344,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106901,
                  "src": "8721:9:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "8721:9:54"
              }
            ],
            "name": "setResourceConfig",
            "nameLocation": "8646:17:54",
            "parameters": {
              "id": 37343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37342,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "8703:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37352,
                  "src": "8664:46:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 37341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37340,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36691,
                      "src": "8664:31:54"
                    },
                    "referencedDeclaration": 36691,
                    "src": "8664:31:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8663:48:54"
            },
            "returnParameters": {
              "id": 37346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8731:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37417,
            "nodeType": "FunctionDefinition",
            "src": "8983:1393:54",
            "nodes": [],
            "body": {
              "id": 37416,
              "nodeType": "Block",
              "src": "9068:1308:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 37364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37360,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37356,
                            "src": "9167:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 37361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minimumBaseFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36686,
                          "src": "9167:22:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 37362,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37356,
                            "src": "9193:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 37363,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maximumBaseFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36690,
                          "src": "9193:22:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "9167:48:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a206d696e206261736520666565206d757374206265206c657373207468616e206d61782062617365",
                        "id": 37365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9229:55:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16806173f08c8c6ae15c41ada2868e19f22d95483ee444a690f5c71e256ae59c",
                          "typeString": "literal_string \"SystemConfig: min base fee must be less than max base\""
                        },
                        "value": "SystemConfig: min base fee must be less than max base"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16806173f08c8c6ae15c41ada2868e19f22d95483ee444a690f5c71e256ae59c",
                          "typeString": "literal_string \"SystemConfig: min base fee must be less than max base\""
                        }
                      ],
                      "id": 37359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9146:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9146:148:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37367,
                  "nodeType": "ExpressionStatement",
                  "src": "9146:148:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 37372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37369,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37356,
                            "src": "9388:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 37370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "baseFeeMaxChangeDenominator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36684,
                          "src": "9388:35:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 37371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9426:1:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9388:39:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206265206c6172676572207468616e2031",
                        "id": 37373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9441:49:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a2fada1fe2708845c3612912d722eb6febd82dcb64b4a98ff41143480c2d7e",
                          "typeString": "literal_string \"SystemConfig: denominator must be larger than 1\""
                        },
                        "value": "SystemConfig: denominator must be larger than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a2fada1fe2708845c3612912d722eb6febd82dcb64b4a98ff41143480c2d7e",
                          "typeString": "literal_string \"SystemConfig: denominator must be larger than 1\""
                        }
                      ],
                      "id": 37368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9367:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9367:133:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37375,
                  "nodeType": "ExpressionStatement",
                  "src": "9367:133:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 37383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 37381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 37377,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37356,
                              "src": "9709:7:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                                "typeString": "struct ResourceMetering.ResourceConfig memory"
                              }
                            },
                            "id": 37378,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxResourceLimit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36680,
                            "src": "9709:24:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 37379,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37356,
                              "src": "9736:7:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                                "typeString": "struct ResourceMetering.ResourceConfig memory"
                              }
                            },
                            "id": 37380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "systemTxMaxGas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36688,
                            "src": "9736:22:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "9709:49:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 37382,
                          "name": "gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37047,
                          "src": "9762:8:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "9709:61:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77",
                        "id": 37384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9784:33:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        },
                        "value": "SystemConfig: gas limit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        }
                      ],
                      "id": 37376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9688:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9688:139:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37386,
                  "nodeType": "ExpressionStatement",
                  "src": "9688:139:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 37391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37388,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37356,
                            "src": "9915:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 37389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "elasticityMultiplier",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36682,
                          "src": "9915:28:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9946:1:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9915:32:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c6965722063616e6e6f742062652030",
                        "id": 37392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9961:49:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59a820cce0ebef6a669f57c5972b936f0f32ddecc515ae6b733585a6a86ccb87",
                          "typeString": "literal_string \"SystemConfig: elasticity multiplier cannot be 0\""
                        },
                        "value": "SystemConfig: elasticity multiplier cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59a820cce0ebef6a669f57c5972b936f0f32ddecc515ae6b733585a6a86ccb87",
                          "typeString": "literal_string \"SystemConfig: elasticity multiplier cannot be 0\""
                        }
                      ],
                      "id": 37387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9894:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9894:126:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37394,
                  "nodeType": "ExpressionStatement",
                  "src": "9894:126:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 37408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 37404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 37400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 37396,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37356,
                                        "src": "10120:7:54",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                                        }
                                      },
                                      "id": 37397,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxResourceLimit",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36680,
                                      "src": "10120:24:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 37398,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37356,
                                        "src": "10147:7:54",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                                        }
                                      },
                                      "id": 37399,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "elasticityMultiplier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36682,
                                      "src": "10147:28:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "10120:55:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "id": 37401,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "10119:57:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 37402,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37356,
                                  "src": "10195:7:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                                    "typeString": "struct ResourceMetering.ResourceConfig memory"
                                  }
                                },
                                "id": 37403,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "elasticityMultiplier",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36682,
                                "src": "10195:28:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "10119:104:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "id": 37405,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10118:106:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 37406,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37356,
                            "src": "10228:7:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 37407,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxResourceLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36680,
                          "src": "10228:24:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "10118:134:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20707265636973696f6e206c6f7373207769746820746172676574207265736f75726365206c696d6974",
                        "id": 37409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10266:57:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fef4ef4eda0ba4ff507d3db7d2e0ca5d7440f98c636615806e09e69039b34a5e",
                          "typeString": "literal_string \"SystemConfig: precision loss with target resource limit\""
                        },
                        "value": "SystemConfig: precision loss with target resource limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fef4ef4eda0ba4ff507d3db7d2e0ca5d7440f98c636615806e09e69039b34a5e",
                          "typeString": "literal_string \"SystemConfig: precision loss with target resource limit\""
                        }
                      ],
                      "id": 37395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10097:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10097:236:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37411,
                  "nodeType": "ExpressionStatement",
                  "src": "10097:236:54"
                },
                {
                  "expression": {
                    "id": 37414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37412,
                      "name": "_resourceConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37051,
                      "src": "10344:15:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage",
                        "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37413,
                      "name": "_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37356,
                      "src": "10362:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                        "typeString": "struct ResourceMetering.ResourceConfig memory"
                      }
                    },
                    "src": "10344:25:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage",
                      "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                    }
                  },
                  "id": 37415,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:25:54"
                }
              ]
            },
            "documentation": {
              "id": 37353,
              "nodeType": "StructuredDocumentation",
              "src": "8781:197:54",
              "text": "@notice An internal setter for the resource config.\n         Ensures that the config is sane before storing it by checking for invariants.\n @param _config The new resource config."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setResourceConfig",
            "nameLocation": "8992:18:54",
            "parameters": {
              "id": 37357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37356,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "9050:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 37417,
                  "src": "9011:46:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$36691_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 37355,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37354,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36691,
                      "src": "9011:31:54"
                    },
                    "referencedDeclaration": 36691,
                    "src": "9011:31:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$36691_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9010:48:54"
            },
            "returnParameters": {
              "id": 37358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9068:0:54"
            },
            "scope": 37418,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37017,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106987,
              "src": "539:18:54"
            },
            "id": 37018,
            "nodeType": "InheritanceSpecifier",
            "src": "539:18:54"
          },
          {
            "baseName": {
              "id": 37019,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106075,
              "src": "559:6:54"
            },
            "id": 37020,
            "nodeType": "InheritanceSpecifier",
            "src": "559:6:54"
          }
        ],
        "canonicalName": "SystemConfig",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37016,
          "nodeType": "StructuredDocumentation",
          "src": "275:239:54",
          "text": "@title SystemConfig\n @notice The SystemConfig contract is used to manage configuration of an Optimism network.\n         All configuration is stored on L1 and picked up by L2 as part of the derviation of\n         the L2 chain."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37418,
          106075,
          106987,
          119100,
          107138
        ],
        "name": "SystemConfig",
        "nameLocation": "523:12:54",
        "scope": 37419,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 54
}