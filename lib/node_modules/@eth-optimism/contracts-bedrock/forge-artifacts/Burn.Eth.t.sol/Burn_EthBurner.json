{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Vm",
          "name": "_vm",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failedEthBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161076538038061076583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106d2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063680b376a1461003b5780639a99f4de14610050575b600080fd5b61004e61004936600461056a565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b60006100a682826fffffffffffffffffffffffffffffffff61019e565b6000546040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081523060048201526024810183905291925073ffffffffffffffffffffffffffffffffffffffff169063c88a5e6d90604401600060405180830381600087803b15801561011957600080fd5b505af115801561012d573d6000803e3d6000fd5b50505050600047905060006101448360008461019e565b905061014f816101f3565b808203471461019857600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b50505050565b60006101ab848484610222565b90506101ec6040518060400160405280600c81526020017f426f756e6420526573756c7400000000000000000000000000000000000000008152508261045e565b9392505050565b806040516102009061055e565b6040518091039082f090508015801561021d573d6000803e3d6000fd5b505050565b6000818311156102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102c85750818411155b156102d45750826101ec565b60006102e084846105b2565b6102eb9060016105c9565b9050600385111580156102fd57508481115b156103145761030c85856105c9565b9150506101ec565b61033f60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105b2565b85101580156103765750610373857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105b2565b81115b156103af576103a5857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105b2565b61030c90846105b2565b828511156104055760006103c384876105b2565b905060006103d183836105e1565b9050806000036103e6578493505050506101ec565b60016103f282886105c9565b6103fc91906105b2565b93505050610456565b8385101561045657600061041986866105b2565b9050600061042783836105e1565b90508060000361043c578593505050506101ec565b61044681866105b2565b6104519060016105c9565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff168383604051602401610495929190610648565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc000000000000000000000000000000000000000000000000000000001790525161051691906106a1565b600060405180830381855afa9150503d8060008114610551576040519150601f19603f3d011682016040523d82523d6000602084013e610556565b606091505b505050505050565b6008806106be83390190565b60006020828403121561057c57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156105c4576105c4610583565b500390565b600082198211156105dc576105dc610583565b500190565b600082610617577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b8381101561063757818101518382015260200161061f565b838111156101985750506000910152565b604081526000835180604084015261066781606085016020880161061c565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b600082516106b381846020870161061c565b919091019291505056fe608060405230fffea164736f6c634300080f000a",
    "sourceMap": "300:1010:190:-:0;;;394:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;424:2;:8;;-1:-1:-1;;;;;;424:8:190;-1:-1:-1;;;;;424:8:190;;;;;;;;;;300:1010;;14:303:283;97:6;150:2;138:9;129:7;125:23;121:32;118:52;;;166:1;163;156:12;118:52;192:16;;-1:-1:-1;;;;;237:31:283;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;14:303;-1:-1:-1;;;14:303:283:o;:::-;300:1010:190;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063680b376a1461003b5780639a99f4de14610050575b600080fd5b61004e61004936600461056a565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b60006100a682826fffffffffffffffffffffffffffffffff61019e565b6000546040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081523060048201526024810183905291925073ffffffffffffffffffffffffffffffffffffffff169063c88a5e6d90604401600060405180830381600087803b15801561011957600080fd5b505af115801561012d573d6000803e3d6000fd5b50505050600047905060006101448360008461019e565b905061014f816101f3565b808203471461019857600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b50505050565b60006101ab848484610222565b90506101ec6040518060400160405280600c81526020017f426f756e6420526573756c7400000000000000000000000000000000000000008152508261045e565b9392505050565b806040516102009061055e565b6040518091039082f090508015801561021d573d6000803e3d6000fd5b505050565b6000818311156102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102c85750818411155b156102d45750826101ec565b60006102e084846105b2565b6102eb9060016105c9565b9050600385111580156102fd57508481115b156103145761030c85856105c9565b9150506101ec565b61033f60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105b2565b85101580156103765750610373857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105b2565b81115b156103af576103a5857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105b2565b61030c90846105b2565b828511156104055760006103c384876105b2565b905060006103d183836105e1565b9050806000036103e6578493505050506101ec565b60016103f282886105c9565b6103fc91906105b2565b93505050610456565b8385101561045657600061041986866105b2565b9050600061042783836105e1565b90508060000361043c578593505050506101ec565b61044681866105b2565b6104519060016105c9565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff168383604051602401610495929190610648565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc000000000000000000000000000000000000000000000000000000001790525161051691906106a1565b600060405180830381855afa9150503d8060008114610551576040519150601f19603f3d011682016040523d82523d6000602084013e610556565b606091505b505050505050565b6008806106be83390190565b60006020828403121561057c57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156105c4576105c4610583565b500390565b600082198211156105dc576105dc610583565b500190565b600082610617577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b8381101561063757818101518382015260200161061f565b838111156101985750506000910152565b604081526000835180604084015261066781606085016020880161061c565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b600082516106b381846020870161061c565b919091019291505056fe608060405230fffea164736f6c634300080f000a",
    "sourceMap": "300:1010:190:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;632:676;;;;;;:::i;:::-;;:::i;:::-;;362:25;;;;;;;;;;;;;;;364:14:283;;357:22;339:41;;327:2;312:18;362:25:190;;;;;;;632:676;684:20;707:35;713:6;684:20;724:17;707:5;:35::i;:::-;810:2;;:36;;;;;826:4;810:36;;;565:74:283;655:18;;;648:34;;;684:58:190;;-1:-1:-1;810:2:190;;;:7;;538:18:283;;810:36:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:22;926:21;901:46;;958:13;974:38;980:12;994:1;997:14;974:5;:38::i;:::-;958:54;;1063:15;1072:5;1063:8;:15::i;:::-;1232:5;1215:14;:22;1190:21;:47;1186:106;;1257:13;:20;;;;;;;;1186:106;674:634;;;632:676;:::o;2815:190:277:-;2898:14;2933:19;2940:1;2943:3;2948;2933:6;:19::i;:::-;2924:28;;2962:36;;;;;;;;;;;;;;;;;;2991:6;2962:12;:36::i;:::-;2815:190;;;;;:::o;224:86:90:-;292:7;273:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;224:86;:::o;1546:1263:277:-;1630:14;1671:3;1664;:10;;1656:85;;;;;;;895:2:283;1656:85:277;;;877:21:283;934:2;914:18;;;907:30;973:34;953:18;;;946:62;1044:32;1024:18;;;1017:60;1094:19;;1656:85:277;;;;;;;;1975:3;1970:1;:8;;:20;;;;;1987:3;1982:1;:8;;1970:20;1966:34;;;-1:-1:-1;1999:1:277;1992:8;;1966:34;2011:12;2026:9;2032:3;2026;:9;:::i;:::-;:13;;2038:1;2026:13;:::i;:::-;2011:28;;2234:1;2229;:6;;:18;;;;;2246:1;2239:4;:8;2229:18;2225:38;;;2256:7;2262:1;2256:3;:7;:::i;:::-;2249:14;;;;;2225:38;2282:15;2296:1;1042:78;2282:15;:::i;:::-;2277:1;:20;;:46;;;;-1:-1:-1;2308:15:277;2322:1;1042:78;2308:15;:::i;:::-;2301:4;:22;2277:46;2273:82;;;2339:15;2353:1;1042:78;2339:15;:::i;:::-;2332:23;;:3;:23;:::i;2273:82::-;2459:3;2455:1;:7;2451:352;;;2478:12;2493:7;2497:3;2493:1;:7;:::i;:::-;2478:22;-1:-1:-1;2514:11:277;2528;2535:4;2478:22;2528:11;:::i;:::-;2514:25;;2557:3;2564:1;2557:8;2553:24;;2574:3;2567:10;;;;;;;2553:24;2612:1;2600:9;2606:3;2600;:9;:::i;:::-;:13;;;;:::i;:::-;2591:22;;2464:160;;2451:352;;;2638:3;2634:1;:7;2630:173;;;2657:12;2672:7;2678:1;2672:3;:7;:::i;:::-;2657:22;-1:-1:-1;2693:11:277;2707;2714:4;2657:22;2707:11;:::i;:::-;2693:25;;2736:3;2743:1;2736:8;2732:24;;2753:3;2746:10;;;;;;;2732:24;2779:9;2785:3;2779;:9;:::i;:::-;:13;;2791:1;2779:13;:::i;:::-;2770:22;;2643:160;;2630:173;1646:1163;1546:1263;;;;;:::o;10096:207::-;10172:11;679:42;10188:36;;10272:2;10276;10225:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;10188:92;;;10225:54;10188:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10096:207:277:o;-1:-1:-1:-;;;;;;;;:::o;14:180:283:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:283;;14:180;-1:-1:-1;14:180:283:o;1124:184::-;1176:77;1173:1;1166:88;1273:4;1270:1;1263:15;1297:4;1294:1;1287:15;1313:125;1353:4;1381:1;1378;1375:8;1372:34;;;1386:18;;:::i;:::-;-1:-1:-1;1423:9:283;;1313:125::o;1443:128::-;1483:3;1514:1;1510:6;1507:1;1504:13;1501:39;;;1520:18;;:::i;:::-;-1:-1:-1;1556:9:283;;1443:128::o;1576:266::-;1608:1;1634;1624:189;;1669:77;1666:1;1659:88;1770:4;1767:1;1760:15;1798:4;1795:1;1788:15;1624:189;-1:-1:-1;1827:9:283;;1576:266::o;1847:258::-;1919:1;1929:113;1943:6;1940:1;1937:13;1929:113;;;2019:11;;;2013:18;2000:11;;;1993:39;1965:2;1958:10;1929:113;;;2060:6;2057:1;2054:13;2051:48;;;-1:-1:-1;;2095:1:283;2077:16;;2070:27;1847:258::o;2110:517::-;2287:2;2276:9;2269:21;2250:4;2319:6;2313:13;2362:6;2357:2;2346:9;2342:18;2335:34;2378:68;2439:6;2434:2;2423:9;2419:18;2412:4;2404:6;2400:17;2378:68;:::i;:::-;2607:4;2592:20;;2585:36;;;;-1:-1:-1;2498:2:283;2486:15;;;;2503:66;2482:88;2467:104;2573:2;2463:113;;2110:517;-1:-1:-1;2110:517:283:o;2632:274::-;2761:3;2799:6;2793:13;2815:53;2861:6;2856:3;2849:4;2841:6;2837:17;2815:53;:::i;:::-;2884:16;;;;;2632:274;-1:-1:-1;;2632:274:283:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "burnEth(uint256)": "680b376a",
    "failedEthBurn()": "9a99f4de"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Vm\",\"name\":\"_vm\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failedEthBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnEth(uint256)\":{\"notice\":\"Takes an integer amount of eth to burn through the Burn library and updates the contract state if an incorrect amount of eth moved from the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/invariants/Burn.Eth.t.sol\":\"Burn_EthBurner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/test/invariants/Burn.Eth.t.sol\":{\"keccak256\":\"0x34553e06f8d9a9a5f4dfe9d9c362ab254cd73067893f08c0839e029bb0efaa04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8314b5cbac254ab27e4f81d9c531d6612e3dafd12ccf90278827e7f6d23390a\",\"dweb:/ipfs/QmQYyxY34V1va4syzFb28iNoU6UfcT64LUqoPGXdg29y26\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Vm",
              "name": "_vm",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnEth"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failedEthBurn",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burnEth(uint256)": {
            "notice": "Takes an integer amount of eth to burn through the Burn library and updates the contract state if an incorrect amount of eth moved from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/test/invariants/Burn.Eth.t.sol": "Burn_EthBurner"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/test/invariants/Burn.Eth.t.sol": {
        "keccak256": "0x34553e06f8d9a9a5f4dfe9d9c362ab254cd73067893f08c0839e029bb0efaa04",
        "urls": [
          "bzz-raw://a8314b5cbac254ab27e4f81d9c531d6612e3dafd12ccf90278827e7f6d23390a",
          "dweb:/ipfs/QmQYyxY34V1va4syzFb28iNoU6UfcT64LUqoPGXdg29y26"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 100536,
        "contract": "contracts/test/invariants/Burn.Eth.t.sol:Burn_EthBurner",
        "label": "vm",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(Vm)119058"
      },
      {
        "astId": 100538,
        "contract": "contracts/test/invariants/Burn.Eth.t.sol:Burn_EthBurner",
        "label": "failedEthBurn",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Vm)119058": {
        "encoding": "inplace",
        "label": "contract Vm",
        "numberOfBytes": "20"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "burnEth(uint256)": {
        "notice": "Takes an integer amount of eth to burn through the Burn library and updates the contract state if an incorrect amount of eth moved from the contract"
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev"
  },
  "ast": {
    "absolutePath": "contracts/test/invariants/Burn.Eth.t.sol",
    "id": 100691,
    "exportedSymbols": {
      "Burn": [
        42278
      ],
      "Burn_BurnEth_Invariant": [
        100690
      ],
      "Burn_EthBurner": [
        100617
      ],
      "StdInvariant": [
        116655
      ],
      "StdUtils": [
        117503
      ],
      "Test": [
        117552
      ],
      "Vm": [
        119058
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2187:190",
    "nodes": [
      {
        "id": 100521,
        "nodeType": "PragmaDirective",
        "src": "32:23:190",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 100523,
        "nodeType": "ImportDirective",
        "src": "57:50:190",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/StdUtils.sol",
        "file": "forge-std/StdUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100691,
        "sourceUnit": 117504,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100522,
              "name": "StdUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117503,
              "src": "66:8:190",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100525,
        "nodeType": "ImportDirective",
        "src": "108:42:190",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100691,
        "sourceUnit": 117553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100524,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117552,
              "src": "117:4:190",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100527,
        "nodeType": "ImportDirective",
        "src": "151:38:190",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100691,
        "sourceUnit": 119059,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100526,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119058,
              "src": "160:2:190",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100529,
        "nodeType": "ImportDirective",
        "src": "191:58:190",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/StdInvariant.sol",
        "file": "forge-std/StdInvariant.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100691,
        "sourceUnit": 116656,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100528,
              "name": "StdInvariant",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116655,
              "src": "200:12:190",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100531,
        "nodeType": "ImportDirective",
        "src": "250:48:190",
        "nodes": [],
        "absolutePath": "contracts/libraries/Burn.sol",
        "file": "../../libraries/Burn.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100691,
        "sourceUnit": 42295,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100530,
              "name": "Burn",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42278,
              "src": "259:4:190",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100617,
        "nodeType": "ContractDefinition",
        "src": "300:1010:190",
        "nodes": [
          {
            "id": 100536,
            "nodeType": "VariableDeclaration",
            "src": "342:14:190",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "354:2:190",
            "scope": 100617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$119058",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 100535,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 100534,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 119058,
                "src": "342:2:190"
              },
              "referencedDeclaration": 119058,
              "src": "342:2:190",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$119058",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 100538,
            "nodeType": "VariableDeclaration",
            "src": "362:25:190",
            "nodes": [],
            "constant": false,
            "functionSelector": "9a99f4de",
            "mutability": "mutable",
            "name": "failedEthBurn",
            "nameLocation": "374:13:190",
            "scope": 100617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 100537,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "362:4:190",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 100549,
            "nodeType": "FunctionDefinition",
            "src": "394:45:190",
            "nodes": [],
            "body": {
              "id": 100548,
              "nodeType": "Block",
              "src": "414:25:190",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 100546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100544,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100536,
                      "src": "424:2:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$119058",
                        "typeString": "contract Vm"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100545,
                      "name": "_vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100541,
                      "src": "429:3:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$119058",
                        "typeString": "contract Vm"
                      }
                    },
                    "src": "424:8:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$119058",
                      "typeString": "contract Vm"
                    }
                  },
                  "id": 100547,
                  "nodeType": "ExpressionStatement",
                  "src": "424:8:190"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 100542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100541,
                  "mutability": "mutable",
                  "name": "_vm",
                  "nameLocation": "409:3:190",
                  "nodeType": "VariableDeclaration",
                  "scope": 100549,
                  "src": "406:6:190",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$119058",
                    "typeString": "contract Vm"
                  },
                  "typeName": {
                    "id": 100540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 100539,
                      "name": "Vm",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119058,
                      "src": "406:2:190"
                    },
                    "referencedDeclaration": 119058,
                    "src": "406:2:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$119058",
                      "typeString": "contract Vm"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:8:190"
            },
            "returnParameters": {
              "id": 100543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:0:190"
            },
            "scope": 100617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100616,
            "nodeType": "FunctionDefinition",
            "src": "632:676:190",
            "nodes": [],
            "body": {
              "id": 100615,
              "nodeType": "Block",
              "src": "674:634:190",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100556,
                      "mutability": "mutable",
                      "name": "preBurnvalue",
                      "nameLocation": "692:12:190",
                      "nodeType": "VariableDeclaration",
                      "scope": 100615,
                      "src": "684:20:190",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100555,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "684:7:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100566,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100558,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100552,
                        "src": "713:6:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "721:1:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 100562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "729:7:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 100561,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "729:7:190",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 100560,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "724:4:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 100563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "724:13:190",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 100564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "724:17:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 100557,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        116855,
                        117005
                      ],
                      "referencedDeclaration": 116855,
                      "src": "707:5:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 100565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:35:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "684:58:190"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100572,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "826:4:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          ],
                          "id": 100571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "818:7:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100570,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "818:7:190",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "818:13:190",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100574,
                        "name": "preBurnvalue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100556,
                        "src": "833:12:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100567,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100536,
                        "src": "810:2:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 100569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "810:7:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 100575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:36:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100576,
                  "nodeType": "ExpressionStatement",
                  "src": "810:36:190"
                },
                {
                  "assignments": [
                    100578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100578,
                      "mutability": "mutable",
                      "name": "preBurnBalance",
                      "nameLocation": "909:14:190",
                      "nodeType": "VariableDeclaration",
                      "scope": 100615,
                      "src": "901:22:190",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100577,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "901:7:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100584,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 100581,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "934:4:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                            "typeString": "contract Burn_EthBurner"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                            "typeString": "contract Burn_EthBurner"
                          }
                        ],
                        "id": 100580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "926:7:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:190",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "926:13:190",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 100583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "926:21:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "901:46:190"
                },
                {
                  "assignments": [
                    100586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100586,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "966:5:190",
                      "nodeType": "VariableDeclaration",
                      "scope": 100615,
                      "src": "958:13:190",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100585,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "958:7:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100592,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100588,
                        "name": "preBurnvalue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100556,
                        "src": "980:12:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:1:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 100590,
                        "name": "preBurnBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100578,
                        "src": "997:14:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100587,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        116855,
                        117005
                      ],
                      "referencedDeclaration": 116855,
                      "src": "974:5:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 100591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:38:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "958:54:190"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100596,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100586,
                        "src": "1072:5:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100593,
                        "name": "Burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42278,
                        "src": "1063:4:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Burn_$42278_$",
                          "typeString": "type(library Burn)"
                        }
                      },
                      "id": 100595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "eth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42250,
                      "src": "1063:8:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 100597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:15:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100598,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:15:190"
                },
                {
                  "id": 100614,
                  "nodeType": "UncheckedBlock",
                  "src": "1162:140:190",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 100601,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1198:4:190",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                                  "typeString": "contract Burn_EthBurner"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                                  "typeString": "contract Burn_EthBurner"
                                }
                              ],
                              "id": 100600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1190:7:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 100599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1190:7:190",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 100602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1190:13:190",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 100603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1190:21:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 100606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100604,
                            "name": "preBurnBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100578,
                            "src": "1215:14:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 100605,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100586,
                            "src": "1232:5:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1215:22:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1190:47:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 100613,
                      "nodeType": "IfStatement",
                      "src": "1186:106:190",
                      "trueBody": {
                        "id": 100612,
                        "nodeType": "Block",
                        "src": "1239:53:190",
                        "statements": [
                          {
                            "expression": {
                              "id": 100610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 100608,
                                "name": "failedEthBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100538,
                                "src": "1257:13:190",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 100609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1273:4:190",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1257:20:190",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 100611,
                            "nodeType": "ExpressionStatement",
                            "src": "1257:20:190"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 100550,
              "nodeType": "StructuredDocumentation",
              "src": "445:182:190",
              "text": " @notice Takes an integer amount of eth to burn through the Burn library and\n updates the contract state if an incorrect amount of eth moved from the contract"
            },
            "functionSelector": "680b376a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnEth",
            "nameLocation": "641:7:190",
            "parameters": {
              "id": 100553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100552,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "657:6:190",
                  "nodeType": "VariableDeclaration",
                  "scope": 100616,
                  "src": "649:14:190",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:16:190"
            },
            "returnParameters": {
              "id": 100554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "674:0:190"
            },
            "scope": 100617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100532,
              "name": "StdUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117503,
              "src": "327:8:190"
            },
            "id": 100533,
            "nodeType": "InheritanceSpecifier",
            "src": "327:8:190"
          }
        ],
        "canonicalName": "Burn_EthBurner",
        "contractDependencies": [
          42294
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100617,
          117503
        ],
        "name": "Burn_EthBurner",
        "nameLocation": "309:14:190",
        "scope": 100691,
        "usedErrors": []
      },
      {
        "id": 100690,
        "nodeType": "ContractDefinition",
        "src": "1312:906:190",
        "nodes": [
          {
            "id": 100624,
            "nodeType": "VariableDeclaration",
            "src": "1372:29:190",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "actor",
            "nameLocation": "1396:5:190",
            "scope": 100690,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
              "typeString": "contract Burn_EthBurner"
            },
            "typeName": {
              "id": 100623,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 100622,
                "name": "Burn_EthBurner",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 100617,
                "src": "1372:14:190"
              },
              "referencedDeclaration": 100617,
              "src": "1372:14:190",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                "typeString": "contract Burn_EthBurner"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 100677,
            "nodeType": "FunctionDefinition",
            "src": "1408:387:190",
            "nodes": [],
            "body": {
              "id": 100676,
              "nodeType": "Block",
              "src": "1432:363:190",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 100633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100627,
                      "name": "actor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100624,
                      "src": "1481:5:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                        "typeString": "contract Burn_EthBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100631,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122936,
                          "src": "1508:2:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        ],
                        "id": 100630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1489:18:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Vm_$119058_$returns$_t_contract$_Burn_EthBurner_$100617_$",
                          "typeString": "function (contract Vm) returns (contract Burn_EthBurner)"
                        },
                        "typeName": {
                          "id": 100629,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 100628,
                            "name": "Burn_EthBurner",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 100617,
                            "src": "1493:14:190"
                          },
                          "referencedDeclaration": 100617,
                          "src": "1493:14:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                            "typeString": "contract Burn_EthBurner"
                          }
                        }
                      },
                      "id": 100632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1489:22:190",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                        "typeString": "contract Burn_EthBurner"
                      }
                    },
                    "src": "1481:30:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                      "typeString": "contract Burn_EthBurner"
                    }
                  },
                  "id": 100634,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:30:190"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100638,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100624,
                            "src": "1545:5:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          ],
                          "id": 100637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100636,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1537:7:190",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:14:190",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100635,
                      "name": "targetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116539,
                      "src": "1522:14:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 100640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:30:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100641,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:30:190"
                },
                {
                  "assignments": [
                    100646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100646,
                      "mutability": "mutable",
                      "name": "selectors",
                      "nameLocation": "1579:9:190",
                      "nodeType": "VariableDeclaration",
                      "scope": 100676,
                      "src": "1563:25:190",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100644,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:6:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 100645,
                        "nodeType": "ArrayTypeName",
                        "src": "1563:8:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100652,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 100650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1604:1:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 100649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1591:12:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100647,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1595:6:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 100648,
                        "nodeType": "ArrayTypeName",
                        "src": "1595:8:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 100651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:15:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1563:43:190"
                },
                {
                  "expression": {
                    "id": 100659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100653,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100646,
                        "src": "1616:9:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 100655,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 100654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1626:1:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1616:12:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 100656,
                          "name": "actor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100624,
                          "src": "1631:5:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                            "typeString": "contract Burn_EthBurner"
                          }
                        },
                        "id": 100657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burnEth",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 100616,
                        "src": "1631:13:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      },
                      "id": 100658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1631:22:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1616:37:190",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 100660,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:37:190"
                },
                {
                  "assignments": [
                    100663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100663,
                      "mutability": "mutable",
                      "name": "selector",
                      "nameLocation": "1683:8:190",
                      "nodeType": "VariableDeclaration",
                      "scope": 100676,
                      "src": "1663:28:190",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                        "typeString": "struct StdInvariant.FuzzSelector"
                      },
                      "typeName": {
                        "id": 100662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100661,
                          "name": "FuzzSelector",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 116440,
                          "src": "1663:12:190"
                        },
                        "referencedDeclaration": 116440,
                        "src": "1663:12:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$116440_storage_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100671,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100667,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100624,
                            "src": "1723:5:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          ],
                          "id": 100666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1715:7:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100665,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1715:7:190",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1715:14:190",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100669,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100646,
                        "src": "1742:9:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      ],
                      "id": 100664,
                      "name": "FuzzSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116440,
                      "src": "1694:12:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_FuzzSelector_$116440_storage_ptr_$",
                        "typeString": "type(struct StdInvariant.FuzzSelector storage pointer)"
                      }
                    },
                    "id": 100670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "addr",
                      "selectors"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1694:60:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                      "typeString": "struct StdInvariant.FuzzSelector memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1663:91:190"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100673,
                        "name": "selector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100663,
                        "src": "1779:8:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      ],
                      "id": 100672,
                      "name": "targetSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116552,
                      "src": "1764:14:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FuzzSelector_$116440_memory_ptr_$returns$__$",
                        "typeString": "function (struct StdInvariant.FuzzSelector memory)"
                      }
                    },
                    "id": 100674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:24:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100675,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:24:190"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1417:5:190",
            "parameters": {
              "id": 100625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:190"
            },
            "returnParameters": {
              "id": 100626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1432:0:190"
            },
            "scope": 100690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100689,
            "nodeType": "FunctionDefinition",
            "src": "2036:180:190",
            "nodes": [],
            "body": {
              "id": 100688,
              "nodeType": "Block",
              "src": "2075:141:190",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 100682,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100624,
                            "src": "2180:5:190",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_EthBurner_$100617",
                              "typeString": "contract Burn_EthBurner"
                            }
                          },
                          "id": 100683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "failedEthBurn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100538,
                          "src": "2180:19:190",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 100684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2180:21:190",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 100685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2203:5:190",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100681,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123071,
                      "src": "2171:8:190",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 100686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:38:190",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100687,
                  "nodeType": "ExpressionStatement",
                  "src": "2171:38:190"
                }
              ]
            },
            "documentation": {
              "id": 100678,
              "nodeType": "StructuredDocumentation",
              "src": "1801:230:190",
              "text": " @custom:invariant `eth(uint256)` always burns the exact amount of eth passed.\n Asserts that when `Burn.eth(uint256)` is called, it always burns the exact amount\n of ETH passed to the function."
            },
            "functionSelector": "d44189ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invariant_burn_eth",
            "nameLocation": "2045:18:190",
            "parameters": {
              "id": 100679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2063:2:190"
            },
            "returnParameters": {
              "id": 100680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2075:0:190"
            },
            "scope": 100690,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100618,
              "name": "StdInvariant",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 116655,
              "src": "1347:12:190"
            },
            "id": 100619,
            "nodeType": "InheritanceSpecifier",
            "src": "1347:12:190"
          },
          {
            "baseName": {
              "id": 100620,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117552,
              "src": "1361:4:190"
            },
            "id": 100621,
            "nodeType": "InheritanceSpecifier",
            "src": "1361:4:190"
          }
        ],
        "canonicalName": "Burn_BurnEth_Invariant",
        "contractDependencies": [
          100617
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100690,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "Burn_BurnEth_Invariant",
        "nameLocation": "1321:22:190",
        "scope": 100691,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 190
}