{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "nameref",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "reentrant",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256"
            },
            {
              "internalType": "contract IDripCheck",
              "name": "dripcheck",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "checkparams",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Drippie.DripAction[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct Drippie.DripConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "DripCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "nameref",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DripExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "nameref",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum Drippie.DripStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "DripStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "WithdrewERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewETH",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "CALL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "DELEGATECALL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "reentrant",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256"
            },
            {
              "internalType": "contract IDripCheck",
              "name": "dripcheck",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "checkparams",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Drippie.DripAction[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Drippie.DripConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "drips",
      "outputs": [
        {
          "internalType": "enum Drippie.DripStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "reentrant",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256"
            },
            {
              "internalType": "contract IDripCheck",
              "name": "dripcheck",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "checkparams",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Drippie.DripAction[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Drippie.DripConfig",
          "name": "config",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "last",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "executable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "enum Drippie.DripStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "status",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162002e0738038062002e0783398101604081905262000034916200008c565b600080546001600160a01b0319166001600160a01b03831690811782556040518392839283929091907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350505050620000be565b6000602082840312156200009f57600080fd5b81516001600160a01b0381168114620000b757600080fd5b9392505050565b612d3980620000ce6000396000f3fe6080604052600436106100e15760003560e01c80636e2d44ae1161007f5780639bc94d01116100595780639bc94d01146102b0578063e551cdaa146102d0578063edee6239146102f0578063fc3e3eba1461030357600080fd5b80636e2d44ae1461021d5780638da5cb5b1461023e5780639456fbcc1461029057600080fd5b80634782f779116100bb5780634782f779146101845780634d7fba6e146101a457806367148cd2146101dd578063690d8320146101fd57600080fd5b806313af4035146101225780634025feb21461014457806344004cc11461016457600080fd5b3661011d5760405134815233907f4103257eaac983ca79a70d28f90dfc4fa16b619bb0c17ee7cab0d4034c2796249060200160405180910390a2005b600080fd5b34801561012e57600080fd5b5061014261013d366004611d33565b610333565b005b34801561015057600080fd5b5061014261015f366004611d57565b610429565b34801561017057600080fd5b5061014261017f366004611d57565b6105bb565b34801561019057600080fd5b5061014261019f366004611d98565b61074c565b3480156101b057600080fd5b506101c46101bf366004611e87565b61089c565b6040516101d49493929190611fbc565b60405180910390f35b3480156101e957600080fd5b506101426101f8366004612134565b610ace565b34801561020957600080fd5b50610142610218366004611d33565b610cf1565b61023061022b366004612196565b610d7f565b6040516101d49291906121ef565b34801561024a57600080fd5b5060005461026b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d4565b34801561029c57600080fd5b506101426102ab36600461220a565b610e79565b3480156102bc57600080fd5b506101426102cb366004612243565b610f94565b3480156102dc57600080fd5b506101426102eb36600461229e565b6114cf565b6102306102fe366004612303565b611953565b34801561030f57600080fd5b5061032361031e366004612134565b611a4a565b60405190151581526020016101d4565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152604482018390528416906323b872dd90606401600060405180830381600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b478a5e196e55886228aa87ba74a7dfeba655e0a4d7ba275eabfc22aabb7a8846040516105ae91815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190612361565b508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6b00f1c7883f053ba83e907fd1965b22fffe3c4111383e725f04638a566cdbfa846040516105ae91815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610827576040519150601f19603f3d011682016040523d82523d6000602084013e61082c565b606091505b505090508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1f12aa8b6d492dd9b98e2b00b0b20830c2a7ded65afac13b60d169a034ae90bc8460405161088f91815260200190565b60405180910390a3505050565b805160208183018101805160018083529383019483019490942093905282546040805160a081018252938501805460ff90811615158652600287015494860194909452600386015473ffffffffffffffffffffffffffffffffffffffff1691850191909152600485018054939092169493929091606084019161091e9061237e565b80601f016020809104026020016040519081016040528092919081815260200182805461094a9061237e565b80156109975780601f1061096c57610100808354040283529160200191610997565b820191906000526020600020905b81548152906001019060200180831161097a57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610ab6576000848152602090819020604080516060810190915260038502909101805473ffffffffffffffffffffffffffffffffffffffff1682526001810180549293919291840191610a1b9061237e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a479061237e565b8015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b50505050508152602001600282015481525050815260200190600101906109c5565b50505091525050600682015460079092015490919084565b600060018383604051610ae29291906123d1565b90815260200160405180910390209050610afc8383611a4a565b50426006820155600781018054906000610b1583612410565b9091555050600581015460005b81811015610c95576000836001016004018281548110610b4457610b44612448565b6000918252602082206003909102018054600282015460405192945073ffffffffffffffffffffffffffffffffffffffff90911691610b87906001860190612477565b60006040518083038185875af1925050503d8060008114610bc4576040519150601f19603f3d011682016040523d82523d6000602084013e610bc9565b606091505b5050905080610c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f447269707069653a20647269702077617320756e7375636365737366756c2c2060448201527f706c6561736520636865636b20796f757220636f6e66696775726174696f6e2060648201527f666f72206d697374616b65730000000000000000000000000000000000000000608482015260a4016103b0565b50508080610c8d90612410565b915050610b22565b508383604051610ca69291906123d1565b60405180910390207fea21435419aad9c54a9d90e2522b6f60bd566401f36fcef661f5f5a28cc0d2c685853342604051610ce39493929190612554565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b610d7c814761074c565b50565b6000805460609073ffffffffffffffffffffffffffffffffffffffff163314610e04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b8473ffffffffffffffffffffffffffffffffffffffff168385604051610e2a9190612591565b60006040518083038185875af1925050503d8060008114610e67576040519150601f19603f3d011682016040523d82523d6000602084013e610e6c565b606091505b5091509150935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610f90908390839073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610f6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017f91906125ad565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611015576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b600081600381111561102957611029611ed8565b036110dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a2064726970207374617475732063616e206e65766572206260448201527f6520736574206261636b20746f204e4f4e45206166746572206372656174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b6000600184846040516110f09291906123d1565b9081526040519081900360200190205460ff169050600081600381111561111957611119611ed8565b036111cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a206472697020776974682074686174206e616d6520646f6560448201527f73206e6f7420657869737420616e642063616e6e6f742062652075706461746560648201527f6400000000000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b60038160038111156111e0576111e0611ed8565b03611294576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a206472697020776974682074686174206e616d6520686173908201527f206265656e20617263686976656420616e642063616e6e6f742062652075706460648201527f6174656400000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b8160038111156112a6576112a6611ed8565b8160038111156112b8576112b8611ed8565b0361136b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f447269707069653a2063616e6e6f74207365742064726970207374617475732060448201527f746f207468652073616d6520737461747573206173206974732063757272656e60648201527f7420737461747573000000000000000000000000000000000000000000000000608482015260a4016103b0565b600382600381111561137f5761137f611ed8565b0361142557600181600381111561139857611398611ed8565b14611425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f447269707069653a2064726970206d757374206669727374206265207061757360448201527f6564206265666f7265206265696e67206172636869766564000000000000000060648201526084016103b0565b81600185856040516114389291906123d1565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561147f5761147f611ed8565b021790555083836040516114949291906123d1565b60405180910390207f407cb3ad05e60ec498fb39417c7a4f6b82d5ba80f82fe512a37b02c93181a2a1858585604051610ce3939291906125c6565b60005473ffffffffffffffffffffffffffffffffffffffff163314611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6000600184846040516115649291906123d1565b9081526040519081900360200190205460ff16600381111561158857611588611ed8565b14611615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f447269707069653a206472697020776974682074686174206e616d6520616c7260448201527f656164792065786973747300000000000000000000000000000000000000000060648201526084016103b0565b61162260208201826125e9565b156116be576020810135156116b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f447269707069653a20696620616c6c6f77696e67207265656e7472616e74206460448201527f7269702c206d7573742073657420696e74657276616c20746f207a65726f000060648201526084016103b0565b611779565b6000816020013511611779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a20696e74657276616c206d75737420626520677265617465908201527f72207468616e207a65726f2069662064726970206973206e6f74207265656e7460648201527f72616e7400000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b60006001848460405161178d9291906123d1565b9081526040516020918190038201902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117815591506117d4908301836125e9565b6001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556020820135600282015561181f6060830160408401611d33565b6003820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556118736060830183612606565b60048301916118839190836126ba565b5060005b61189460808401846127d5565b905081101561190757600582016118ae60808501856127d5565b838181106118be576118be612448565b90506020028101906118d0919061283d565b8154600181018355600092835260209092209091600302016118f28282612871565b505080806118ff90612410565b915050611887565b5083836040516119189291906123d1565b60405180910390207fe38d8d98e6cc66f6f520d483c6c5a89289681f897799c4c29d767cf57e76d9a6858585604051610ce393929190612b64565b6000805460609073ffffffffffffffffffffffffffffffffffffffff1633146119d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b8373ffffffffffffffffffffffffffffffffffffffff16836040516119fd9190612591565b600060405180830381855af49150503d8060008114611a38576040519150601f19603f3d011682016040523d82523d6000602084013e611a3d565b606091505b50915091505b9250929050565b60008060018484604051611a5f9291906123d1565b90815260405190819003602001902090506002815460ff166003811115611a8857611a88611ed8565b14611b1757604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f447269707069653a2073656c6563746564206472697020646f6573206e6f742060448201527f6578697374206f72206973206e6f742063757272656e746c792061637469766560648201526084016103b0565b600281015460068201544291611b2c91612c6b565b1115611bba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f447269707069653a206472697020696e74657276616c20686173206e6f74206560448201527f6c61707365642073696e6365206c61737420647269700000000000000000000060648201526084016103b0565b60038101546040517fc64b3bb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063c64b3bb590611c149060048086019101612c83565b602060405180830381865afa158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c559190612361565b611d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f447269707069653a2064726970636865636b206661696c656420736f2064726960448201527f70206973206e6f742079657420726561647920746f206265207472696767657260648201527f6564000000000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b5060019392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d7c57600080fd5b600060208284031215611d4557600080fd5b8135611d5081611d11565b9392505050565b600080600060608486031215611d6c57600080fd5b8335611d7781611d11565b92506020840135611d8781611d11565b929592945050506040919091013590565b60008060408385031215611dab57600080fd5b8235611db681611d11565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611e0e57611e0e611dc4565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611e5457611e54611dc4565b81604052809350858152868686011115611e6d57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611e9957600080fd5b813567ffffffffffffffff811115611eb057600080fd5b8201601f81018413611ec157600080fd5b611ed084823560208401611df3565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611f3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b83811015611f5d578181015183820152602001611f45565b83811115611f6c576000848401525b50505050565b60008151808452611f8a816020860160208601611f42565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b611fc68186611f07565b600060206080818401528551151560808401528086015160a084015260408087015173ffffffffffffffffffffffffffffffffffffffff80821660c0870152606091508189015160a060e0880152612022610120880182611f72565b60808b01518882037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80016101008a0152805180835291925086019086830190600581901b8401880160005b828110156120d6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086830301845284518781511683528a810151898c8501526120b98a850182611f72565b918b0151938b0193909352948a0194938a0193915060010161206d565b50968a019b909b52505050509093019390935250949350505050565b60008083601f84011261210457600080fd5b50813567ffffffffffffffff81111561211c57600080fd5b602083019150836020828501011115611a4357600080fd5b6000806020838503121561214757600080fd5b823567ffffffffffffffff81111561215e57600080fd5b61216a858286016120f2565b90969095509350505050565b600082601f83011261218757600080fd5b611d5083833560208501611df3565b6000806000606084860312156121ab57600080fd5b83356121b681611d11565b9250602084013567ffffffffffffffff8111156121d257600080fd5b6121de86828701612176565b925050604084013590509250925092565b8215158152604060208201526000611ed06040830184611f72565b6000806040838503121561221d57600080fd5b823561222881611d11565b9150602083013561223881611d11565b809150509250929050565b60008060006040848603121561225857600080fd5b833567ffffffffffffffff81111561226f57600080fd5b61227b868287016120f2565b90945092505060208401356004811061229357600080fd5b809150509250925092565b6000806000604084860312156122b357600080fd5b833567ffffffffffffffff808211156122cb57600080fd5b6122d7878388016120f2565b909550935060208601359150808211156122f057600080fd5b50840160a0818703121561229357600080fd5b6000806040838503121561231657600080fd5b823561232181611d11565b9150602083013567ffffffffffffffff81111561233d57600080fd5b61234985828601612176565b9150509250929050565b8015158114610d7c57600080fd5b60006020828403121561237357600080fd5b8151611d5081612353565b600181811c9082168061239257607f821691505b6020821081036123cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612441576124416123e1565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083546124858161237e565b6001828116801561249d57600181146124d0576124ff565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841687528215158302870194506124ff565b8760005260208060002060005b858110156124f65781548a8201529084019082016124dd565b50505082870194505b50929695505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60608152600061256860608301868861250b565b73ffffffffffffffffffffffffffffffffffffffff949094166020830152506040015292915050565b600082516125a3818460208701611f42565b9190910192915050565b6000602082840312156125bf57600080fd5b5051919050565b6040815260006125da60408301858761250b565b9050611ed06020830184611f07565b6000602082840312156125fb57600080fd5b8135611d5081612353565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261263b57600080fd5b83018035915067ffffffffffffffff82111561265657600080fd5b602001915036819003821315611a4357600080fd5b601f8211156126b557600081815260208120601f850160051c810160208610156126925750805b601f850160051c820191505b818110156126b15782815560010161269e565b5050505b505050565b67ffffffffffffffff8311156126d2576126d2611dc4565b6126e6836126e0835461237e565b8361266b565b6000601f84116001811461273857600085156127025750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556127ce565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156127875786850135825560209485019460019092019101612767565b50868210156127c2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261280a57600080fd5b83018035915067ffffffffffffffff82111561282557600080fd5b6020019150600581901b3603821315611a4357600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126125a357600080fd5b813561287c81611d11565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff00000000000000000000000000000000000000008354161782555060018082016020808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18636030181126128f657600080fd5b8501803567ffffffffffffffff81111561290f57600080fd5b803603838301131561292057600080fd5b6129348161292e865461237e565b8661266b565b6000601f821160018114612988576000831561295257508382018501355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b178655612a1d565b6000868152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841690835b828110156129d6578685018801358255938701939089019087016129b7565b5084821015612a13577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c198785880101351681555b50508683881b0186555b50505050505050604082013560028201555050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a6757600080fd5b830160208101925035905067ffffffffffffffff811115612a8757600080fd5b803603821315611a4357600080fd5b81835260006020808501808196508560051b81019150846000805b88811015612b56578385038a5282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612aef578283fd5b880160608135612afe81611d11565b73ffffffffffffffffffffffffffffffffffffffff168752612b2282890183612a32565b828a8a0152612b34838a01828461250b565b6040948501359990940198909852505099860199945091850191600101612ab1565b509298975050505050505050565b604081526000612b7860408301858761250b565b82810360208401528335612b8b81612353565b15158152602084810135908201526040840135612ba781611d11565b73ffffffffffffffffffffffffffffffffffffffff166040820152612bcf6060850185612a32565b60a06060840152612be460a08401828461250b565b91505060808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112612c1c57600080fd5b850160208101903567ffffffffffffffff811115612c3957600080fd5b8060051b3603821315612c4b57600080fd5b8383036080850152612c5e838284612a96565b9998505050505050505050565b60008219821115612c7e57612c7e6123e1565b500190565b6000602080835260008454612c978161237e565b80848701526040600180841660008114612cb85760018114612cf057612d1e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550612d1e565b896000528660002060005b85811015612d165781548b8201860152908301908801612cfb565b8a0184019650505b50939897505050505050505056fea164736f6c634300080f000a",
    "sourceMap": "1006:13107:109:-:0;;;3640:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1034:5:260;:14;;-1:-1:-1;;;;;;1034:14:260;-1:-1:-1;;;;;1034:14:260;;;;;;;1064:32;;1034:14;;;;;;;;:5;1064:32;;1034:5;;1064:32;996:107;321:44:107;2159:49:106;3640:52:109;1006:13107;;14:290:283;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:283;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:283:o;:::-;1006:13107:109;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e15760003560e01c80636e2d44ae1161007f5780639bc94d01116100595780639bc94d01146102b0578063e551cdaa146102d0578063edee6239146102f0578063fc3e3eba1461030357600080fd5b80636e2d44ae1461021d5780638da5cb5b1461023e5780639456fbcc1461029057600080fd5b80634782f779116100bb5780634782f779146101845780634d7fba6e146101a457806367148cd2146101dd578063690d8320146101fd57600080fd5b806313af4035146101225780634025feb21461014457806344004cc11461016457600080fd5b3661011d5760405134815233907f4103257eaac983ca79a70d28f90dfc4fa16b619bb0c17ee7cab0d4034c2796249060200160405180910390a2005b600080fd5b34801561012e57600080fd5b5061014261013d366004611d33565b610333565b005b34801561015057600080fd5b5061014261015f366004611d57565b610429565b34801561017057600080fd5b5061014261017f366004611d57565b6105bb565b34801561019057600080fd5b5061014261019f366004611d98565b61074c565b3480156101b057600080fd5b506101c46101bf366004611e87565b61089c565b6040516101d49493929190611fbc565b60405180910390f35b3480156101e957600080fd5b506101426101f8366004612134565b610ace565b34801561020957600080fd5b50610142610218366004611d33565b610cf1565b61023061022b366004612196565b610d7f565b6040516101d49291906121ef565b34801561024a57600080fd5b5060005461026b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d4565b34801561029c57600080fd5b506101426102ab36600461220a565b610e79565b3480156102bc57600080fd5b506101426102cb366004612243565b610f94565b3480156102dc57600080fd5b506101426102eb36600461229e565b6114cf565b6102306102fe366004612303565b611953565b34801561030f57600080fd5b5061032361031e366004612134565b611a4a565b60405190151581526020016101d4565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152604482018390528416906323b872dd90606401600060405180830381600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b478a5e196e55886228aa87ba74a7dfeba655e0a4d7ba275eabfc22aabb7a8846040516105ae91815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190612361565b508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6b00f1c7883f053ba83e907fd1965b22fffe3c4111383e725f04638a566cdbfa846040516105ae91815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610827576040519150601f19603f3d011682016040523d82523d6000602084013e61082c565b606091505b505090508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1f12aa8b6d492dd9b98e2b00b0b20830c2a7ded65afac13b60d169a034ae90bc8460405161088f91815260200190565b60405180910390a3505050565b805160208183018101805160018083529383019483019490942093905282546040805160a081018252938501805460ff90811615158652600287015494860194909452600386015473ffffffffffffffffffffffffffffffffffffffff1691850191909152600485018054939092169493929091606084019161091e9061237e565b80601f016020809104026020016040519081016040528092919081815260200182805461094a9061237e565b80156109975780601f1061096c57610100808354040283529160200191610997565b820191906000526020600020905b81548152906001019060200180831161097a57829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610ab6576000848152602090819020604080516060810190915260038502909101805473ffffffffffffffffffffffffffffffffffffffff1682526001810180549293919291840191610a1b9061237e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a479061237e565b8015610a945780601f10610a6957610100808354040283529160200191610a94565b820191906000526020600020905b815481529060010190602001808311610a7757829003601f168201915b50505050508152602001600282015481525050815260200190600101906109c5565b50505091525050600682015460079092015490919084565b600060018383604051610ae29291906123d1565b90815260200160405180910390209050610afc8383611a4a565b50426006820155600781018054906000610b1583612410565b9091555050600581015460005b81811015610c95576000836001016004018281548110610b4457610b44612448565b6000918252602082206003909102018054600282015460405192945073ffffffffffffffffffffffffffffffffffffffff90911691610b87906001860190612477565b60006040518083038185875af1925050503d8060008114610bc4576040519150601f19603f3d011682016040523d82523d6000602084013e610bc9565b606091505b5050905080610c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f447269707069653a20647269702077617320756e7375636365737366756c2c2060448201527f706c6561736520636865636b20796f757220636f6e66696775726174696f6e2060648201527f666f72206d697374616b65730000000000000000000000000000000000000000608482015260a4016103b0565b50508080610c8d90612410565b915050610b22565b508383604051610ca69291906123d1565b60405180910390207fea21435419aad9c54a9d90e2522b6f60bd566401f36fcef661f5f5a28cc0d2c685853342604051610ce39493929190612554565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b610d7c814761074c565b50565b6000805460609073ffffffffffffffffffffffffffffffffffffffff163314610e04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b8473ffffffffffffffffffffffffffffffffffffffff168385604051610e2a9190612591565b60006040518083038185875af1925050503d8060008114610e67576040519150601f19603f3d011682016040523d82523d6000602084013e610e6c565b606091505b5091509150935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610f90908390839073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610f6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017f91906125ad565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314611015576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b600081600381111561102957611029611ed8565b036110dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a2064726970207374617475732063616e206e65766572206260448201527f6520736574206261636b20746f204e4f4e45206166746572206372656174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b6000600184846040516110f09291906123d1565b9081526040519081900360200190205460ff169050600081600381111561111957611119611ed8565b036111cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a206472697020776974682074686174206e616d6520646f6560448201527f73206e6f7420657869737420616e642063616e6e6f742062652075706461746560648201527f6400000000000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b60038160038111156111e0576111e0611ed8565b03611294576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a206472697020776974682074686174206e616d6520686173908201527f206265656e20617263686976656420616e642063616e6e6f742062652075706460648201527f6174656400000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b8160038111156112a6576112a6611ed8565b8160038111156112b8576112b8611ed8565b0361136b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f447269707069653a2063616e6e6f74207365742064726970207374617475732060448201527f746f207468652073616d6520737461747573206173206974732063757272656e60648201527f7420737461747573000000000000000000000000000000000000000000000000608482015260a4016103b0565b600382600381111561137f5761137f611ed8565b0361142557600181600381111561139857611398611ed8565b14611425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f447269707069653a2064726970206d757374206669727374206265207061757360448201527f6564206265666f7265206265696e67206172636869766564000000000000000060648201526084016103b0565b81600185856040516114389291906123d1565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561147f5761147f611ed8565b021790555083836040516114949291906123d1565b60405180910390207f407cb3ad05e60ec498fb39417c7a4f6b82d5ba80f82fe512a37b02c93181a2a1858585604051610ce3939291906125c6565b60005473ffffffffffffffffffffffffffffffffffffffff163314611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b6000600184846040516115649291906123d1565b9081526040519081900360200190205460ff16600381111561158857611588611ed8565b14611615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f447269707069653a206472697020776974682074686174206e616d6520616c7260448201527f656164792065786973747300000000000000000000000000000000000000000060648201526084016103b0565b61162260208201826125e9565b156116be576020810135156116b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f447269707069653a20696620616c6c6f77696e67207265656e7472616e74206460448201527f7269702c206d7573742073657420696e74657276616c20746f207a65726f000060648201526084016103b0565b611779565b6000816020013511611779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a20696e74657276616c206d75737420626520677265617465908201527f72207468616e207a65726f2069662064726970206973206e6f74207265656e7460648201527f72616e7400000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b60006001848460405161178d9291906123d1565b9081526040516020918190038201902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117815591506117d4908301836125e9565b6001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556020820135600282015561181f6060830160408401611d33565b6003820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556118736060830183612606565b60048301916118839190836126ba565b5060005b61189460808401846127d5565b905081101561190757600582016118ae60808501856127d5565b838181106118be576118be612448565b90506020028101906118d0919061283d565b8154600181018355600092835260209092209091600302016118f28282612871565b505080806118ff90612410565b915050611887565b5083836040516119189291906123d1565b60405180910390207fe38d8d98e6cc66f6f520d483c6c5a89289681f897799c4c29d767cf57e76d9a6858585604051610ce393929190612b64565b6000805460609073ffffffffffffffffffffffffffffffffffffffff1633146119d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103b0565b8373ffffffffffffffffffffffffffffffffffffffff16836040516119fd9190612591565b600060405180830381855af49150503d8060008114611a38576040519150601f19603f3d011682016040523d82523d6000602084013e611a3d565b606091505b50915091505b9250929050565b60008060018484604051611a5f9291906123d1565b90815260405190819003602001902090506002815460ff166003811115611a8857611a88611ed8565b14611b1757604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f447269707069653a2073656c6563746564206472697020646f6573206e6f742060448201527f6578697374206f72206973206e6f742063757272656e746c792061637469766560648201526084016103b0565b600281015460068201544291611b2c91612c6b565b1115611bba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f447269707069653a206472697020696e74657276616c20686173206e6f74206560448201527f6c61707365642073696e6365206c61737420647269700000000000000000000060648201526084016103b0565b60038101546040517fc64b3bb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063c64b3bb590611c149060048086019101612c83565b602060405180830381865afa158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c559190612361565b611d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f447269707069653a2064726970636865636b206661696c656420736f2064726960448201527f70206973206e6f742079657420726561647920746f206265207472696767657260648201527f6564000000000000000000000000000000000000000000000000000000000000608482015260a4016103b0565b5060019392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d7c57600080fd5b600060208284031215611d4557600080fd5b8135611d5081611d11565b9392505050565b600080600060608486031215611d6c57600080fd5b8335611d7781611d11565b92506020840135611d8781611d11565b929592945050506040919091013590565b60008060408385031215611dab57600080fd5b8235611db681611d11565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611e0e57611e0e611dc4565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611e5457611e54611dc4565b81604052809350858152868686011115611e6d57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611e9957600080fd5b813567ffffffffffffffff811115611eb057600080fd5b8201601f81018413611ec157600080fd5b611ed084823560208401611df3565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611f3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60005b83811015611f5d578181015183820152602001611f45565b83811115611f6c576000848401525b50505050565b60008151808452611f8a816020860160208601611f42565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b611fc68186611f07565b600060206080818401528551151560808401528086015160a084015260408087015173ffffffffffffffffffffffffffffffffffffffff80821660c0870152606091508189015160a060e0880152612022610120880182611f72565b60808b01518882037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80016101008a0152805180835291925086019086830190600581901b8401880160005b828110156120d6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086830301845284518781511683528a810151898c8501526120b98a850182611f72565b918b0151938b0193909352948a0194938a0193915060010161206d565b50968a019b909b52505050509093019390935250949350505050565b60008083601f84011261210457600080fd5b50813567ffffffffffffffff81111561211c57600080fd5b602083019150836020828501011115611a4357600080fd5b6000806020838503121561214757600080fd5b823567ffffffffffffffff81111561215e57600080fd5b61216a858286016120f2565b90969095509350505050565b600082601f83011261218757600080fd5b611d5083833560208501611df3565b6000806000606084860312156121ab57600080fd5b83356121b681611d11565b9250602084013567ffffffffffffffff8111156121d257600080fd5b6121de86828701612176565b925050604084013590509250925092565b8215158152604060208201526000611ed06040830184611f72565b6000806040838503121561221d57600080fd5b823561222881611d11565b9150602083013561223881611d11565b809150509250929050565b60008060006040848603121561225857600080fd5b833567ffffffffffffffff81111561226f57600080fd5b61227b868287016120f2565b90945092505060208401356004811061229357600080fd5b809150509250925092565b6000806000604084860312156122b357600080fd5b833567ffffffffffffffff808211156122cb57600080fd5b6122d7878388016120f2565b909550935060208601359150808211156122f057600080fd5b50840160a0818703121561229357600080fd5b6000806040838503121561231657600080fd5b823561232181611d11565b9150602083013567ffffffffffffffff81111561233d57600080fd5b61234985828601612176565b9150509250929050565b8015158114610d7c57600080fd5b60006020828403121561237357600080fd5b8151611d5081612353565b600181811c9082168061239257607f821691505b6020821081036123cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612441576124416123e1565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083546124858161237e565b6001828116801561249d57600181146124d0576124ff565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841687528215158302870194506124ff565b8760005260208060002060005b858110156124f65781548a8201529084019082016124dd565b50505082870194505b50929695505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60608152600061256860608301868861250b565b73ffffffffffffffffffffffffffffffffffffffff949094166020830152506040015292915050565b600082516125a3818460208701611f42565b9190910192915050565b6000602082840312156125bf57600080fd5b5051919050565b6040815260006125da60408301858761250b565b9050611ed06020830184611f07565b6000602082840312156125fb57600080fd5b8135611d5081612353565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261263b57600080fd5b83018035915067ffffffffffffffff82111561265657600080fd5b602001915036819003821315611a4357600080fd5b601f8211156126b557600081815260208120601f850160051c810160208610156126925750805b601f850160051c820191505b818110156126b15782815560010161269e565b5050505b505050565b67ffffffffffffffff8311156126d2576126d2611dc4565b6126e6836126e0835461237e565b8361266b565b6000601f84116001811461273857600085156127025750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556127ce565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b828110156127875786850135825560209485019460019092019101612767565b50868210156127c2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261280a57600080fd5b83018035915067ffffffffffffffff82111561282557600080fd5b6020019150600581901b3603821315611a4357600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126125a357600080fd5b813561287c81611d11565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff00000000000000000000000000000000000000008354161782555060018082016020808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18636030181126128f657600080fd5b8501803567ffffffffffffffff81111561290f57600080fd5b803603838301131561292057600080fd5b6129348161292e865461237e565b8661266b565b6000601f821160018114612988576000831561295257508382018501355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b178655612a1d565b6000868152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841690835b828110156129d6578685018801358255938701939089019087016129b7565b5084821015612a13577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c198785880101351681555b50508683881b0186555b50505050505050604082013560028201555050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612a6757600080fd5b830160208101925035905067ffffffffffffffff811115612a8757600080fd5b803603821315611a4357600080fd5b81835260006020808501808196508560051b81019150846000805b88811015612b56578385038a5282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612aef578283fd5b880160608135612afe81611d11565b73ffffffffffffffffffffffffffffffffffffffff168752612b2282890183612a32565b828a8a0152612b34838a01828461250b565b6040948501359990940198909852505099860199945091850191600101612ab1565b509298975050505050505050565b604081526000612b7860408301858761250b565b82810360208401528335612b8b81612353565b15158152602084810135908201526040840135612ba781611d11565b73ffffffffffffffffffffffffffffffffffffffff166040820152612bcf6060850185612a32565b60a06060840152612be460a08401828461250b565b91505060808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112612c1c57600080fd5b850160208101903567ffffffffffffffff811115612c3957600080fd5b8060051b3603821315612c4b57600080fd5b8383036080850152612c5e838284612a96565b9998505050505050505050565b60008219821115612c7e57612c7e6123e1565b500190565b6000602080835260008454612c978161237e565b80848701526040600180841660008114612cb85760018114612cf057612d1e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550612d1e565b896000528660002060005b85811015612d165781548b8201860152908301908801612cfb565b8a0184019650505b50939897505050505050505056fea164736f6c634300080f000a",
    "sourceMap": "1006:13107:109:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:34:106;;2341:9;160:25:283;;2329:10:106;;2317:34;;148:2:283;133:18;2317:34:106;;;;;;;1006:13107:109;;;;;1293:144:260;;;;;;;;;;-1:-1:-1;1293:144:260;;;;;:::i;:::-;;:::i;:::-;;4261:298:106;;;;;;;;;;-1:-1:-1;4261:298:106;;;;;:::i;:::-;;:::i;3666:342::-;;;;;;;;;;-1:-1:-1;3666:342:106;;;;;:::i;:::-;;:::i;2817:256::-;;;;;;;;;;-1:-1:-1;2817:256:106;;;;;:::i;:::-;;:::i;3531:41:109:-;;;;;;;;;;-1:-1:-1;3531:41:109;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;10841:3270;;;;;;;;;;-1:-1:-1;10841:3270:109;;;;;:::i;:::-;;:::i;2501:117:106:-;;;;;;;;;;-1:-1:-1;2501:117:106;;;;;:::i;:::-;;:::i;672:213:107:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;679:20:260:-;;;;;;;;;;-1:-1:-1;679:20:260;;;;;;;;;;;8612:42:283;8600:55;;;8582:74;;8570:2;8555:18;679:20:260;8436:226:283;3269:145:106;;;;;;;;;;-1:-1:-1;3269:145:106;;;;;:::i;:::-;;:::i;6363:2206:109:-;;;;;;;;;;-1:-1:-1;6363:2206:109;;;;;:::i;:::-;;:::i;4103:1816::-;;;;;;;;;;-1:-1:-1;4103:1816:109;;;;;:::i;:::-;;:::i;1145:263:107:-;;;;;;:::i;:::-;;:::i;8759:1246:109:-;;;;;;;;;;-1:-1:-1;8759:1246:109;;;;;:::i;:::-;;:::i;:::-;;;10983:14:283;;10976:22;10958:41;;10946:2;10931:18;8759:1246:109;10818:187:283;1293:144:260;767:5;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;;;;;;;;;1364:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1396:34:::1;::::0;1364:16;;1409:10:::1;::::0;1396:34:::1;::::0;1364:5;1396:34:::1;1293:144:::0;:::o;4261:298:106:-;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;4385::106::1;::::0;;;;4413:4:::1;4385:44;::::0;::::1;11614:34:283::0;4385:19:106::1;11684:15:283::0;;;11664:18;;;11657:43;11716:18;;;11709:34;;;4385:19:106;::::1;::::0;::::1;::::0;11526:18:283;;4385:44:106::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4539:6;4499:53;;4526:3;4499:53;;4514:10;4499:53;;;4548:3;4499:53;;;;160:25:283::0;;148:2;133:18;;14:177;4499:53:106::1;;;;;;;;4261:298:::0;;;:::o;3666:342::-;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;3846:29:106::1;::::0;;;;:15:::1;11946:55:283::0;;;3846:29:106::1;::::0;::::1;11928:74:283::0;12018:18;;;12011:34;;;3846:15:106;::::1;::::0;::::1;::::0;11901:18:283;;3846:29:106::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3984:6;3945:56;;3971:3;3945:56;;3959:10;3945:56;;;3993:7;3945:56;;;;160:25:283::0;;148:2;133:18;;14:177;2817:256:106;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;2966:12:106::1;2984:3;:8;;3001:7;2984:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2965:49;;;3053:3;3029:37;;3041:10;3029:37;;;3058:7;3029:37;;;;160:25:283::0;;148:2;133:18;;14:177;3029:37:106::1;;;;;;;;2893:180;2817:256:::0;;:::o;3531:41:109:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3531:41:109;;-1:-1:-1;;3531:41:109;;;;;;;;;;;;;:::o;10841:3270::-;10897:23;10923:5;10929;;10923:12;;;;;;;:::i;:::-;;;;;;;;;;;;;10897:38;;11136:17;11147:5;;11136:10;:17::i;:::-;-1:-1:-1;11625:15:109;11612:10;;;:28;11936:11;;;:13;;;:11;:13;;;:::i;:::-;;;;-1:-1:-1;;12319:20:109;;;:27;12305:11;12356:1678;12380:3;12376:1;:7;12356:1678;;;12661:25;12689:5;:12;;:20;;12710:1;12689:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;13118:13;;13145:12;;;;13118:54;;12689:23;;-1:-1:-1;13118:13:109;;;;;:54;;:13;13160:11;;;13118:54;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13099:73;;;13906:7;13881:142;;;;;;;15167:2:283;13881:142:109;;;15149:21:283;15206:2;15186:18;;;15179:30;15245:34;15225:18;;;15218:62;15316:34;15296:18;;;15289:62;15388:14;15367:19;;;15360:43;15420:19;;13881:142:109;14965:480:283;13881:142:109;12390:1644;;12385:3;;;;;:::i;:::-;;;;12356:1678;;;;14062:5;;14049:55;;;;;;;:::i;:::-;;;;;;;;;14069:5;;14076:10;14088:15;14049:55;;;;;;;;;:::i;:::-;;;;;;;;10887:3224;;10841:3270;;:::o;2501:117:106:-;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;2572:39:106::1;2584:3;2589:21;2572:11;:39::i;:::-;2501:117:::0;:::o;672:213:107:-;805:4;767:5:260;;811:12:107;;767:5:260;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;842:7:107::1;:12;;863:6;872:5;842:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:43;;;;672:213:::0;;;;;;:::o;3269:145:106:-;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;3375:31:106::1;::::0;;;;3400:4:::1;3375:31;::::0;::::1;8582:74:283::0;3348:59:106::1;::::0;3362:6;;3370:3;;3375:16:::1;::::0;::::1;::::0;::::1;::::0;8555:18:283;;3375:31:106::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3348:59::-;3269:145:::0;;:::o;6363:2206:109:-;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;6661:15:109::1;6650:7;:26;;;;;;;;:::i;:::-;::::0;6629:138:::1;;;::::0;::::1;::::0;;16894:2:283;6629:138:109::1;::::0;::::1;16876:21:283::0;16933:2;16913:18;;;16906:30;16972:34;16952:18;;;16945:62;17043:34;17023:18;;;17016:62;17115:3;17094:19;;;17087:32;17136:19;;6629:138:109::1;16692:469:283::0;6629:138:109::1;6844:15;6862:5;6868;;6862:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:19;::::1;;::::0;-1:-1:-1;6862:19:109::1;7151:4;:23;;;;;;;;:::i;:::-;::::0;7130:135:::1;;;::::0;::::1;::::0;;17368:2:283;7130:135:109::1;::::0;::::1;17350:21:283::0;17407:2;17387:18;;;17380:30;17446:34;17426:18;;;17419:62;17517:34;17497:18;;;17490:62;17589:3;17568:19;;;17561:32;17610:19;;7130:135:109::1;17166:469:283::0;7130:135:109::1;7442:19;7434:4;:27;;;;;;;;:::i;:::-;::::0;7413:142:::1;;;::::0;::::1;::::0;;17842:2:283;7413:142:109::1;::::0;::::1;17824:21:283::0;17881:2;17861:18;;;17854:30;;;17920:34;17900:18;;;17893:62;17991:34;17971:18;;;17964:62;18063:6;18042:19;;;18035:35;18087:19;;7413:142:109::1;17640:472:283::0;7413:142:109::1;7862:7;7854:15;;;;;;;;:::i;:::-;:4;:15;;;;;;;;:::i;:::-;::::0;7833:134:::1;;;::::0;::::1;::::0;;18319:2:283;7833:134:109::1;::::0;::::1;18301:21:283::0;18358:2;18338:18;;;18331:30;18397:34;18377:18;;;18370:62;18468:34;18448:18;;;18441:62;18540:10;18519:19;;;18512:39;18568:19;;7833:134:109::1;18117:476:283::0;7833:134:109::1;8214:19;8203:7;:30;;;;;;;;:::i;:::-;::::0;8199:201:::1;;8282:17;8274:4;:25;;;;;;;;:::i;:::-;;8249:140;;;::::0;::::1;::::0;;18800:2:283;8249:140:109::1;::::0;::::1;18782:21:283::0;18839:2;18819:18;;;18812:30;18878:34;18858:18;;;18851:62;18949:26;18929:18;;;18922:54;18993:19;;8249:140:109::1;18598:420:283::0;8249:140:109::1;8500:7;8478:5;8484;;8478:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:29;;;::::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;8540:5;;8522:40;;;;;;;:::i;:::-;;;;;;;;;8547:5;;8554:7;8522:40;;;;;;;;:::i;4103:1816::-:0;767:5:260;;;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;4479:15:109::1;4456:5;4462;;4456:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:19;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;4435:128;;;::::0;::::1;::::0;;19582:2:283;4435:128:109::1;::::0;::::1;19564:21:283::0;19621:2;19601:18;;;19594:30;19660:34;19640:18;;;19633:62;19731:13;19711:18;;;19704:41;19762:19;;4435:128:109::1;19380:407:283::0;4435:128:109::1;4849:17;;::::0;::::1;:7:::0;:17:::1;:::i;:::-;4845:368;;;4907:16;::::0;::::1;;:21:::0;4882:142:::1;;;::::0;::::1;::::0;;20240:2:283;4882:142:109::1;::::0;::::1;20222:21:283::0;20279:2;20259:18;;;20252:30;20318:34;20298:18;;;20291:62;20389:32;20369:18;;;20362:60;20439:19;;4882:142:109::1;20038:426:283::0;4882:142:109::1;4845:368;;;5099:1;5080:7;:16;;;:20;5055:147;;;::::0;::::1;::::0;;20671:2:283;5055:147:109::1;::::0;::::1;20653:21:283::0;20710:2;20690:18;;;20683:30;;;20749:34;20729:18;;;20722:62;20820:34;20800:18;;;20793:62;20892:6;20871:19;;;20864:35;20916:19;;5055:147:109::1;20469:472:283::0;5055:147:109::1;5317:23;5343:5;5349;;5343:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;5365:32;;;::::1;5380:17;5365:32;::::0;;5343:12;-1:-1:-1;5432:17:109::1;::::0;;::::1;::::0;::::1;:::i;:::-;5407:12;::::0;::::1;:42:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;5483:16:::1;::::0;::::1;;5459:21:::0;;;:40;5534:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;5509:22:::0;;;:42;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;5588:19:::1;;::::0;::::1;::::0;::::1;:::i;:::-;5561:24:::0;;;;:46:::1;::::0;;:24;:46:::1;:::i;:::-;;5718:9;5713:123;5737:15;;::::0;::::1;:7:::0;:15:::1;:::i;:::-;:22;;5733:1;:26;5713:123;;;5780:20:::0;;;5806:15:::1;;::::0;::::1;:7:::0;:15:::1;:::i;:::-;5822:1;5806:18;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5780:45:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5780:45:109;;;::::1;::::0;;;;;::::1;;;;::::0;;::::1;:::i;:::-;;;5761:3;;;;;:::i;:::-;;;;5713:123;;;;5890:5;;5878:34;;;;;;;:::i;:::-;;;;;;;;;5897:5;;5904:7;5878:34;;;;;;;;:::i;1145:263:107:-:0;1272:4;767:5:260;;1278:12:107;;767:5:260;;753:10;:19;745:44;;;;;;;11212:2:283;745:44:260;;;11194:21:283;11251:2;11231:18;;;11224:30;11290:14;11270:18;;;11263:42;11322:18;;745:44:260;11010:336:283;745:44:260;1374:7:107::1;:20;;1395:5;1374:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:34;;;;800:1:260;1145:263:107::0;;;;;:::o;8759:1246:109:-;8823:4;8839:23;8865:5;8871;;8865:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;9005:17:109;8989:12;;;;:33;;;;;;;;:::i;:::-;;8968:144;;;;;;;;31037:2:283;8968:144:109;;;31019:21:283;31056:18;;;31049:30;;;;31115:34;31095:18;;;31088:62;31186:34;31166:18;;;31159:62;31238:19;;8968:144:109;30835:428:283;8968:144:109;9578:21;;;;9565:10;;;;9603:15;;9565:34;;;:::i;:::-;:53;;9544:154;;;;;;;31603:2:283;9544:154:109;;;31585:21:283;31642:2;31622:18;;;31615:30;31681:34;31661:18;;;31654:62;31752:24;31732:18;;;31725:52;31794:19;;9544:154:109;31401:418:283;9544:154:109;9787:22;;;;:54;;;;;:22;;;;;:28;;:54;;9816:24;;;;;9787:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9766:167;;;;;;;33050:2:283;9766:167:109;;;33032:21:283;33089:2;33069:18;;;33062:30;33128:34;33108:18;;;33101:62;33199:34;33179:18;;;33172:62;33271:4;33250:19;;;33243:33;33293:19;;9766:167:109;32848:470:283;9766:167:109;-1:-1:-1;9994:4:109;;8759:1246;-1:-1:-1;;;8759:1246:109:o;196:154:283:-;282:42;275:5;271:54;264:5;261:65;251:93;;340:1;337;330:12;355:247;414:6;467:2;455:9;446:7;442:23;438:32;435:52;;;483:1;480;473:12;435:52;522:9;509:23;541:31;566:5;541:31;:::i;:::-;591:5;355:247;-1:-1:-1;;;355:247:283:o;607:473::-;701:6;709;717;770:2;758:9;749:7;745:23;741:32;738:52;;;786:1;783;776:12;738:52;825:9;812:23;844:31;869:5;844:31;:::i;:::-;894:5;-1:-1:-1;951:2:283;936:18;;923:32;964:33;923:32;964:33;:::i;:::-;607:473;;1016:7;;-1:-1:-1;;;1070:2:283;1055:18;;;;1042:32;;607:473::o;1562:323::-;1638:6;1646;1699:2;1687:9;1678:7;1674:23;1670:32;1667:52;;;1715:1;1712;1705:12;1667:52;1754:9;1741:23;1773:31;1798:5;1773:31;:::i;:::-;1823:5;1875:2;1860:18;;;;1847:32;;-1:-1:-1;;;1562:323:283:o;1890:184::-;1942:77;1939:1;1932:88;2039:4;2036:1;2029:15;2063:4;2060:1;2053:15;2079:691;2144:5;2174:18;2215:2;2207:6;2204:14;2201:40;;;2221:18;;:::i;:::-;2355:2;2349:9;2421:2;2409:15;;2260:66;2405:24;;;2431:2;2401:33;2397:42;2385:55;;;2455:18;;;2475:22;;;2452:46;2449:72;;;2501:18;;:::i;:::-;2541:10;2537:2;2530:22;2570:6;2561:15;;2600:6;2592;2585:22;2640:3;2631:6;2626:3;2622:16;2619:25;2616:45;;;2657:1;2654;2647:12;2616:45;2707:6;2702:3;2695:4;2687:6;2683:17;2670:44;2762:1;2755:4;2746:6;2738;2734:19;2730:30;2723:41;;;;2079:691;;;;;:::o;2775:451::-;2844:6;2897:2;2885:9;2876:7;2872:23;2868:32;2865:52;;;2913:1;2910;2903:12;2865:52;2953:9;2940:23;2986:18;2978:6;2975:30;2972:50;;;3018:1;3015;3008:12;2972:50;3041:22;;3094:4;3086:13;;3082:27;-1:-1:-1;3072:55:283;;3123:1;3120;3113:12;3072:55;3146:74;3212:7;3207:2;3194:16;3189:2;3185;3181:11;3146:74;:::i;:::-;3136:84;2775:451;-1:-1:-1;;;;2775:451:283:o;3231:184::-;3283:77;3280:1;3273:88;3380:4;3377:1;3370:15;3404:4;3401:1;3394:15;3420:295;3502:1;3495:5;3492:12;3482:200;;3538:77;3535:1;3528:88;3639:4;3636:1;3629:15;3667:4;3664:1;3657:15;3482:200;3691:18;;3420:295::o;3720:258::-;3792:1;3802:113;3816:6;3813:1;3810:13;3802:113;;;3892:11;;;3886:18;3873:11;;;3866:39;3838:2;3831:10;3802:113;;;3933:6;3930:1;3927:13;3924:48;;;3968:1;3959:6;3954:3;3950:16;3943:27;3924:48;;3720:258;;;:::o;3983:316::-;4024:3;4062:5;4056:12;4089:6;4084:3;4077:19;4105:63;4161:6;4154:4;4149:3;4145:14;4138:4;4131:5;4127:16;4105:63;:::i;:::-;4213:2;4201:15;4218:66;4197:88;4188:98;;;;4288:4;4184:109;;3983:316;-1:-1:-1;;3983:316:283:o;4304:2041::-;4571:45;4606:9;4598:6;4571:45;:::i;:::-;4552:4;4635:2;4673:3;4668:2;4657:9;4653:18;4646:31;4734:6;4728:13;4721:21;4714:29;4708:3;4697:9;4693:19;4686:58;4800:2;4792:6;4788:15;4782:22;4775:4;4764:9;4760:20;4753:52;4824:4;4875:2;4867:6;4863:15;4857:22;4898:42;4995:2;4981:12;4977:21;4971:3;4960:9;4956:19;4949:50;5018:4;5008:14;;5071:2;5063:6;5059:15;5053:22;5112:4;5106:3;5095:9;5091:19;5084:33;5140:53;5188:3;5177:9;5173:19;5157:14;5140:53;:::i;:::-;5242:3;5230:16;;5224:23;5288:22;;;5312:66;5284:95;5278:3;5263:19;;5256:124;5429:21;;5459:22;;;5126:67;;-1:-1:-1;5594:23:283;;;5497:15;;;;5555:1;5551:14;;;5539:27;;5535:36;;5635:1;5645:585;5659:6;5656:1;5653:13;5645:585;;;5745:66;5736:6;5728;5724:19;5720:92;5715:3;5708:105;5842:6;5836:13;5892:2;5887;5881:9;5877:18;5869:6;5862:34;5945:2;5941;5937:11;5931:18;5986:2;5981;5973:6;5969:15;5962:27;6016:49;6061:2;6053:6;6049:15;6033:14;6016:49;:::i;:::-;6108:11;;;6102:18;6085:15;;;6078:43;;;;6173:15;;;;6208:12;;;;6002:63;-1:-1:-1;5681:1:283;5674:9;5645:585;;;-1:-1:-1;6269:18:283;;;6262:34;;;;-1:-1:-1;;;;6312:18:283;;;6305:34;;;;-1:-1:-1;6247:6:283;4304:2041;-1:-1:-1;;;;4304:2041:283:o;6350:348::-;6402:8;6412:6;6466:3;6459:4;6451:6;6447:17;6443:27;6433:55;;6484:1;6481;6474:12;6433:55;-1:-1:-1;6507:20:283;;6550:18;6539:30;;6536:50;;;6582:1;6579;6572:12;6536:50;6619:4;6611:6;6607:17;6595:29;;6671:3;6664:4;6655:6;6647;6643:19;6639:30;6636:39;6633:59;;;6688:1;6685;6678:12;6703:411;6774:6;6782;6835:2;6823:9;6814:7;6810:23;6806:32;6803:52;;;6851:1;6848;6841:12;6803:52;6891:9;6878:23;6924:18;6916:6;6913:30;6910:50;;;6956:1;6953;6946:12;6910:50;6995:59;7046:7;7037:6;7026:9;7022:22;6995:59;:::i;:::-;7073:8;;6969:85;;-1:-1:-1;6703:411:283;-1:-1:-1;;;;6703:411:283:o;7379:221::-;7421:5;7474:3;7467:4;7459:6;7455:17;7451:27;7441:55;;7492:1;7489;7482:12;7441:55;7514:80;7590:3;7581:6;7568:20;7561:4;7553:6;7549:17;7514:80;:::i;7605:523::-;7691:6;7699;7707;7760:2;7748:9;7739:7;7735:23;7731:32;7728:52;;;7776:1;7773;7766:12;7728:52;7815:9;7802:23;7834:31;7859:5;7834:31;:::i;:::-;7884:5;-1:-1:-1;7940:2:283;7925:18;;7912:32;7967:18;7956:30;;7953:50;;;7999:1;7996;7989:12;7953:50;8022:49;8063:7;8054:6;8043:9;8039:22;8022:49;:::i;:::-;8012:59;;;8118:2;8107:9;8103:18;8090:32;8080:42;;7605:523;;;;;:::o;8133:298::-;8316:6;8309:14;8302:22;8291:9;8284:41;8361:2;8356;8345:9;8341:18;8334:30;8265:4;8381:44;8421:2;8410:9;8406:18;8398:6;8381:44;:::i;8667:404::-;8751:6;8759;8812:2;8800:9;8791:7;8787:23;8783:32;8780:52;;;8828:1;8825;8818:12;8780:52;8867:9;8854:23;8886:31;8911:5;8886:31;:::i;:::-;8936:5;-1:-1:-1;8993:2:283;8978:18;;8965:32;9006:33;8965:32;9006:33;:::i;:::-;9058:7;9048:17;;;8667:404;;;;;:::o;9076:571::-;9172:6;9180;9188;9241:2;9229:9;9220:7;9216:23;9212:32;9209:52;;;9257:1;9254;9247:12;9209:52;9297:9;9284:23;9330:18;9322:6;9319:30;9316:50;;;9362:1;9359;9352:12;9316:50;9401:59;9452:7;9443:6;9432:9;9428:22;9401:59;:::i;:::-;9479:8;;-1:-1:-1;9375:85:283;-1:-1:-1;;9564:2:283;9549:18;;9536:32;9597:1;9587:12;;9577:40;;9613:1;9610;9603:12;9577:40;9636:5;9626:15;;;9076:571;;;;;:::o;9652:701::-;9763:6;9771;9779;9832:2;9820:9;9811:7;9807:23;9803:32;9800:52;;;9848:1;9845;9838:12;9800:52;9888:9;9875:23;9917:18;9958:2;9950:6;9947:14;9944:34;;;9974:1;9971;9964:12;9944:34;10013:59;10064:7;10055:6;10044:9;10040:22;10013:59;:::i;:::-;10091:8;;-1:-1:-1;9987:85:283;-1:-1:-1;10179:2:283;10164:18;;10151:32;;-1:-1:-1;10195:16:283;;;10192:36;;;10224:1;10221;10214:12;10192:36;-1:-1:-1;10247:24:283;;10305:3;10287:16;;;10283:26;10280:46;;;10322:1;10319;10312:12;10358:455;10435:6;10443;10496:2;10484:9;10475:7;10471:23;10467:32;10464:52;;;10512:1;10509;10502:12;10464:52;10551:9;10538:23;10570:31;10595:5;10570:31;:::i;:::-;10620:5;-1:-1:-1;10676:2:283;10661:18;;10648:32;10703:18;10692:30;;10689:50;;;10735:1;10732;10725:12;10689:50;10758:49;10799:7;10790:6;10779:9;10775:22;10758:49;:::i;:::-;10748:59;;;10358:455;;;;;:::o;12056:118::-;12142:5;12135:13;12128:21;12121:5;12118:32;12108:60;;12164:1;12161;12154:12;12179:245;12246:6;12299:2;12287:9;12278:7;12274:23;12270:32;12267:52;;;12315:1;12312;12305:12;12267:52;12347:9;12341:16;12366:28;12388:5;12366:28;:::i;12639:437::-;12718:1;12714:12;;;;12761;;;12782:61;;12836:4;12828:6;12824:17;12814:27;;12782:61;12889:2;12881:6;12878:14;12858:18;12855:38;12852:218;;12926:77;12923:1;12916:88;13027:4;13024:1;13017:15;13055:4;13052:1;13045:15;12852:218;;12639:437;;;:::o;13081:273::-;13266:6;13258;13253:3;13240:33;13222:3;13292:16;;13317:13;;;13292:16;13081:273;-1:-1:-1;13081:273:283:o;13359:184::-;13411:77;13408:1;13401:88;13508:4;13505:1;13498:15;13532:4;13529:1;13522:15;13548:195;13587:3;13618:66;13611:5;13608:77;13605:103;;13688:18;;:::i;:::-;-1:-1:-1;13735:1:283;13724:13;;13548:195::o;13748:184::-;13800:77;13797:1;13790:88;13897:4;13894:1;13887:15;13921:4;13918:1;13911:15;14062:898;14188:3;14217:1;14250:6;14244:13;14280:36;14306:9;14280:36;:::i;:::-;14335:1;14352:18;;;14379:191;;;;14584:1;14579:356;;;;14345:590;;14379:191;14427:66;14416:9;14412:82;14407:3;14400:95;14550:6;14543:14;14536:22;14528:6;14524:35;14519:3;14515:45;14508:52;;14379:191;;14579:356;14610:6;14607:1;14600:17;14640:4;14685:2;14682:1;14672:16;14710:1;14724:165;14738:6;14735:1;14732:13;14724:165;;;14816:14;;14803:11;;;14796:35;14859:16;;;;14753:10;;14724:165;;;14728:3;;;14918:6;14913:3;14909:16;14902:23;;14345:590;-1:-1:-1;14951:3:283;;14062:898;-1:-1:-1;;;;;;14062:898:283:o;15450:326::-;15539:6;15534:3;15527:19;15591:6;15584:5;15577:4;15572:3;15568:14;15555:43;;15643:1;15636:4;15627:6;15622:3;15618:16;15614:27;15607:38;15509:3;15765:4;15695:66;15690:2;15682:6;15678:15;15674:88;15669:3;15665:98;15661:109;15654:116;;15450:326;;;;:::o;15781:438::-;15996:2;15985:9;15978:21;15959:4;16016:62;16074:2;16063:9;16059:18;16051:6;16043;16016:62;:::i;:::-;16126:42;16114:55;;;;16109:2;16094:18;;16087:83;-1:-1:-1;16201:2:283;16186:18;16179:34;16008:70;15781:438;-1:-1:-1;;15781:438:283:o;16224:274::-;16353:3;16391:6;16385:13;16407:53;16453:6;16448:3;16441:4;16433:6;16429:17;16407:53;:::i;:::-;16476:16;;;;;16224:274;-1:-1:-1;;16224:274:283:o;16503:184::-;16573:6;16626:2;16614:9;16605:7;16601:23;16597:32;16594:52;;;16642:1;16639;16632:12;16594:52;-1:-1:-1;16665:16:283;;16503:184;-1:-1:-1;16503:184:283:o;19023:352::-;19224:2;19213:9;19206:21;19187:4;19244:62;19302:2;19291:9;19287:18;19279:6;19271;19244:62;:::i;:::-;19236:70;;19315:54;19365:2;19354:9;19350:18;19342:6;19315:54;:::i;19792:241::-;19848:6;19901:2;19889:9;19880:7;19876:23;19872:32;19869:52;;;19917:1;19914;19907:12;19869:52;19956:9;19943:23;19975:28;19997:5;19975:28;:::i;21218:580::-;21295:4;21301:6;21361:11;21348:25;21451:66;21440:8;21424:14;21420:29;21416:102;21396:18;21392:127;21382:155;;21533:1;21530;21523:12;21382:155;21560:33;;21612:20;;;-1:-1:-1;21655:18:283;21644:30;;21641:50;;;21687:1;21684;21677:12;21641:50;21720:4;21708:17;;-1:-1:-1;21751:14:283;21747:27;;;21737:38;;21734:58;;;21788:1;21785;21778:12;21803:544;21904:2;21899:3;21896:11;21893:448;;;21940:1;21965:5;21961:2;21954:17;22010:4;22006:2;21996:19;22080:2;22068:10;22064:19;22061:1;22057:27;22051:4;22047:38;22116:4;22104:10;22101:20;22098:47;;;-1:-1:-1;22139:4:283;22098:47;22194:2;22189:3;22185:12;22182:1;22178:20;22172:4;22168:31;22158:41;;22249:82;22267:2;22260:5;22257:13;22249:82;;;22312:17;;;22293:1;22282:13;22249:82;;;22253:3;;;21893:448;21803:544;;;:::o;22583:1321::-;22705:18;22700:3;22697:27;22694:53;;;22727:18;;:::i;:::-;22756:93;22845:3;22805:38;22837:4;22831:11;22805:38;:::i;:::-;22799:4;22756:93;:::i;:::-;22875:1;22900:2;22895:3;22892:11;22917:1;22912:734;;;;23690:1;23707:3;23704:93;;;-1:-1:-1;23763:19:283;;;23750:33;23704:93;22489:66;22480:1;22476:11;;;22472:84;22468:89;22458:100;22564:1;22560:11;;;22455:117;23810:78;;22885:1013;;22912:734;14009:1;14002:14;;;14046:4;14033:18;;22957:66;22948:76;;;23107:9;23129:229;23143:7;23140:1;23137:14;23129:229;;;23232:19;;;23219:33;23204:49;;23339:4;23324:20;;;;23292:1;23280:14;;;;23159:12;23129:229;;;23133:3;23386;23377:7;23374:16;23371:219;;;23506:66;23500:3;23494;23491:1;23487:11;23483:21;23479:94;23475:99;23462:9;23457:3;23453:19;23440:33;23436:139;23428:6;23421:155;23371:219;;;23633:1;23627:3;23624:1;23620:11;23616:19;23610:4;23603:33;22885:1013;;;22583:1321;;;:::o;23909:635::-;24033:4;24039:6;24099:11;24086:25;24189:66;24178:8;24162:14;24158:29;24154:102;24134:18;24130:127;24120:155;;24271:1;24268;24261:12;24120:155;24298:33;;24350:20;;;-1:-1:-1;24393:18:283;24382:30;;24379:50;;;24425:1;24422;24415:12;24379:50;24458:4;24446:17;;-1:-1:-1;24509:1:283;24505:14;;;24489;24485:35;24475:46;;24472:66;;;24534:1;24531;24524:12;24549:387;24646:4;24704:11;24691:25;24794:66;24783:8;24767:14;24763:29;24759:102;24739:18;24735:127;24725:155;;24876:1;24873;24866:12;24941:2227;25114:5;25101:19;25129:33;25154:7;25129:33;:::i;:::-;25286:42;25277:7;25273:56;25204:66;25197:4;25191:11;25187:84;25184:146;25178:4;25171:160;;25350:1;25388:2;25382:4;25378:13;25410:2;25471;25464:5;25460:14;25447:28;25550:66;25542:5;25526:14;25522:26;25518:99;25498:18;25494:124;25484:152;;25632:1;25629;25622:12;25484:152;25657:30;;25710:18;;25751;25740:30;;25737:50;;;25783:1;25780;25773:12;25737:50;25838:6;25822:14;25818:27;25813:2;25807:4;25803:13;25799:47;25796:67;;;25859:1;25856;25849:12;25796:67;25872:108;25973:6;25927:44;25959:10;25953:17;25927:44;:::i;:::-;25915:10;25872:108;:::i;:::-;26006:1;26034:2;26026:6;26023:14;26051:1;26046:777;;;;26869:1;26886:6;26883:108;;;-1:-1:-1;26951:20:283;;;26947:29;;26934:43;26883:108;22489:66;22480:1;22476:11;;;22472:84;22468:89;22458:100;22564:1;22560:11;;;22455:117;27004:89;;26016:1087;;26046:777;14009:1;14002:14;;;14046:4;14033:18;;26094:66;26082:79;;;26250:9;26272:236;26286:7;26283:1;26280:14;26272:236;;;26377:20;;;26373:29;;26360:43;26345:59;;26476:18;;;;26431:15;;;;26302:10;;26272:236;;;26276:3;26536:6;26527:7;26524:19;26521:235;;;26672:66;26666:3;26657:6;26654:1;26650:14;26646:24;26642:97;26638:102;26632:2;26620:9;26614:4;26610:20;26606:29;26593:43;26589:152;26581:6;26574:168;26521:235;;;26809:2;26800:6;26796:2;26792:15;26788:24;26776:10;26769:44;26016:1087;;;;;;;;27157:2;27150:5;27146:14;27133:28;27129:1;27123:4;27119:12;27112:50;24941:2227;;:::o;27173:559::-;27231:5;27238:6;27298:3;27285:17;27380:66;27369:8;27353:14;27349:29;27345:102;27325:18;27321:127;27311:155;;27462:1;27459;27452:12;27311:155;27490:33;;27594:4;27581:18;;;-1:-1:-1;27542:21:283;;-1:-1:-1;27622:18:283;27611:30;;27608:50;;;27654:1;27651;27644:12;27608:50;27701:6;27685:14;27681:27;27674:5;27670:39;27667:59;;;27722:1;27719;27712:12;27737:1422;27856:6;27851:3;27844:19;27826:3;27882:4;27923:2;27918:3;27914:12;27948:11;27975;27968:18;;28025:6;28022:1;28018:14;28011:5;28007:26;27995:38;;28056:5;28079:1;28100;28110:1023;28126:6;28121:3;28118:15;28110:1023;;;28201:5;28195:4;28191:16;28186:3;28179:29;28260:6;28247:20;28346:66;28338:5;28322:14;28318:26;28314:99;28294:18;28290:124;28280:152;;28428:1;28425;28418:12;28280:152;28460:30;;28513:4;28545:21;;28579:33;28545:21;28579:33;:::i;:::-;28651:42;28638:56;28625:70;;28742:57;28782:16;;;28786:7;28742:57;:::i;:::-;28834:2;28829;28823:4;28819:13;28812:25;28864:69;28929:2;28923:4;28919:13;28905:12;28891;28864:69;:::i;:::-;28956:4;29008:16;;;28995:30;28980:13;;;;28973:53;;;;-1:-1:-1;;29111:12:283;;;;28850:83;-1:-1:-1;29076:15:283;;;;28152:1;28143:11;28110:1023;;;-1:-1:-1;29149:4:283;;27737:1422;-1:-1:-1;;;;;;;;27737:1422:283:o;29164:1666::-;29411:2;29400:9;29393:21;29374:4;29437:62;29495:2;29484:9;29480:18;29472:6;29464;29437:62;:::i;:::-;29547:9;29539:6;29535:22;29530:2;29519:9;29515:18;29508:50;29593:6;29580:20;29609:28;29631:5;29609:28;:::i;:::-;29668:13;29661:21;29646:37;;29741:2;29729:15;;;29716:29;29699:15;;;29692:54;29795:2;29783:15;;29770:29;29808:33;29770:29;29808:33;:::i;:::-;29887:42;29874:56;29869:2;29857:15;;29850:81;29974:57;30025:4;30013:17;;30017:6;29974:57;:::i;:::-;30066:4;30059;30051:6;30047:17;30040:31;30094:73;30161:4;30153:6;30149:17;30135:12;30121;30094:73;:::i;:::-;30080:87;;;30227:4;30219:6;30215:17;30202:31;30309:66;30300:6;30284:14;30280:27;30276:100;30256:18;30252:125;30242:153;;30391:1;30388;30381:12;30242:153;30419:31;;30531:2;30518:16;;;30473:21;30557:18;30546:30;;30543:50;;;30589:1;30586;30579:12;30543:50;30645:6;30642:1;30638:14;30622;30618:35;30609:7;30605:49;30602:69;;;30667:1;30664;30657:12;30602:69;30718:6;30710;30706:19;30699:4;30691:6;30687:17;30680:46;30743:81;30817:6;30809;30800:7;30743:81;:::i;:::-;30735:89;29164:1666;-1:-1:-1;;;;;;;;;29164:1666:283:o;31268:128::-;31308:3;31339:1;31335:6;31332:1;31329:13;31326:39;;;31345:18;;:::i;:::-;-1:-1:-1;31381:9:283;;31268:128::o;31824:1019::-;31931:4;31960:2;31989;31978:9;31971:21;32012:1;32045:6;32039:13;32075:36;32101:9;32075:36;:::i;:::-;32147:6;32142:2;32131:9;32127:18;32120:34;32173:2;32194:1;32226:2;32215:9;32211:18;32243:1;32238:216;;;;32468:1;32463:354;;;;32204:613;;32238:216;32301:66;32290:9;32286:82;32281:2;32270:9;32266:18;32259:110;32441:2;32429:6;32422:14;32415:22;32412:1;32408:30;32397:9;32393:46;32389:55;32382:62;;32238:216;;32463:354;32494:6;32491:1;32484:17;32542:2;32539:1;32529:16;32567:1;32581:180;32595:6;32592:1;32589:13;32581:180;;;32688:14;;32664:17;;;32660:26;;32653:50;32731:16;;;;32610:10;;32581:180;;;32785:17;;32781:26;;;-1:-1:-1;;32204:613:283;-1:-1:-1;32834:3:283;;31824:1019;-1:-1:-1;;;;;;;;31824:1019:283:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CALL(address,bytes,uint256)": "6e2d44ae",
    "DELEGATECALL(address,bytes)": "edee6239",
    "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": "e551cdaa",
    "drip(string)": "67148cd2",
    "drips(string)": "4d7fba6e",
    "executable(string)": "fc3e3eba",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "status(string,uint8)": "9bc94d01",
    "withdrawERC20(address,address)": "9456fbcc",
    "withdrawERC20(address,address,uint256)": "44004cc1",
    "withdrawERC721(address,address,uint256)": "4025feb2",
    "withdrawETH(address)": "690d8320",
    "withdrawETH(address,uint256)": "4782f779"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"nameref\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"reentrant\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"contract IDripCheck\",\"name\":\"dripcheck\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkparams\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Drippie.DripAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Drippie.DripConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"DripCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"nameref\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DripExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"nameref\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"DripStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"WithdrewERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewETH\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CALL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"DELEGATECALL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"reentrant\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"contract IDripCheck\",\"name\":\"dripcheck\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkparams\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Drippie.DripAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Drippie.DripConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"drips\",\"outputs\":[{\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"reentrant\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"contract IDripCheck\",\"name\":\"dripcheck\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkparams\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Drippie.DripAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Drippie.DripConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"last\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"executable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"params\":{\"config\":\"Config for the created drip.\",\"name\":\"Unindexed name parameter (unhashed).\",\"nameref\":\"Indexed name parameter (hashed).\"}},\"DripExecuted(string,string,address,uint256)\":{\"params\":{\"executor\":\"Address that executed the drip.\",\"name\":\"Unindexed name parameter (unhashed).\",\"nameref\":\"Indexed name parameter (hashed).\",\"timestamp\":\"Time when the drip was executed.\"}},\"DripStatusUpdated(string,string,uint8)\":{\"params\":{\"name\":\"Unindexed name parameter (unhashed).\",\"nameref\":\"Indexed name parameter (hashed).\",\"status\":\"New drip status.\"}}},\"kind\":\"dev\",\"methods\":{\"CALL(address,bytes,uint256)\":{\"params\":{\"_data\":\"Data to send with the call.\",\"_target\":\"Address to call.\",\"_value\":\"ETH value to send with the call.\"},\"returns\":{\"_0\":\"Boolean success value.\",\"_1\":\"Bytes data returned by the call.\"}},\"DELEGATECALL(address,bytes)\":{\"params\":{\"_data\":\"Data to send with the call.\",\"_target\":\"Address to call.\"},\"returns\":{\"_0\":\"Boolean success value.\",\"_1\":\"Bytes data returned by the call.\"}},\"constructor\":{\"params\":{\"_owner\":\"Initial contract owner.\"}},\"create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"params\":{\"_config\":\"Configuration for the drip.\",\"_name\":\"Name of the drip.\"}},\"drip(string)\":{\"params\":{\"_name\":\"Name of the drip to trigger.\"}},\"executable(string)\":{\"params\":{\"_name\":\"Drip to check.\"},\"returns\":{\"_0\":\"True if the drip is executable, reverts otherwise.\"}},\"status(string,uint8)\":{\"params\":{\"_name\":\"Name of the drip to update.\",\"_status\":\"New drip status.\"}},\"withdrawERC20(address,address)\":{\"params\":{\"_asset\":\"ERC20 token to withdraw.\",\"_to\":\"Address to receive the ERC20 balance.\"}},\"withdrawERC20(address,address,uint256)\":{\"params\":{\"_amount\":\"Amount of ERC20 to withdraw.\",\"_asset\":\"ERC20 token to withdraw.\",\"_to\":\"Address to receive the ERC20 balance.\"}},\"withdrawERC721(address,address,uint256)\":{\"params\":{\"_asset\":\"ERC721 token to withdraw.\",\"_id\":\"Token ID of the ERC721 token to withdraw.\",\"_to\":\"Address to receive the ERC721 token.\"}},\"withdrawETH(address)\":{\"params\":{\"_to\":\"Address to receive the ETH balance.\"}},\"withdrawETH(address,uint256)\":{\"params\":{\"_amount\":\"Amount of ETH to withdraw.\",\"_to\":\"Address to receive the ETH balance.\"}}},\"title\":\"Drippie\",\"version\":1},\"userdoc\":{\"events\":{\"DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"notice\":\"Emitted when a new drip is created.\"},\"DripExecuted(string,string,address,uint256)\":{\"notice\":\"Emitted when a drip is executed.\"},\"DripStatusUpdated(string,string,uint8)\":{\"notice\":\"Emitted when a drip status is updated.\"},\"ReceivedETH(address,uint256)\":{\"notice\":\"Emitted when ETH is received by this address.\"},\"WithdrewERC20(address,address,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are withdrawn from this address.\"},\"WithdrewERC721(address,address,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are withdrawn from this address.\"},\"WithdrewETH(address,address,uint256)\":{\"notice\":\"Emitted when ETH is withdrawn from this address.\"}},\"kind\":\"user\",\"methods\":{\"CALL(address,bytes,uint256)\":{\"notice\":\"Sends a CALL to a target address.\"},\"DELEGATECALL(address,bytes)\":{\"notice\":\"Sends a DELEGATECALL to a target address.\"},\"create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"notice\":\"Creates a new drip with the given name and configuration. Once created, drips cannot         be modified in any way (this is a security measure). If you want to update a drip,         simply pause (and potentially archive) the existing drip and create a new one.\"},\"drip(string)\":{\"notice\":\"Triggers a drip. This function is deliberately left as a public function because the         assumption being made here is that setting the drip to ACTIVE is an affirmative         signal that the drip should be executable according to the drip parameters, drip         check, and drip interval. Note that drip parameters are read entirely from the state         and are not supplied as user input, so there should not be any way for a         non-authorized user to influence the behavior of the drip. Note that the drip check         is executed only **once** at the beginning of the call to the drip function and will         not be executed again between the drip actions within this call.\"},\"drips(string)\":{\"notice\":\"Maps from drip names to drip states.\"},\"executable(string)\":{\"notice\":\"Checks if a given drip is executable.\"},\"status(string,uint8)\":{\"notice\":\"Sets the status for a given drip. The behavior of this function depends on the         status that the user is trying to set. A drip can always move between ACTIVE and         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back         to ACTIVE or PAUSED.\"},\"withdrawERC20(address,address)\":{\"notice\":\"Withdraws full ERC20 balance to the recipient.\"},\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Withdraws partial ERC20 balance to the recipient.\"},\"withdrawERC721(address,address,uint256)\":{\"notice\":\"Withdraws ERC721 token to the recipient.\"},\"withdrawETH(address)\":{\"notice\":\"Withdraws full ETH balance to the recipient.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Withdraws partial ETH balance to the recipient.\"}},\"notice\":\"Drippie is a system for managing automated contract interactions. A specific interaction         is called a \\\"drip\\\" and can be executed according to some condition (called a dripcheck)         and an execution interval. Drips cannot be executed faster than the execution interval.         Drips can trigger arbitrary contract calls where the calling contract is this contract         address. Drips can also send ETH value, which makes them ideal for keeping addresses         sufficiently funded with ETH. Drippie is designed to be connected with smart contract         automation services so that drips can be executed automatically. However, Drippie is         specifically designed to be separated from these services so that trust assumptions are         better compartmentalized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/drippie/Drippie.sol\":\"Drippie\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/periphery/AssetReceiver.sol\":{\"keccak256\":\"0x7e9bcbf8e23cb5f48e4eca605da6b7d96f88b9499e91a92cbf74d82e9e91cdf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e7759908d47619fb686ca97f92d0ed2c1bf06f559cf5e66dd3f488091108775\",\"dweb:/ipfs/QmPqXTMjBvy46kQkZVEBmK2kVuMivbjPsHETj7iHqJ7NGx\"]},\"contracts/periphery/Transactor.sol\":{\"keccak256\":\"0x6a9e687b2f333bcc8ade530325005cb67ab7f78fd31407d4f2274324e71fc0fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1abb18e6c60670b6a3dc34c52f7e1980b6a129a1cac9586e656e775457a8f429\",\"dweb:/ipfs/QmQJv8KDKvwsXyYLzyKF85eTYdSRFVWjmVCV8KVn99MTQV\"]},\"contracts/periphery/drippie/Drippie.sol\":{\"keccak256\":\"0x2aaa0f9f44bd9098df3a13899a98a762cac08bc76a27a36da7bc2d5b600897cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f270e01884939fa12c7d09abc8fbcc66529f589775a248369d2deb0178a86e8\",\"dweb:/ipfs/QmbE5YXXhsnCXc4qSFwu2fJeXsPiWBZCFDbFD8BgcmsKLN\"]},\"contracts/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0xb52c89360566b2963dfd82cb2cc23f0c3ce4503a69e8563878e8aa80b6c60b3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d1a67f456f8eb6219f4e85857714bed1c27ce934e5e81497b733646848b315c\",\"dweb:/ipfs/QmRFwsdm5ZCWP9b3S7YAz9TuCdgLzsNrAMpX5WckU3v7WG\"]},\"node_modules/@rari-capital/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x7e91c80b0dd1a14a19cb9e661b99924043adab6d9d893bbfcf3a6a3dc23a6743\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://515890d9fc87d6762dae2354a3a0714a26c652f0ea5bb631122be1968ef8c0e9\",\"dweb:/ipfs/QmTRpQ7uoAR1vCACKJm14Ba3oKVLqcA9reTwbHAPxawVpM\"]},\"node_modules/@rari-capital/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"node_modules/@rari-capital/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nameref",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "struct Drippie.DripConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "reentrant",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "interval",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IDripCheck",
                  "name": "dripcheck",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "checkparams",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Drippie.DripAction[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DripCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nameref",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DripExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nameref",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "status",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DripStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceivedETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewERC20",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewERC721",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "CALL",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "DELEGATECALL",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "struct Drippie.DripConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "reentrant",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "interval",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IDripCheck",
                  "name": "dripcheck",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "checkparams",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Drippie.DripAction[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drip"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "drips",
          "outputs": [
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "struct Drippie.DripConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "reentrant",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "interval",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IDripCheck",
                  "name": "dripcheck",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "checkparams",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Drippie.DripAction[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "last",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "executable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "_status",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "status"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC721",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "CALL(address,bytes,uint256)": {
            "params": {
              "_data": "Data to send with the call.",
              "_target": "Address to call.",
              "_value": "ETH value to send with the call."
            },
            "returns": {
              "_0": "Boolean success value.",
              "_1": "Bytes data returned by the call."
            }
          },
          "DELEGATECALL(address,bytes)": {
            "params": {
              "_data": "Data to send with the call.",
              "_target": "Address to call."
            },
            "returns": {
              "_0": "Boolean success value.",
              "_1": "Bytes data returned by the call."
            }
          },
          "constructor": {
            "params": {
              "_owner": "Initial contract owner."
            }
          },
          "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
            "params": {
              "_config": "Configuration for the drip.",
              "_name": "Name of the drip."
            }
          },
          "drip(string)": {
            "params": {
              "_name": "Name of the drip to trigger."
            }
          },
          "executable(string)": {
            "params": {
              "_name": "Drip to check."
            },
            "returns": {
              "_0": "True if the drip is executable, reverts otherwise."
            }
          },
          "status(string,uint8)": {
            "params": {
              "_name": "Name of the drip to update.",
              "_status": "New drip status."
            }
          },
          "withdrawERC20(address,address)": {
            "params": {
              "_asset": "ERC20 token to withdraw.",
              "_to": "Address to receive the ERC20 balance."
            }
          },
          "withdrawERC20(address,address,uint256)": {
            "params": {
              "_amount": "Amount of ERC20 to withdraw.",
              "_asset": "ERC20 token to withdraw.",
              "_to": "Address to receive the ERC20 balance."
            }
          },
          "withdrawERC721(address,address,uint256)": {
            "params": {
              "_asset": "ERC721 token to withdraw.",
              "_id": "Token ID of the ERC721 token to withdraw.",
              "_to": "Address to receive the ERC721 token."
            }
          },
          "withdrawETH(address)": {
            "params": {
              "_to": "Address to receive the ETH balance."
            }
          },
          "withdrawETH(address,uint256)": {
            "params": {
              "_amount": "Amount of ETH to withdraw.",
              "_to": "Address to receive the ETH balance."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CALL(address,bytes,uint256)": {
            "notice": "Sends a CALL to a target address."
          },
          "DELEGATECALL(address,bytes)": {
            "notice": "Sends a DELEGATECALL to a target address."
          },
          "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
            "notice": "Creates a new drip with the given name and configuration. Once created, drips cannot         be modified in any way (this is a security measure). If you want to update a drip,         simply pause (and potentially archive) the existing drip and create a new one."
          },
          "drip(string)": {
            "notice": "Triggers a drip. This function is deliberately left as a public function because the         assumption being made here is that setting the drip to ACTIVE is an affirmative         signal that the drip should be executable according to the drip parameters, drip         check, and drip interval. Note that drip parameters are read entirely from the state         and are not supplied as user input, so there should not be any way for a         non-authorized user to influence the behavior of the drip. Note that the drip check         is executed only **once** at the beginning of the call to the drip function and will         not be executed again between the drip actions within this call."
          },
          "drips(string)": {
            "notice": "Maps from drip names to drip states."
          },
          "executable(string)": {
            "notice": "Checks if a given drip is executable."
          },
          "status(string,uint8)": {
            "notice": "Sets the status for a given drip. The behavior of this function depends on the         status that the user is trying to set. A drip can always move between ACTIVE and         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back         to ACTIVE or PAUSED."
          },
          "withdrawERC20(address,address)": {
            "notice": "Withdraws full ERC20 balance to the recipient."
          },
          "withdrawERC20(address,address,uint256)": {
            "notice": "Withdraws partial ERC20 balance to the recipient."
          },
          "withdrawERC721(address,address,uint256)": {
            "notice": "Withdraws ERC721 token to the recipient."
          },
          "withdrawETH(address)": {
            "notice": "Withdraws full ETH balance to the recipient."
          },
          "withdrawETH(address,uint256)": {
            "notice": "Withdraws partial ETH balance to the recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/periphery/drippie/Drippie.sol": "Drippie"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/periphery/AssetReceiver.sol": {
        "keccak256": "0x7e9bcbf8e23cb5f48e4eca605da6b7d96f88b9499e91a92cbf74d82e9e91cdf1",
        "urls": [
          "bzz-raw://7e7759908d47619fb686ca97f92d0ed2c1bf06f559cf5e66dd3f488091108775",
          "dweb:/ipfs/QmPqXTMjBvy46kQkZVEBmK2kVuMivbjPsHETj7iHqJ7NGx"
        ],
        "license": "MIT"
      },
      "contracts/periphery/Transactor.sol": {
        "keccak256": "0x6a9e687b2f333bcc8ade530325005cb67ab7f78fd31407d4f2274324e71fc0fb",
        "urls": [
          "bzz-raw://1abb18e6c60670b6a3dc34c52f7e1980b6a129a1cac9586e656e775457a8f429",
          "dweb:/ipfs/QmQJv8KDKvwsXyYLzyKF85eTYdSRFVWjmVCV8KVn99MTQV"
        ],
        "license": "MIT"
      },
      "contracts/periphery/drippie/Drippie.sol": {
        "keccak256": "0x2aaa0f9f44bd9098df3a13899a98a762cac08bc76a27a36da7bc2d5b600897cb",
        "urls": [
          "bzz-raw://1f270e01884939fa12c7d09abc8fbcc66529f589775a248369d2deb0178a86e8",
          "dweb:/ipfs/QmbE5YXXhsnCXc4qSFwu2fJeXsPiWBZCFDbFD8BgcmsKLN"
        ],
        "license": "MIT"
      },
      "contracts/periphery/drippie/IDripCheck.sol": {
        "keccak256": "0xb52c89360566b2963dfd82cb2cc23f0c3ce4503a69e8563878e8aa80b6c60b3f",
        "urls": [
          "bzz-raw://2d1a67f456f8eb6219f4e85857714bed1c27ce934e5e81497b733646848b315c",
          "dweb:/ipfs/QmRFwsdm5ZCWP9b3S7YAz9TuCdgLzsNrAMpX5WckU3v7WG"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/auth/Owned.sol": {
        "keccak256": "0x7e91c80b0dd1a14a19cb9e661b99924043adab6d9d893bbfcf3a6a3dc23a6743",
        "urls": [
          "bzz-raw://515890d9fc87d6762dae2354a3a0714a26c652f0ea5bb631122be1968ef8c0e9",
          "dweb:/ipfs/QmTRpQ7uoAR1vCACKJm14Ba3oKVLqcA9reTwbHAPxawVpM"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@rari-capital/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 112994,
        "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 45661,
        "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
        "label": "drips",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(DripState)45624_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(DripAction)45599_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct Drippie.DripAction[]",
        "numberOfBytes": "32",
        "base": "t_struct(DripAction)45599_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IDripCheck)46024": {
        "encoding": "inplace",
        "label": "contract IDripCheck",
        "numberOfBytes": "20"
      },
      "t_enum(DripStatus)45592": {
        "encoding": "inplace",
        "label": "enum Drippie.DripStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(DripState)45624_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Drippie.DripState)",
        "numberOfBytes": "32",
        "value": "t_struct(DripState)45624_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DripAction)45599_storage": {
        "encoding": "inplace",
        "label": "struct Drippie.DripAction",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 45594,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "target",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 45596,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "data",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 45598,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "value",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(DripConfig)45613_storage": {
        "encoding": "inplace",
        "label": "struct Drippie.DripConfig",
        "numberOfBytes": "160",
        "members": [
          {
            "astId": 45601,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "reentrant",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 45603,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "interval",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 45606,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "dripcheck",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDripCheck)46024"
          },
          {
            "astId": 45608,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "checkparams",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes_storage"
          },
          {
            "astId": 45612,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "actions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_struct(DripAction)45599_storage)dyn_storage"
          }
        ]
      },
      "t_struct(DripState)45624_storage": {
        "encoding": "inplace",
        "label": "struct Drippie.DripState",
        "numberOfBytes": "256",
        "members": [
          {
            "astId": 45616,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(DripStatus)45592"
          },
          {
            "astId": 45619,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "config",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(DripConfig)45613_storage"
          },
          {
            "astId": 45621,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "last",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 45623,
            "contract": "contracts/periphery/drippie/Drippie.sol:Drippie",
            "label": "count",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "CALL(address,bytes,uint256)": {
        "notice": "Sends a CALL to a target address."
      },
      "DELEGATECALL(address,bytes)": {
        "notice": "Sends a DELEGATECALL to a target address."
      },
      "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "notice": "Creates a new drip with the given name and configuration. Once created, drips cannot         be modified in any way (this is a security measure). If you want to update a drip,         simply pause (and potentially archive) the existing drip and create a new one."
      },
      "drip(string)": {
        "notice": "Triggers a drip. This function is deliberately left as a public function because the         assumption being made here is that setting the drip to ACTIVE is an affirmative         signal that the drip should be executable according to the drip parameters, drip         check, and drip interval. Note that drip parameters are read entirely from the state         and are not supplied as user input, so there should not be any way for a         non-authorized user to influence the behavior of the drip. Note that the drip check         is executed only **once** at the beginning of the call to the drip function and will         not be executed again between the drip actions within this call."
      },
      "drips(string)": {
        "notice": "Maps from drip names to drip states."
      },
      "executable(string)": {
        "notice": "Checks if a given drip is executable."
      },
      "status(string,uint8)": {
        "notice": "Sets the status for a given drip. The behavior of this function depends on the         status that the user is trying to set. A drip can always move between ACTIVE and         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back         to ACTIVE or PAUSED."
      },
      "withdrawERC20(address,address)": {
        "notice": "Withdraws full ERC20 balance to the recipient."
      },
      "withdrawERC20(address,address,uint256)": {
        "notice": "Withdraws partial ERC20 balance to the recipient."
      },
      "withdrawERC721(address,address,uint256)": {
        "notice": "Withdraws ERC721 token to the recipient."
      },
      "withdrawETH(address)": {
        "notice": "Withdraws full ETH balance to the recipient."
      },
      "withdrawETH(address,uint256)": {
        "notice": "Withdraws partial ETH balance to the recipient."
      }
    },
    "events": {
      "DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "notice": "Emitted when a new drip is created."
      },
      "DripExecuted(string,string,address,uint256)": {
        "notice": "Emitted when a drip is executed."
      },
      "DripStatusUpdated(string,string,uint8)": {
        "notice": "Emitted when a drip status is updated."
      },
      "ReceivedETH(address,uint256)": {
        "notice": "Emitted when ETH is received by this address."
      },
      "WithdrewERC20(address,address,address,uint256)": {
        "notice": "Emitted when ERC20 tokens are withdrawn from this address."
      },
      "WithdrewERC721(address,address,address,uint256)": {
        "notice": "Emitted when ERC20 tokens are withdrawn from this address."
      },
      "WithdrewETH(address,address,uint256)": {
        "notice": "Emitted when ETH is withdrawn from this address."
      }
    },
    "notice": "Drippie is a system for managing automated contract interactions. A specific interaction         is called a \"drip\" and can be executed according to some condition (called a dripcheck)         and an execution interval. Drips cannot be executed faster than the execution interval.         Drips can trigger arbitrary contract calls where the calling contract is this contract         address. Drips can also send ETH value, which makes them ideal for keeping addresses         sufficiently funded with ETH. Drippie is designed to be connected with smart contract         automation services so that drips can be executed automatically. However, Drippie is         specifically designed to be separated from these services so that trust assumptions are         better compartmentalized."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "CALL(address,bytes,uint256)": {
        "params": {
          "_data": "Data to send with the call.",
          "_target": "Address to call.",
          "_value": "ETH value to send with the call."
        },
        "returns": {
          "_0": "Boolean success value.",
          "_1": "Bytes data returned by the call."
        }
      },
      "DELEGATECALL(address,bytes)": {
        "params": {
          "_data": "Data to send with the call.",
          "_target": "Address to call."
        },
        "returns": {
          "_0": "Boolean success value.",
          "_1": "Bytes data returned by the call."
        }
      },
      "constructor": {
        "params": {
          "_owner": "Initial contract owner."
        }
      },
      "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "params": {
          "_config": "Configuration for the drip.",
          "_name": "Name of the drip."
        }
      },
      "drip(string)": {
        "params": {
          "_name": "Name of the drip to trigger."
        }
      },
      "executable(string)": {
        "params": {
          "_name": "Drip to check."
        },
        "returns": {
          "_0": "True if the drip is executable, reverts otherwise."
        }
      },
      "status(string,uint8)": {
        "params": {
          "_name": "Name of the drip to update.",
          "_status": "New drip status."
        }
      },
      "withdrawERC20(address,address)": {
        "params": {
          "_asset": "ERC20 token to withdraw.",
          "_to": "Address to receive the ERC20 balance."
        }
      },
      "withdrawERC20(address,address,uint256)": {
        "params": {
          "_amount": "Amount of ERC20 to withdraw.",
          "_asset": "ERC20 token to withdraw.",
          "_to": "Address to receive the ERC20 balance."
        }
      },
      "withdrawERC721(address,address,uint256)": {
        "params": {
          "_asset": "ERC721 token to withdraw.",
          "_id": "Token ID of the ERC721 token to withdraw.",
          "_to": "Address to receive the ERC721 token."
        }
      },
      "withdrawETH(address)": {
        "params": {
          "_to": "Address to receive the ETH balance."
        }
      },
      "withdrawETH(address,uint256)": {
        "params": {
          "_amount": "Amount of ETH to withdraw.",
          "_to": "Address to receive the ETH balance."
        }
      }
    },
    "events": {
      "DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "params": {
          "config": "Config for the created drip.",
          "name": "Unindexed name parameter (unhashed).",
          "nameref": "Indexed name parameter (hashed)."
        }
      },
      "DripExecuted(string,string,address,uint256)": {
        "params": {
          "executor": "Address that executed the drip.",
          "name": "Unindexed name parameter (unhashed).",
          "nameref": "Indexed name parameter (hashed).",
          "timestamp": "Time when the drip was executed."
        }
      },
      "DripStatusUpdated(string,string,uint8)": {
        "params": {
          "name": "Unindexed name parameter (unhashed).",
          "nameref": "Indexed name parameter (hashed).",
          "status": "New drip status."
        }
      }
    },
    "title": "Drippie"
  },
  "ast": {
    "absolutePath": "contracts/periphery/drippie/Drippie.sol",
    "id": 46014,
    "exportedSymbols": {
      "AssetReceiver": [
        45383
      ],
      "Drippie": [
        46013
      ],
      "IDripCheck": [
        46024
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:14082:109",
    "nodes": [
      {
        "id": 45580,
        "nodeType": "PragmaDirective",
        "src": "32:23:109",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 45582,
        "nodeType": "ImportDirective",
        "src": "57:53:109",
        "nodes": [],
        "absolutePath": "contracts/periphery/AssetReceiver.sol",
        "file": "../AssetReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46014,
        "sourceUnit": 45384,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45581,
              "name": "AssetReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45383,
              "src": "66:13:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45584,
        "nodeType": "ImportDirective",
        "src": "111:46:109",
        "nodes": [],
        "absolutePath": "contracts/periphery/drippie/IDripCheck.sol",
        "file": "./IDripCheck.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46014,
        "sourceUnit": 46025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 45583,
              "name": "IDripCheck",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46024,
              "src": "120:10:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46013,
        "nodeType": "ContractDefinition",
        "src": "1006:13107:109",
        "nodes": [
          {
            "id": 45592,
            "nodeType": "EnumDefinition",
            "src": "1442:86:109",
            "nodes": [],
            "canonicalName": "Drippie.DripStatus",
            "members": [
              {
                "id": 45588,
                "name": "NONE",
                "nameLocation": "1468:4:109",
                "nodeType": "EnumValue",
                "src": "1468:4:109"
              },
              {
                "id": 45589,
                "name": "PAUSED",
                "nameLocation": "1482:6:109",
                "nodeType": "EnumValue",
                "src": "1482:6:109"
              },
              {
                "id": 45590,
                "name": "ACTIVE",
                "nameLocation": "1498:6:109",
                "nodeType": "EnumValue",
                "src": "1498:6:109"
              },
              {
                "id": 45591,
                "name": "ARCHIVED",
                "nameLocation": "1514:8:109",
                "nodeType": "EnumValue",
                "src": "1514:8:109"
              }
            ],
            "name": "DripStatus",
            "nameLocation": "1447:10:109"
          },
          {
            "id": 45599,
            "nodeType": "StructDefinition",
            "src": "1591:100:109",
            "nodes": [],
            "canonicalName": "Drippie.DripAction",
            "members": [
              {
                "constant": false,
                "id": 45594,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "1635:6:109",
                "nodeType": "VariableDeclaration",
                "scope": 45599,
                "src": "1619:22:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 45593,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1619:15:109",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45596,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1657:4:109",
                "nodeType": "VariableDeclaration",
                "scope": 45599,
                "src": "1651:10:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 45595,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1651:5:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45598,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1679:5:109",
                "nodeType": "VariableDeclaration",
                "scope": 45599,
                "src": "1671:13:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45597,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1671:7:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripAction",
            "nameLocation": "1598:10:109",
            "scope": 46013,
            "visibility": "public"
          },
          {
            "id": 45613,
            "nodeType": "StructDefinition",
            "src": "1775:162:109",
            "nodes": [],
            "canonicalName": "Drippie.DripConfig",
            "members": [
              {
                "constant": false,
                "id": 45601,
                "mutability": "mutable",
                "name": "reentrant",
                "nameLocation": "1808:9:109",
                "nodeType": "VariableDeclaration",
                "scope": 45613,
                "src": "1803:14:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 45600,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1803:4:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45603,
                "mutability": "mutable",
                "name": "interval",
                "nameLocation": "1835:8:109",
                "nodeType": "VariableDeclaration",
                "scope": 45613,
                "src": "1827:16:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45602,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1827:7:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45606,
                "mutability": "mutable",
                "name": "dripcheck",
                "nameLocation": "1864:9:109",
                "nodeType": "VariableDeclaration",
                "scope": 45613,
                "src": "1853:20:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IDripCheck_$46024",
                  "typeString": "contract IDripCheck"
                },
                "typeName": {
                  "id": 45605,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45604,
                    "name": "IDripCheck",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46024,
                    "src": "1853:10:109"
                  },
                  "referencedDeclaration": 46024,
                  "src": "1853:10:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDripCheck_$46024",
                    "typeString": "contract IDripCheck"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45608,
                "mutability": "mutable",
                "name": "checkparams",
                "nameLocation": "1889:11:109",
                "nodeType": "VariableDeclaration",
                "scope": 45613,
                "src": "1883:17:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 45607,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1883:5:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45612,
                "mutability": "mutable",
                "name": "actions",
                "nameLocation": "1923:7:109",
                "nodeType": "VariableDeclaration",
                "scope": 45613,
                "src": "1910:20:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage_ptr",
                  "typeString": "struct Drippie.DripAction[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 45610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45609,
                      "name": "DripAction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45599,
                      "src": "1910:10:109"
                    },
                    "referencedDeclaration": 45599,
                    "src": "1910:10:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripAction_$45599_storage_ptr",
                      "typeString": "struct Drippie.DripAction"
                    }
                  },
                  "id": 45611,
                  "nodeType": "ArrayTypeName",
                  "src": "1910:12:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage_ptr",
                    "typeString": "struct Drippie.DripAction[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripConfig",
            "nameLocation": "1782:10:109",
            "scope": 46013,
            "visibility": "public"
          },
          {
            "id": 45624,
            "nodeType": "StructDefinition",
            "src": "2014:123:109",
            "nodes": [],
            "canonicalName": "Drippie.DripState",
            "members": [
              {
                "constant": false,
                "id": 45616,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "2052:6:109",
                "nodeType": "VariableDeclaration",
                "scope": 45624,
                "src": "2041:17:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DripStatus_$45592",
                  "typeString": "enum Drippie.DripStatus"
                },
                "typeName": {
                  "id": 45615,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45614,
                    "name": "DripStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45592,
                    "src": "2041:10:109"
                  },
                  "referencedDeclaration": 45592,
                  "src": "2041:10:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$45592",
                    "typeString": "enum Drippie.DripStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45619,
                "mutability": "mutable",
                "name": "config",
                "nameLocation": "2079:6:109",
                "nodeType": "VariableDeclaration",
                "scope": 45624,
                "src": "2068:17:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DripConfig_$45613_storage_ptr",
                  "typeString": "struct Drippie.DripConfig"
                },
                "typeName": {
                  "id": 45618,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 45617,
                    "name": "DripConfig",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 45613,
                    "src": "2068:10:109"
                  },
                  "referencedDeclaration": 45613,
                  "src": "2068:10:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripConfig_$45613_storage_ptr",
                    "typeString": "struct Drippie.DripConfig"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45621,
                "mutability": "mutable",
                "name": "last",
                "nameLocation": "2103:4:109",
                "nodeType": "VariableDeclaration",
                "scope": 45624,
                "src": "2095:12:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45620,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2095:7:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45623,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "2125:5:109",
                "nodeType": "VariableDeclaration",
                "scope": 45624,
                "src": "2117:13:109",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45622,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2117:7:109",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripState",
            "nameLocation": "2021:9:109",
            "scope": 46013,
            "visibility": "public"
          },
          {
            "id": 45634,
            "nodeType": "EventDefinition",
            "src": "2382:166:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 45625,
              "nodeType": "StructuredDocumentation",
              "src": "2143:234:109",
              "text": " @notice Emitted when a new drip is created.\n @param nameref Indexed name parameter (hashed).\n @param name    Unindexed name parameter (unhashed).\n @param config  Config for the created drip."
            },
            "eventSelector": "e38d8d98e6cc66f6f520d483c6c5a89289681f897799c4c29d767cf57e76d9a6",
            "name": "DripCreated",
            "nameLocation": "2388:11:109",
            "parameters": {
              "id": 45633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45627,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nameref",
                  "nameLocation": "2486:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45634,
                  "src": "2471:22:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45626,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45629,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2510:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45634,
                  "src": "2503:11:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2503:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45632,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "2535:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45634,
                  "src": "2524:17:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripConfig_$45613_memory_ptr",
                    "typeString": "struct Drippie.DripConfig"
                  },
                  "typeName": {
                    "id": 45631,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45630,
                      "name": "DripConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45613,
                      "src": "2524:10:109"
                    },
                    "referencedDeclaration": 45613,
                    "src": "2524:10:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripConfig_$45613_storage_ptr",
                      "typeString": "struct Drippie.DripConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2399:148:109"
            }
          },
          {
            "id": 45644,
            "nodeType": "EventDefinition",
            "src": "2784:172:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 45635,
              "nodeType": "StructuredDocumentation",
              "src": "2554:225:109",
              "text": " @notice Emitted when a drip status is updated.\n @param nameref Indexed name parameter (hashed).\n @param name    Unindexed name parameter (unhashed).\n @param status  New drip status."
            },
            "eventSelector": "407cb3ad05e60ec498fb39417c7a4f6b82d5ba80f82fe512a37b02c93181a2a1",
            "name": "DripStatusUpdated",
            "nameLocation": "2790:17:109",
            "parameters": {
              "id": 45643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45637,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nameref",
                  "nameLocation": "2894:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45644,
                  "src": "2879:22:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45639,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2918:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45644,
                  "src": "2911:11:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2911:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45642,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2943:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45644,
                  "src": "2932:17:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$45592",
                    "typeString": "enum Drippie.DripStatus"
                  },
                  "typeName": {
                    "id": 45641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45640,
                      "name": "DripStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45592,
                      "src": "2932:10:109"
                    },
                    "referencedDeclaration": 45592,
                    "src": "2932:10:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$45592",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2807:148:109"
            }
          },
          {
            "id": 45655,
            "nodeType": "EventDefinition",
            "src": "3264:193:109",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 45645,
              "nodeType": "StructuredDocumentation",
              "src": "2962:297:109",
              "text": " @notice Emitted when a drip is executed.\n @param nameref   Indexed name parameter (hashed).\n @param name      Unindexed name parameter (unhashed).\n @param executor  Address that executed the drip.\n @param timestamp Time when the drip was executed."
            },
            "eventSelector": "ea21435419aad9c54a9d90e2522b6f60bd566401f36fcef661f5f5a28cc0d2c6",
            "name": "DripExecuted",
            "nameLocation": "3270:12:109",
            "parameters": {
              "id": 45654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45647,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nameref",
                  "nameLocation": "3369:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45655,
                  "src": "3354:22:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3354:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45649,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "3393:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45655,
                  "src": "3386:11:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3386:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45651,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "executor",
                  "nameLocation": "3415:8:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45655,
                  "src": "3407:16:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3407:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3441:9:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45655,
                  "src": "3433:17:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3282:174:109"
            }
          },
          {
            "id": 45661,
            "nodeType": "VariableDeclaration",
            "src": "3531:41:109",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 45656,
              "nodeType": "StructuredDocumentation",
              "src": "3463:63:109",
              "text": " @notice Maps from drip names to drip states."
            },
            "functionSelector": "4d7fba6e",
            "mutability": "mutable",
            "name": "drips",
            "nameLocation": "3567:5:109",
            "scope": 46013,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
              "typeString": "mapping(string => struct Drippie.DripState)"
            },
            "typeName": {
              "id": 45660,
              "keyType": {
                "id": 45657,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3539:6:109",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3531:28:109",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                "typeString": "mapping(string => struct Drippie.DripState)"
              },
              "valueType": {
                "id": 45659,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 45658,
                  "name": "DripState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45624,
                  "src": "3549:9:109"
                },
                "referencedDeclaration": 45624,
                "src": "3549:9:109",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                  "typeString": "struct Drippie.DripState"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 45671,
            "nodeType": "FunctionDefinition",
            "src": "3640:52:109",
            "nodes": [],
            "body": {
              "id": 45670,
              "nodeType": "Block",
              "src": "3690:2:109",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 45662,
              "nodeType": "StructuredDocumentation",
              "src": "3579:56:109",
              "text": " @param _owner Initial contract owner."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 45667,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45664,
                    "src": "3682:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 45668,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 45666,
                  "name": "AssetReceiver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45383,
                  "src": "3668:13:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "3668:21:109"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45664,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3660:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45671,
                  "src": "3652:14:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3651:16:109"
            },
            "returnParameters": {
              "id": 45669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3690:0:109"
            },
            "scope": 46013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45798,
            "nodeType": "FunctionDefinition",
            "src": "4103:1816:109",
            "nodes": [],
            "body": {
              "id": 45797,
              "nodeType": "Block",
              "src": "4190:1729:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 45689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 45683,
                              "name": "drips",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45661,
                              "src": "4456:5:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                                "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                              }
                            },
                            "id": 45685,
                            "indexExpression": {
                              "id": 45684,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45674,
                              "src": "4462:5:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4456:12:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripState_$45624_storage",
                              "typeString": "struct Drippie.DripState storage ref"
                            }
                          },
                          "id": 45686,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45616,
                          "src": "4456:19:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 45687,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "4479:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 45688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45588,
                          "src": "4479:15:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "4456:38:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020776974682074686174206e616d6520616c726561647920657869737473",
                        "id": 45690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4508:45:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9ea697668bb2e4b33154cf5e088c1417030b11b156bfb0fc27419f090c00fd",
                          "typeString": "literal_string \"Drippie: drip with that name already exists\""
                        },
                        "value": "Drippie: drip with that name already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9ea697668bb2e4b33154cf5e088c1417030b11b156bfb0fc27419f090c00fd",
                          "typeString": "literal_string \"Drippie: drip with that name already exists\""
                        }
                      ],
                      "id": 45682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4435:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4435:128:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45692,
                  "nodeType": "ExpressionStatement",
                  "src": "4435:128:109"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 45693,
                      "name": "_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45677,
                      "src": "4849:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                        "typeString": "struct Drippie.DripConfig calldata"
                      }
                    },
                    "id": 45694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "reentrant",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 45601,
                    "src": "4849:17:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 45712,
                    "nodeType": "Block",
                    "src": "5041:172:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 45705,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45677,
                                  "src": "5080:7:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                                    "typeString": "struct Drippie.DripConfig calldata"
                                  }
                                },
                                "id": 45706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "interval",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45603,
                                "src": "5080:16:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 45707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5099:1:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5080:20:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a20696e74657276616c206d7573742062652067726561746572207468616e207a65726f2069662064726970206973206e6f74207265656e7472616e74",
                              "id": 45709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5118:70:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2eac6d472c5cd672e7a525975cd0d9b953ab4be20dd15046548bc9968edcdfad",
                                "typeString": "literal_string \"Drippie: interval must be greater than zero if drip is not reentrant\""
                              },
                              "value": "Drippie: interval must be greater than zero if drip is not reentrant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2eac6d472c5cd672e7a525975cd0d9b953ab4be20dd15046548bc9968edcdfad",
                                "typeString": "literal_string \"Drippie: interval must be greater than zero if drip is not reentrant\""
                              }
                            ],
                            "id": 45704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5055:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5055:147:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45711,
                        "nodeType": "ExpressionStatement",
                        "src": "5055:147:109"
                      }
                    ]
                  },
                  "id": 45713,
                  "nodeType": "IfStatement",
                  "src": "4845:368:109",
                  "trueBody": {
                    "id": 45703,
                    "nodeType": "Block",
                    "src": "4868:167:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 45696,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45677,
                                  "src": "4907:7:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                                    "typeString": "struct Drippie.DripConfig calldata"
                                  }
                                },
                                "id": 45697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "interval",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45603,
                                "src": "4907:16:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 45698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4927:1:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4907:21:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a20696620616c6c6f77696e67207265656e7472616e7420647269702c206d7573742073657420696e74657276616c20746f207a65726f",
                              "id": 45700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4946:64:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91015eeb17423ff7e8a078d19f29fcb28e06be97a9852aae88e68e69f4d04c70",
                                "typeString": "literal_string \"Drippie: if allowing reentrant drip, must set interval to zero\""
                              },
                              "value": "Drippie: if allowing reentrant drip, must set interval to zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91015eeb17423ff7e8a078d19f29fcb28e06be97a9852aae88e68e69f4d04c70",
                                "typeString": "literal_string \"Drippie: if allowing reentrant drip, must set interval to zero\""
                              }
                            ],
                            "id": 45695,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4882:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4882:142:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45702,
                        "nodeType": "ExpressionStatement",
                        "src": "4882:142:109"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    45716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45716,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "5335:5:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 45797,
                      "src": "5317:23:109",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                        "typeString": "struct Drippie.DripState"
                      },
                      "typeName": {
                        "id": 45715,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45714,
                          "name": "DripState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45624,
                          "src": "5317:9:109"
                        },
                        "referencedDeclaration": 45624,
                        "src": "5317:9:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                          "typeString": "struct Drippie.DripState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45720,
                  "initialValue": {
                    "baseExpression": {
                      "id": 45717,
                      "name": "drips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45661,
                      "src": "5343:5:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                        "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                      }
                    },
                    "id": 45719,
                    "indexExpression": {
                      "id": 45718,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45674,
                      "src": "5349:5:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5343:12:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripState_$45624_storage",
                      "typeString": "struct Drippie.DripState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5317:38:109"
                },
                {
                  "expression": {
                    "id": 45726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45721,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45716,
                        "src": "5365:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                          "typeString": "struct Drippie.DripState storage pointer"
                        }
                      },
                      "id": 45723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45616,
                      "src": "5365:12:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45724,
                        "name": "DripStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45592,
                        "src": "5380:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                          "typeString": "type(enum Drippie.DripStatus)"
                        }
                      },
                      "id": 45725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PAUSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45589,
                      "src": "5380:17:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "src": "5365:32:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$45592",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "id": 45727,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:32:109"
                },
                {
                  "expression": {
                    "id": 45735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 45728,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45716,
                          "src": "5407:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 45731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45619,
                        "src": "5407:12:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 45732,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reentrant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45601,
                      "src": "5407:22:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45733,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "5432:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 45734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reentrant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45601,
                      "src": "5432:17:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5407:42:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45736,
                  "nodeType": "ExpressionStatement",
                  "src": "5407:42:109"
                },
                {
                  "expression": {
                    "id": 45744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 45737,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45716,
                          "src": "5459:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 45740,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45619,
                        "src": "5459:12:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 45741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "interval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45603,
                      "src": "5459:21:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45742,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "5483:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 45743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "interval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45603,
                      "src": "5483:16:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5459:40:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45745,
                  "nodeType": "ExpressionStatement",
                  "src": "5459:40:109"
                },
                {
                  "expression": {
                    "id": 45753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 45746,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45716,
                          "src": "5509:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 45749,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45619,
                        "src": "5509:12:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 45750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dripcheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45606,
                      "src": "5509:22:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDripCheck_$46024",
                        "typeString": "contract IDripCheck"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45751,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "5534:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 45752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dripcheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45606,
                      "src": "5534:17:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDripCheck_$46024",
                        "typeString": "contract IDripCheck"
                      }
                    },
                    "src": "5509:42:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDripCheck_$46024",
                      "typeString": "contract IDripCheck"
                    }
                  },
                  "id": 45754,
                  "nodeType": "ExpressionStatement",
                  "src": "5509:42:109"
                },
                {
                  "expression": {
                    "id": 45762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 45755,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45716,
                          "src": "5561:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 45758,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45619,
                        "src": "5561:12:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 45759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "checkparams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45608,
                      "src": "5561:24:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45760,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "5588:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 45761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkparams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45608,
                      "src": "5588:19:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "5561:46:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 45763,
                  "nodeType": "ExpressionStatement",
                  "src": "5561:46:109"
                },
                {
                  "body": {
                    "id": 45789,
                    "nodeType": "Block",
                    "src": "5766:70:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 45783,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45677,
                                  "src": "5806:7:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                                    "typeString": "struct Drippie.DripConfig calldata"
                                  }
                                },
                                "id": 45784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "actions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45612,
                                "src": "5806:15:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct Drippie.DripAction calldata[] calldata"
                                }
                              },
                              "id": 45786,
                              "indexExpression": {
                                "id": 45785,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45765,
                                "src": "5822:1:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5806:18:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripAction_$45599_calldata_ptr",
                                "typeString": "struct Drippie.DripAction calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_DripAction_$45599_calldata_ptr",
                                "typeString": "struct Drippie.DripAction calldata"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 45776,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45716,
                                  "src": "5780:5:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                                    "typeString": "struct Drippie.DripState storage pointer"
                                  }
                                },
                                "id": 45780,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "config",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45619,
                                "src": "5780:12:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                                  "typeString": "struct Drippie.DripConfig storage ref"
                                }
                              },
                              "id": 45781,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "actions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45612,
                              "src": "5780:20:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage",
                                "typeString": "struct Drippie.DripAction storage ref[] storage ref"
                              }
                            },
                            "id": 45782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5780:25:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage_ptr_$_t_struct$_DripAction_$45599_storage_$returns$__$bound_to$_t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Drippie.DripAction storage ref[] storage pointer,struct Drippie.DripAction storage ref)"
                            }
                          },
                          "id": 45787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5780:45:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45788,
                        "nodeType": "ExpressionStatement",
                        "src": "5780:45:109"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45768,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45765,
                      "src": "5733:1:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 45769,
                          "name": "_config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45677,
                          "src": "5737:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                            "typeString": "struct Drippie.DripConfig calldata"
                          }
                        },
                        "id": 45770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "actions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45612,
                        "src": "5737:15:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Drippie.DripAction calldata[] calldata"
                        }
                      },
                      "id": 45771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5737:22:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5733:26:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45790,
                  "initializationExpression": {
                    "assignments": [
                      45765
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45765,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5726:1:109",
                        "nodeType": "VariableDeclaration",
                        "scope": 45790,
                        "src": "5718:9:109",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45764,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5718:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45767,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 45766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5730:1:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5718:13:109"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5761:3:109",
                      "subExpression": {
                        "id": 45773,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45765,
                        "src": "5761:1:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45775,
                    "nodeType": "ExpressionStatement",
                    "src": "5761:3:109"
                  },
                  "nodeType": "ForStatement",
                  "src": "5713:123:109"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45792,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45674,
                        "src": "5890:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 45793,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45674,
                        "src": "5897:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 45794,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45677,
                        "src": "5904:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      ],
                      "id": 45791,
                      "name": "DripCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45634,
                      "src": "5878:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_struct$_DripConfig_$45613_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,struct Drippie.DripConfig memory)"
                      }
                    },
                    "id": 45795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5878:34:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45796,
                  "nodeType": "EmitStatement",
                  "src": "5873:39:109"
                }
              ]
            },
            "documentation": {
              "id": 45672,
              "nodeType": "StructuredDocumentation",
              "src": "3698:400:109",
              "text": " @notice Creates a new drip with the given name and configuration. Once created, drips cannot\n         be modified in any way (this is a security measure). If you want to update a drip,\n         simply pause (and potentially archive) the existing drip and create a new one.\n @param _name   Name of the drip.\n @param _config Configuration for the drip."
            },
            "functionSelector": "e551cdaa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45680,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45679,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113006,
                  "src": "4180:9:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "4180:9:109"
              }
            ],
            "name": "create",
            "nameLocation": "4112:6:109",
            "parameters": {
              "id": 45678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45674,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4135:5:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45798,
                  "src": "4119:21:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45677,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "4162:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45798,
                  "src": "4142:27:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripConfig_$45613_calldata_ptr",
                    "typeString": "struct Drippie.DripConfig"
                  },
                  "typeName": {
                    "id": 45676,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45675,
                      "name": "DripConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45613,
                      "src": "4142:10:109"
                    },
                    "referencedDeclaration": 45613,
                    "src": "4142:10:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripConfig_$45613_storage_ptr",
                      "typeString": "struct Drippie.DripConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4118:52:109"
            },
            "returnParameters": {
              "id": 45681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4190:0:109"
            },
            "scope": 46013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45876,
            "nodeType": "FunctionDefinition",
            "src": "6363:2206:109",
            "nodes": [],
            "body": {
              "id": 45875,
              "nodeType": "Block",
              "src": "6441:2128:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 45813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45810,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45804,
                          "src": "6650:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 45811,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "6661:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 45812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45588,
                          "src": "6661:15:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "6650:26:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2064726970207374617475732063616e206e6576657220626520736574206261636b20746f204e4f4e45206166746572206372656174696f6e",
                        "id": 45814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6690:67:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d9d6db8873f6709c110a58e7747570b7b0cffd72d2da932e27c4b163ce62de4",
                          "typeString": "literal_string \"Drippie: drip status can never be set back to NONE after creation\""
                        },
                        "value": "Drippie: drip status can never be set back to NONE after creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d9d6db8873f6709c110a58e7747570b7b0cffd72d2da932e27c4b163ce62de4",
                          "typeString": "literal_string \"Drippie: drip status can never be set back to NONE after creation\""
                        }
                      ],
                      "id": 45809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6629:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6629:138:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45816,
                  "nodeType": "ExpressionStatement",
                  "src": "6629:138:109"
                },
                {
                  "assignments": [
                    45819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45819,
                      "mutability": "mutable",
                      "name": "curr",
                      "nameLocation": "6855:4:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 45875,
                      "src": "6844:15:109",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      },
                      "typeName": {
                        "id": 45818,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45817,
                          "name": "DripStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45592,
                          "src": "6844:10:109"
                        },
                        "referencedDeclaration": 45592,
                        "src": "6844:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45824,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 45820,
                        "name": "drips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45661,
                        "src": "6862:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                          "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                        }
                      },
                      "id": 45822,
                      "indexExpression": {
                        "id": 45821,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45801,
                        "src": "6868:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6862:12:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$45624_storage",
                        "typeString": "struct Drippie.DripState storage ref"
                      }
                    },
                    "id": 45823,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "status",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 45616,
                    "src": "6862:19:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$45592",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6844:37:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 45829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45826,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45819,
                          "src": "7151:4:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 45827,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "7159:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 45828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45588,
                          "src": "7159:15:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "7151:23:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020776974682074686174206e616d6520646f6573206e6f7420657869737420616e642063616e6e6f742062652075706461746564",
                        "id": 45830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7188:67:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d47cb8b4bbd1f0f436ac91ab1c428f7bac59817e7fc1f17ecc3179ac5e18bb",
                          "typeString": "literal_string \"Drippie: drip with that name does not exist and cannot be updated\""
                        },
                        "value": "Drippie: drip with that name does not exist and cannot be updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d47cb8b4bbd1f0f436ac91ab1c428f7bac59817e7fc1f17ecc3179ac5e18bb",
                          "typeString": "literal_string \"Drippie: drip with that name does not exist and cannot be updated\""
                        }
                      ],
                      "id": 45825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7130:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7130:135:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45832,
                  "nodeType": "ExpressionStatement",
                  "src": "7130:135:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 45837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45834,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45819,
                          "src": "7434:4:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 45835,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "7442:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 45836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ARCHIVED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45591,
                          "src": "7442:19:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "7434:27:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020776974682074686174206e616d6520686173206265656e20617263686976656420616e642063616e6e6f742062652075706461746564",
                        "id": 45838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7475:70:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c646eec7fb4f196d2558cace17875a41e1cdef5f04244862ee1ca2d2a7de4ee2",
                          "typeString": "literal_string \"Drippie: drip with that name has been archived and cannot be updated\""
                        },
                        "value": "Drippie: drip with that name has been archived and cannot be updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c646eec7fb4f196d2558cace17875a41e1cdef5f04244862ee1ca2d2a7de4ee2",
                          "typeString": "literal_string \"Drippie: drip with that name has been archived and cannot be updated\""
                        }
                      ],
                      "id": 45833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7413:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:142:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45840,
                  "nodeType": "ExpressionStatement",
                  "src": "7413:142:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 45844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45842,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45819,
                          "src": "7854:4:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 45843,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45804,
                          "src": "7862:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "7854:15:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2063616e6e6f742073657420647269702073746174757320746f207468652073616d6520737461747573206173206974732063757272656e7420737461747573",
                        "id": 45845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7883:74:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cd6f0db9ebdd0f9c3c658c07e9e2e39bcc6b82f6b9a3ceb63ceedc5f0014189",
                          "typeString": "literal_string \"Drippie: cannot set drip status to the same status as its current status\""
                        },
                        "value": "Drippie: cannot set drip status to the same status as its current status"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cd6f0db9ebdd0f9c3c658c07e9e2e39bcc6b82f6b9a3ceb63ceedc5f0014189",
                          "typeString": "literal_string \"Drippie: cannot set drip status to the same status as its current status\""
                        }
                      ],
                      "id": 45841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7833:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7833:134:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45847,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:134:109"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_DripStatus_$45592",
                      "typeString": "enum Drippie.DripStatus"
                    },
                    "id": 45851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45848,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45804,
                      "src": "8203:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 45849,
                        "name": "DripStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45592,
                        "src": "8214:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                          "typeString": "type(enum Drippie.DripStatus)"
                        }
                      },
                      "id": 45850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ARCHIVED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45591,
                      "src": "8214:19:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "src": "8203:30:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45861,
                  "nodeType": "IfStatement",
                  "src": "8199:201:109",
                  "trueBody": {
                    "id": 45860,
                    "nodeType": "Block",
                    "src": "8235:165:109",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DripStatus_$45592",
                                "typeString": "enum Drippie.DripStatus"
                              },
                              "id": 45856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 45853,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45819,
                                "src": "8274:4:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DripStatus_$45592",
                                  "typeString": "enum Drippie.DripStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 45854,
                                  "name": "DripStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45592,
                                  "src": "8282:10:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                                    "typeString": "type(enum Drippie.DripStatus)"
                                  }
                                },
                                "id": 45855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PAUSED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45589,
                                "src": "8282:17:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DripStatus_$45592",
                                  "typeString": "enum Drippie.DripStatus"
                                }
                              },
                              "src": "8274:25:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a2064726970206d75737420666972737420626520706175736564206265666f7265206265696e67206172636869766564",
                              "id": 45857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8317:58:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8b0f3947c996a34c6853d78e42f7055514033339ec42b29f528e1f65c4dbe9c4",
                                "typeString": "literal_string \"Drippie: drip must first be paused before being archived\""
                              },
                              "value": "Drippie: drip must first be paused before being archived"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8b0f3947c996a34c6853d78e42f7055514033339ec42b29f528e1f65c4dbe9c4",
                                "typeString": "literal_string \"Drippie: drip must first be paused before being archived\""
                              }
                            ],
                            "id": 45852,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8249:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8249:140:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45859,
                        "nodeType": "ExpressionStatement",
                        "src": "8249:140:109"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 45867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 45862,
                          "name": "drips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45661,
                          "src": "8478:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                            "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                          }
                        },
                        "id": 45864,
                        "indexExpression": {
                          "id": 45863,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45801,
                          "src": "8484:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8478:12:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage",
                          "typeString": "struct Drippie.DripState storage ref"
                        }
                      },
                      "id": 45865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45616,
                      "src": "8478:19:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45866,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45804,
                      "src": "8500:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$45592",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "src": "8478:29:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$45592",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "id": 45868,
                  "nodeType": "ExpressionStatement",
                  "src": "8478:29:109"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45870,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45801,
                        "src": "8540:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 45871,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45801,
                        "src": "8547:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 45872,
                        "name": "_status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45804,
                        "src": "8554:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        }
                      ],
                      "id": 45869,
                      "name": "DripStatusUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45644,
                      "src": "8522:17:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_DripStatus_$45592_$returns$__$",
                        "typeString": "function (string memory,string memory,enum Drippie.DripStatus)"
                      }
                    },
                    "id": 45873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8522:40:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45874,
                  "nodeType": "EmitStatement",
                  "src": "8517:45:109"
                }
              ]
            },
            "documentation": {
              "id": 45799,
              "nodeType": "StructuredDocumentation",
              "src": "5925:433:109",
              "text": " @notice Sets the status for a given drip. The behavior of this function depends on the\n         status that the user is trying to set. A drip can always move between ACTIVE and\n         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back\n         to ACTIVE or PAUSED.\n @param _name   Name of the drip to update.\n @param _status New drip status."
            },
            "functionSelector": "9bc94d01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45806,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113006,
                  "src": "6431:9:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "6431:9:109"
              }
            ],
            "name": "status",
            "nameLocation": "6372:6:109",
            "parameters": {
              "id": 45805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45801,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "6395:5:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45876,
                  "src": "6379:21:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45800,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6379:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45804,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "6413:7:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45876,
                  "src": "6402:18:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$45592",
                    "typeString": "enum Drippie.DripStatus"
                  },
                  "typeName": {
                    "id": 45803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45802,
                      "name": "DripStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45592,
                      "src": "6402:10:109"
                    },
                    "referencedDeclaration": 45592,
                    "src": "6402:10:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$45592",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6378:43:109"
            },
            "returnParameters": {
              "id": 45808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6441:0:109"
            },
            "scope": 46013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45928,
            "nodeType": "FunctionDefinition",
            "src": "8759:1246:109",
            "nodes": [],
            "body": {
              "id": 45927,
              "nodeType": "Block",
              "src": "8829:1176:109",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45886,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "8857:5:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 45927,
                      "src": "8839:23:109",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                        "typeString": "struct Drippie.DripState"
                      },
                      "typeName": {
                        "id": 45885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45884,
                          "name": "DripState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45624,
                          "src": "8839:9:109"
                        },
                        "referencedDeclaration": 45624,
                        "src": "8839:9:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                          "typeString": "struct Drippie.DripState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45890,
                  "initialValue": {
                    "baseExpression": {
                      "id": 45887,
                      "name": "drips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45661,
                      "src": "8865:5:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                        "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                      }
                    },
                    "id": 45889,
                    "indexExpression": {
                      "id": 45888,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45879,
                      "src": "8871:5:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8865:12:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripState_$45624_storage",
                      "typeString": "struct Drippie.DripState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8839:38:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$45592",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 45896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45892,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45886,
                            "src": "8989:5:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                              "typeString": "struct Drippie.DripState storage pointer"
                            }
                          },
                          "id": 45893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45616,
                          "src": "8989:12:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 45894,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45592,
                            "src": "9005:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$45592_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 45895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45590,
                          "src": "9005:17:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$45592",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "8989:33:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2073656c6563746564206472697020646f6573206e6f74206578697374206f72206973206e6f742063757272656e746c7920616374697665",
                        "id": 45897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9036:66:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_992b2abf356f1dc57af279d12026c173397e12d52cf79b07408a9d3c74e1af4f",
                          "typeString": "literal_string \"Drippie: selected drip does not exist or is not currently active\""
                        },
                        "value": "Drippie: selected drip does not exist or is not currently active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_992b2abf356f1dc57af279d12026c173397e12d52cf79b07408a9d3c74e1af4f",
                          "typeString": "literal_string \"Drippie: selected drip does not exist or is not currently active\""
                        }
                      ],
                      "id": 45891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8968:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8968:144:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45899,
                  "nodeType": "ExpressionStatement",
                  "src": "8968:144:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 45901,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45886,
                              "src": "9565:5:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                                "typeString": "struct Drippie.DripState storage pointer"
                              }
                            },
                            "id": 45902,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "last",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45621,
                            "src": "9565:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 45903,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45886,
                                "src": "9578:5:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 45904,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45619,
                              "src": "9578:12:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 45905,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "interval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45603,
                            "src": "9578:21:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9565:34:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 45907,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9603:5:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9603:15:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9565:53:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020696e74657276616c20686173206e6f7420656c61707365642073696e6365206c6173742064726970",
                        "id": 45910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9632:56:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6b44356f52be5e3aab04a9961c05385899b4cbbf9c6b1baf115f1e3c71870ef",
                          "typeString": "literal_string \"Drippie: drip interval has not elapsed since last drip\""
                        },
                        "value": "Drippie: drip interval has not elapsed since last drip"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6b44356f52be5e3aab04a9961c05385899b4cbbf9c6b1baf115f1e3c71870ef",
                          "typeString": "literal_string \"Drippie: drip interval has not elapsed since last drip\""
                        }
                      ],
                      "id": 45900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9544:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9544:154:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45912,
                  "nodeType": "ExpressionStatement",
                  "src": "9544:154:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 45918,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45886,
                                "src": "9816:5:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 45919,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45619,
                              "src": "9816:12:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 45920,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkparams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45608,
                            "src": "9816:24:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 45914,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45886,
                                "src": "9787:5:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 45915,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45619,
                              "src": "9787:12:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 45916,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dripcheck",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45606,
                            "src": "9787:22:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDripCheck_$46024",
                              "typeString": "contract IDripCheck"
                            }
                          },
                          "id": 45917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "check",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46023,
                          "src": "9787:28:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 45921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9787:54:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2064726970636865636b206661696c656420736f2064726970206973206e6f742079657420726561647920746f20626520747269676765726564",
                        "id": 45922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9855:68:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96ca8b21fbc7d628e015a633545eb6b32b721f6b21c2072ec2826d343d7f66f3",
                          "typeString": "literal_string \"Drippie: dripcheck failed so drip is not yet ready to be triggered\""
                        },
                        "value": "Drippie: dripcheck failed so drip is not yet ready to be triggered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96ca8b21fbc7d628e015a633545eb6b32b721f6b21c2072ec2826d343d7f66f3",
                          "typeString": "literal_string \"Drippie: dripcheck failed so drip is not yet ready to be triggered\""
                        }
                      ],
                      "id": 45913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9766:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9766:167:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45924,
                  "nodeType": "ExpressionStatement",
                  "src": "9766:167:109"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 45925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9994:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 45883,
                  "id": 45926,
                  "nodeType": "Return",
                  "src": "9987:11:109"
                }
              ]
            },
            "documentation": {
              "id": 45877,
              "nodeType": "StructuredDocumentation",
              "src": "8575:179:109",
              "text": " @notice Checks if a given drip is executable.\n @param _name Drip to check.\n @return True if the drip is executable, reverts otherwise."
            },
            "functionSelector": "fc3e3eba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executable",
            "nameLocation": "8768:10:109",
            "parameters": {
              "id": 45880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45879,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8795:5:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 45928,
                  "src": "8779:21:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45878,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8779:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8778:23:109"
            },
            "returnParameters": {
              "id": 45883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45928,
                  "src": "8823:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45881,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8823:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8822:6:109"
            },
            "scope": 46013,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46012,
            "nodeType": "FunctionDefinition",
            "src": "10841:3270:109",
            "nodes": [],
            "body": {
              "id": 46011,
              "nodeType": "Block",
              "src": "10887:3224:109",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45936,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "10915:5:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 46011,
                      "src": "10897:23:109",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                        "typeString": "struct Drippie.DripState"
                      },
                      "typeName": {
                        "id": 45935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 45934,
                          "name": "DripState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 45624,
                          "src": "10897:9:109"
                        },
                        "referencedDeclaration": 45624,
                        "src": "10897:9:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                          "typeString": "struct Drippie.DripState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45940,
                  "initialValue": {
                    "baseExpression": {
                      "id": 45937,
                      "name": "drips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45661,
                      "src": "10923:5:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$45624_storage_$",
                        "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                      }
                    },
                    "id": 45939,
                    "indexExpression": {
                      "id": 45938,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45931,
                      "src": "10929:5:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10923:12:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripState_$45624_storage",
                      "typeString": "struct Drippie.DripState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10897:38:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45942,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45931,
                        "src": "11147:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 45941,
                      "name": "executable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45928,
                      "src": "11136:10:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (string calldata) view returns (bool)"
                      }
                    },
                    "id": 45943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11136:17:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45944,
                  "nodeType": "ExpressionStatement",
                  "src": "11136:17:109"
                },
                {
                  "expression": {
                    "id": 45950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 45945,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45936,
                        "src": "11612:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                          "typeString": "struct Drippie.DripState storage pointer"
                        }
                      },
                      "id": 45947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "last",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45621,
                      "src": "11612:10:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 45948,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11625:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 45949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11625:15:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11612:28:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45951,
                  "nodeType": "ExpressionStatement",
                  "src": "11612:28:109"
                },
                {
                  "expression": {
                    "id": 45955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11936:13:109",
                    "subExpression": {
                      "expression": {
                        "id": 45952,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45936,
                        "src": "11936:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                          "typeString": "struct Drippie.DripState storage pointer"
                        }
                      },
                      "id": 45954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "count",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45623,
                      "src": "11936:11:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45956,
                  "nodeType": "ExpressionStatement",
                  "src": "11936:13:109"
                },
                {
                  "assignments": [
                    45958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45958,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "12313:3:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 46011,
                      "src": "12305:11:109",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12305:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45963,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "expression": {
                          "id": 45959,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45936,
                          "src": "12319:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 45960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45619,
                        "src": "12319:12:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 45961,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45612,
                      "src": "12319:20:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage",
                        "typeString": "struct Drippie.DripAction storage ref[] storage ref"
                      }
                    },
                    "id": 45962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "12319:27:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12305:41:109"
                },
                {
                  "body": {
                    "id": 46000,
                    "nodeType": "Block",
                    "src": "12390:1644:109",
                    "statements": [
                      {
                        "assignments": [
                          45976
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45976,
                            "mutability": "mutable",
                            "name": "action",
                            "nameLocation": "12680:6:109",
                            "nodeType": "VariableDeclaration",
                            "scope": 46000,
                            "src": "12661:25:109",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripAction_$45599_storage_ptr",
                              "typeString": "struct Drippie.DripAction"
                            },
                            "typeName": {
                              "id": 45975,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 45974,
                                "name": "DripAction",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 45599,
                                "src": "12661:10:109"
                              },
                              "referencedDeclaration": 45599,
                              "src": "12661:10:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripAction_$45599_storage_ptr",
                                "typeString": "struct Drippie.DripAction"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45982,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "expression": {
                                "id": 45977,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45936,
                                "src": "12689:5:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$45624_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 45978,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45619,
                              "src": "12689:12:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$45613_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 45979,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "actions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45612,
                            "src": "12689:20:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_DripAction_$45599_storage_$dyn_storage",
                              "typeString": "struct Drippie.DripAction storage ref[] storage ref"
                            }
                          },
                          "id": 45981,
                          "indexExpression": {
                            "id": 45980,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45965,
                            "src": "12710:1:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12689:23:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripAction_$45599_storage",
                            "typeString": "struct Drippie.DripAction storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12661:51:109"
                      },
                      {
                        "assignments": [
                          45984,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45984,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "13105:7:109",
                            "nodeType": "VariableDeclaration",
                            "scope": 46000,
                            "src": "13100:12:109",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 45983,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "13100:4:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 45994,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 45991,
                                "name": "action",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45976,
                                "src": "13160:6:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripAction_$45599_storage_ptr",
                                  "typeString": "struct Drippie.DripAction storage pointer"
                                }
                              },
                              "id": 45992,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45596,
                              "src": "13160:11:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 45985,
                                  "name": "action",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45976,
                                  "src": "13118:6:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripAction_$45599_storage_ptr",
                                    "typeString": "struct Drippie.DripAction storage pointer"
                                  }
                                },
                                "id": 45986,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "target",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45594,
                                "src": "13118:13:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 45987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "13118:18:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 45990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 45988,
                                  "name": "action",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45976,
                                  "src": "13145:6:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripAction_$45599_storage_ptr",
                                    "typeString": "struct Drippie.DripAction storage pointer"
                                  }
                                },
                                "id": 45989,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45598,
                                "src": "13145:12:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "13118:41:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 45993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13118:54:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13099:73:109"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45996,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45984,
                              "src": "13906:7:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a20647269702077617320756e7375636365737366756c2c20706c6561736520636865636b20796f757220636f6e66696775726174696f6e20666f72206d697374616b6573",
                              "id": 45997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13931:78:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1acdd72c2324d77f1c7ac65cd414afd8e9f0837bfac7e5b36e0764c49bb474f7",
                                "typeString": "literal_string \"Drippie: drip was unsuccessful, please check your configuration for mistakes\""
                              },
                              "value": "Drippie: drip was unsuccessful, please check your configuration for mistakes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1acdd72c2324d77f1c7ac65cd414afd8e9f0837bfac7e5b36e0764c49bb474f7",
                                "typeString": "literal_string \"Drippie: drip was unsuccessful, please check your configuration for mistakes\""
                              }
                            ],
                            "id": 45995,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13881:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13881:142:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45999,
                        "nodeType": "ExpressionStatement",
                        "src": "13881:142:109"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45968,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45965,
                      "src": "12376:1:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 45969,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45958,
                      "src": "12380:3:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12376:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46001,
                  "initializationExpression": {
                    "assignments": [
                      45965
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45965,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12369:1:109",
                        "nodeType": "VariableDeclaration",
                        "scope": 46001,
                        "src": "12361:9:109",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12361:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45967,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 45966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12373:1:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12361:13:109"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12385:3:109",
                      "subExpression": {
                        "id": 45971,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45965,
                        "src": "12385:1:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45973,
                    "nodeType": "ExpressionStatement",
                    "src": "12385:3:109"
                  },
                  "nodeType": "ForStatement",
                  "src": "12356:1678:109"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46003,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45931,
                        "src": "14062:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 46004,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45931,
                        "src": "14069:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 46005,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14076:3:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14076:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46007,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "14088:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 46008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "14088:15:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46002,
                      "name": "DripExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45655,
                      "src": "14049:12:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,address,uint256)"
                      }
                    },
                    "id": 46009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14049:55:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46010,
                  "nodeType": "EmitStatement",
                  "src": "14044:60:109"
                }
              ]
            },
            "documentation": {
              "id": 45929,
              "nodeType": "StructuredDocumentation",
              "src": "10011:825:109",
              "text": " @notice Triggers a drip. This function is deliberately left as a public function because the\n         assumption being made here is that setting the drip to ACTIVE is an affirmative\n         signal that the drip should be executable according to the drip parameters, drip\n         check, and drip interval. Note that drip parameters are read entirely from the state\n         and are not supplied as user input, so there should not be any way for a\n         non-authorized user to influence the behavior of the drip. Note that the drip check\n         is executed only **once** at the beginning of the call to the drip function and will\n         not be executed again between the drip actions within this call.\n @param _name Name of the drip to trigger."
            },
            "functionSelector": "67148cd2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nameLocation": "10850:4:109",
            "parameters": {
              "id": 45932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45931,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "10871:5:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46012,
                  "src": "10855:21:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45930,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10855:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10854:23:109"
            },
            "returnParameters": {
              "id": 45933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10887:0:109"
            },
            "scope": 46013,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45586,
              "name": "AssetReceiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45383,
              "src": "1026:13:109"
            },
            "id": 45587,
            "nodeType": "InheritanceSpecifier",
            "src": "1026:13:109"
          }
        ],
        "canonicalName": "Drippie",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 45585,
          "nodeType": "StructuredDocumentation",
          "src": "159:846:109",
          "text": " @title Drippie\n @notice Drippie is a system for managing automated contract interactions. A specific interaction\n         is called a \"drip\" and can be executed according to some condition (called a dripcheck)\n         and an execution interval. Drips cannot be executed faster than the execution interval.\n         Drips can trigger arbitrary contract calls where the calling contract is this contract\n         address. Drips can also send ETH value, which makes them ideal for keeping addresses\n         sufficiently funded with ETH. Drippie is designed to be connected with smart contract\n         automation services so that drips can be executed automatically. However, Drippie is\n         specifically designed to be separated from these services so that trust assumptions are\n         better compartmentalized."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46013,
          45383,
          45445,
          113043
        ],
        "name": "Drippie",
        "nameLocation": "1015:7:109",
        "scope": 46014,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 109
}