{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "about",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "AttestationCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "about",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes"
            }
          ],
          "internalType": "struct AttestationStation.AttestationData[]",
          "name": "_attestations",
          "type": "tuple[]"
        }
      ],
      "name": "attest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_about",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_val",
          "type": "bytes"
        }
      ],
      "name": "attest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "attestations",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c051610af361004f60003960006101ad015260006101840152600061015b0152610af36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f36600461046c565b6100aa565b604051610071919061051e565b60405180910390f35b610064610154565b610095610090366004610538565b6101f7565b005b6100956100a5366004610687565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d3906106de565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff906106de565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f0000000000000000000000000000000000000000000000000000000000000000610306565b6101a87f0000000000000000000000000000000000000000000000000000000000000000610306565b6101d17f0000000000000000000000000000000000000000000000000000000000000000610306565b6040516020016101e393929190610731565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176107a7565b905060200281019061022991906107d6565b61023290610814565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320858452909152902061029a82826108df565b50818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102f9919061051e565b60405180910390a4505050565b60608160000361034957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610373578061035d81610a28565b915061036c9050600a83610a8f565b915061034d565b60008167ffffffffffffffff81111561038e5761038e6105ad565b6040519080825280601f01601f1916602001820160405280156103b8576020820181803683370190505b5090505b841561043b576103cd600183610aa3565b91506103da600a86610aba565b6103e5906030610ace565b60f81b8183815181106103fa576103fa6107a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610434600a86610a8f565b94506103bc565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461046757600080fd5b919050565b60008060006060848603121561048157600080fd5b61048a84610443565b925061049860208501610443565b9150604084013590509250925092565b60005b838110156104c35781810151838201526020016104ab565b838111156102545750506000910152565b600081518084526104ec8160208601602086016104a8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061053160208301846104d4565b9392505050565b6000806020838503121561054b57600080fd5b823567ffffffffffffffff8082111561056357600080fd5b818501915085601f83011261057757600080fd5b81358181111561058657600080fd5b8660208260051b850101111561059b57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126105ed57600080fd5b813567ffffffffffffffff80821115610608576106086105ad565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561064e5761064e6105ad565b8160405283815286602085880101111561066757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561069c57600080fd5b6106a584610443565b925060208401359150604084013567ffffffffffffffff8111156106c857600080fd5b6106d4868287016105dc565b9150509250925092565b600181811c908216806106f257607f821691505b60208210810361072b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600084516107438184602089016104a8565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161077f816001850160208a016104a8565b6001920191820152835161079a8160028401602088016104a8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261080a57600080fd5b9190910192915050565b60006060823603121561082657600080fd5b6040516060810167ffffffffffffffff828210818311171561084a5761084a6105ad565b8160405261085785610443565b835260208501356020840152604085013591508082111561087757600080fd5b50610884368286016105dc565b60408301525092915050565b601f8211156108da57600081815260208120601f850160051c810160208610156108b75750805b601f850160051c820191505b818110156108d6578281556001016108c3565b5050505b505050565b815167ffffffffffffffff8111156108f9576108f96105ad565b61090d8161090784546106de565b84610890565b602080601f831160018114610960576000841561092a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556108d6565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156109ad5788860151825594840194600190910190840161098e565b50858210156109e957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5957610a596109f9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a9e57610a9e610a60565b500490565b600082821015610ab557610ab56109f9565b500390565b600082610ac957610ac9610a60565b500690565b60008219821115610ae157610ae16109f9565b50019056fea164736f6c634300080f000a",
    "sourceMap": "234:2154:118:-:0;;;1320:32;;;;;;;;;-1:-1:-1;1341:1:118;762:22:211;;;;794;;1347:1:118;826:22:211;;234:2154:118;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f36600461046c565b6100aa565b604051610071919061051e565b60405180910390f35b610064610154565b610095610090366004610538565b6101f7565b005b6100956100a5366004610687565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d3906106de565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff906106de565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f0000000000000000000000000000000000000000000000000000000000000000610306565b6101a87f0000000000000000000000000000000000000000000000000000000000000000610306565b6101d17f0000000000000000000000000000000000000000000000000000000000000000610306565b6040516020016101e393929190610731565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176107a7565b905060200281019061022991906107d6565b61023290610814565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320858452909152902061029a82826108df565b50818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102f9919061051e565b60405180910390a4505050565b60608160000361034957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610373578061035d81610a28565b915061036c9050600a83610a8f565b915061034d565b60008167ffffffffffffffff81111561038e5761038e6105ad565b6040519080825280601f01601f1916602001820160405280156103b8576020820181803683370190505b5090505b841561043b576103cd600183610aa3565b91506103da600a86610aba565b6103e5906030610ace565b60f81b8183815181106103fa576103fa6107a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610434600a86610a8f565b94506103bc565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461046757600080fd5b919050565b60008060006060848603121561048157600080fd5b61048a84610443565b925061049860208501610443565b9150604084013590509250925092565b60005b838110156104c35781810151838201526020016104ab565b838111156102545750506000910152565b600081518084526104ec8160208601602086016104a8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061053160208301846104d4565b9392505050565b6000806020838503121561054b57600080fd5b823567ffffffffffffffff8082111561056357600080fd5b818501915085601f83011261057757600080fd5b81358181111561058657600080fd5b8660208260051b850101111561059b57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126105ed57600080fd5b813567ffffffffffffffff80821115610608576106086105ad565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561064e5761064e6105ad565b8160405283815286602085880101111561066757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561069c57600080fd5b6106a584610443565b925060208401359150604084013567ffffffffffffffff8111156106c857600080fd5b6106d4868287016105dc565b9150509250925092565b600181811c908216806106f257607f821691505b60208210810361072b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600084516107438184602089016104a8565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161077f816001850160208a016104a8565b6001920191820152835161079a8160028401602088016104a8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261080a57600080fd5b9190910192915050565b60006060823603121561082657600080fd5b6040516060810167ffffffffffffffff828210818311171561084a5761084a6105ad565b8160405261085785610443565b835260208501356020840152604085013591508082111561087757600080fd5b50610884368286016105dc565b60408301525092915050565b601f8211156108da57600081815260208120601f850160051c810160208610156108b75750805b601f850160051c820191505b818110156108d6578281556001016108c3565b5050505b505050565b815167ffffffffffffffff8111156108f9576108f96105ad565b61090d8161090784546106de565b84610890565b602080601f831160018114610960576000841561092a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556108d6565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156109ad5788860151825594840194600190910190840161098e565b50858210156109e957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5957610a596109f9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a9e57610a9e610a60565b500490565b600082821015610ab557610ab56109f9565b500390565b600082610ac957610ac9610a60565b500690565b60008219821115610ae157610ae16109f9565b50019056fea164736f6c634300080f000a",
    "sourceMap": "234:2154:118:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:85;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:372:211;;;:::i;2010:376:118:-;;;;;;:::i;:::-;;:::i;:::-;;1633:230;;;;;;:::i;:::-;;:::i;757:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;972:372:211:-;1012:13;1118:31;1135:13;1118:16;:31::i;:::-;1196;1213:13;1196:16;:31::i;:::-;1274;1291:13;1274:16;:31::i;:::-;1080:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1037:300;;972:372;:::o;2010:376:118:-;2104:13;2087:14;2134:246;2158:6;2154:1;:10;2134:246;;;2182:34;2219:13;;2233:1;2219:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2182:53;;;:::i;:::-;;;2250:59;2257:11;:17;;;2276:11;:15;;;2293:11;:15;;;2250:6;:59::i;:::-;-1:-1:-1;2352:3:118;;2134:246;;;;2077:309;2010:376;;:::o;1633:230::-;1758:10;1745:12;:24;;;;;;;;;;;;:32;;;;;;;;;:38;;;;;;;;:45;1786:4;1745:38;:45;:::i;:::-;;1845:4;1837:6;1806:50;;1825:10;1806:50;;;1851:4;1806:50;;;;;;:::i;:::-;;;;;;;;1633:230;;;:::o;392:703:250:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:250;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:250;;-1:-1:-1;837:2:250;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:250;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:250;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:250;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:250:o;14:196:283:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:328::-;292:6;300;308;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;400:29;419:9;400:29;:::i;:::-;390:39;;448:38;482:2;471:9;467:18;448:38;:::i;:::-;438:48;;533:2;522:9;518:18;505:32;495:42;;215:328;;;;;:::o;548:258::-;620:1;630:113;644:6;641:1;638:13;630:113;;;720:11;;;714:18;701:11;;;694:39;666:2;659:10;630:113;;;761:6;758:1;755:13;752:48;;;-1:-1:-1;;796:1:283;778:16;;771:27;548:258::o;811:316::-;852:3;890:5;884:12;917:6;912:3;905:19;933:63;989:6;982:4;977:3;973:14;966:4;959:5;955:16;933:63;:::i;:::-;1041:2;1029:15;1046:66;1025:88;1016:98;;;;1116:4;1012:109;;811:316;-1:-1:-1;;811:316:283:o;1132:217::-;1279:2;1268:9;1261:21;1242:4;1299:44;1339:2;1328:9;1324:18;1316:6;1299:44;:::i;:::-;1291:52;1132:217;-1:-1:-1;;;1132:217:283:o;1578:651::-;1700:6;1708;1761:2;1749:9;1740:7;1736:23;1732:32;1729:52;;;1777:1;1774;1767:12;1729:52;1817:9;1804:23;1846:18;1887:2;1879:6;1876:14;1873:34;;;1903:1;1900;1893:12;1873:34;1941:6;1930:9;1926:22;1916:32;;1986:7;1979:4;1975:2;1971:13;1967:27;1957:55;;2008:1;2005;1998:12;1957:55;2048:2;2035:16;2074:2;2066:6;2063:14;2060:34;;;2090:1;2087;2080:12;2060:34;2143:7;2138:2;2128:6;2125:1;2121:14;2117:2;2113:23;2109:32;2106:45;2103:65;;;2164:1;2161;2154:12;2103:65;2195:2;2187:11;;;;;2217:6;;-1:-1:-1;1578:651:283;;-1:-1:-1;;;;1578:651:283:o;2234:184::-;2286:77;2283:1;2276:88;2383:4;2380:1;2373:15;2407:4;2404:1;2397:15;2423:777;2465:5;2518:3;2511:4;2503:6;2499:17;2495:27;2485:55;;2536:1;2533;2526:12;2485:55;2572:6;2559:20;2598:18;2635:2;2631;2628:10;2625:36;;;2641:18;;:::i;:::-;2775:2;2769:9;2837:4;2829:13;;2680:66;2825:22;;;2849:2;2821:31;2817:40;2805:53;;;2873:18;;;2893:22;;;2870:46;2867:72;;;2919:18;;:::i;:::-;2959:10;2955:2;2948:22;2994:2;2986:6;2979:18;3040:3;3033:4;3028:2;3020:6;3016:15;3012:26;3009:35;3006:55;;;3057:1;3054;3047:12;3006:55;3121:2;3114:4;3106:6;3102:17;3095:4;3087:6;3083:17;3070:54;3168:1;3161:4;3156:2;3148:6;3144:15;3140:26;3133:37;3188:6;3179:15;;;;;;2423:777;;;;:::o;3205:462::-;3291:6;3299;3307;3360:2;3348:9;3339:7;3335:23;3331:32;3328:52;;;3376:1;3373;3366:12;3328:52;3399:29;3418:9;3399:29;:::i;:::-;3389:39;;3475:2;3464:9;3460:18;3447:32;3437:42;;3530:2;3519:9;3515:18;3502:32;3557:18;3549:6;3546:30;3543:50;;;3589:1;3586;3579:12;3543:50;3612:49;3653:7;3644:6;3633:9;3629:22;3612:49;:::i;:::-;3602:59;;;3205:462;;;;;:::o;3672:437::-;3751:1;3747:12;;;;3794;;;3815:61;;3869:4;3861:6;3857:17;3847:27;;3815:61;3922:2;3914:6;3911:14;3891:18;3888:38;3885:218;;3959:77;3956:1;3949:88;4060:4;4057:1;4050:15;4088:4;4085:1;4078:15;3885:218;;3672:437;;;:::o;4114:960::-;4543:3;4581:6;4575:13;4597:53;4643:6;4638:3;4631:4;4623:6;4619:17;4597:53;:::i;:::-;4681:6;4676:3;4672:16;4659:29;;4707:3;4733:2;4726:5;4719:17;4767:6;4761:13;4783:65;4839:8;4835:1;4828:5;4824:13;4817:4;4809:6;4805:17;4783:65;:::i;:::-;4911:1;4867:20;;4903:10;;;4896:22;4943:13;;4965:62;4943:13;5014:1;5006:10;;4999:4;4987:17;;4965:62;:::i;:::-;5047:17;5066:1;5043:25;;4114:960;-1:-1:-1;;;;;4114:960:283:o;5079:184::-;5131:77;5128:1;5121:88;5228:4;5225:1;5218:15;5252:4;5249:1;5242:15;5268:392;5370:4;5428:11;5415:25;5518:66;5507:8;5491:14;5487:29;5483:102;5463:18;5459:127;5449:155;;5600:1;5597;5590:12;5449:155;5621:33;;;;;5268:392;-1:-1:-1;;5268:392:283:o;5665:752::-;5785:9;5844:4;5836:5;5820:14;5816:26;5812:37;5809:57;;;5862:1;5859;5852:12;5809:57;5895:2;5889:9;5937:4;5929:6;5925:17;5961:18;6029:6;6017:10;6014:22;6009:2;5997:10;5994:18;5991:46;5988:72;;;6040:18;;:::i;:::-;6080:10;6076:2;6069:22;6115:25;6134:5;6115:25;:::i;:::-;6107:6;6100:41;6198:2;6191:5;6187:14;6174:28;6169:2;6161:6;6157:15;6150:53;6250:2;6243:5;6239:14;6226:28;6212:42;;6277:2;6269:6;6266:14;6263:34;;;6293:1;6290;6283:12;6263:34;;6330:52;6367:14;6358:6;6351:5;6347:18;6330:52;:::i;:::-;6325:2;6313:15;;6306:77;-1:-1:-1;6317:6:283;5665:752;-1:-1:-1;;5665:752:283:o;6547:544::-;6648:2;6643:3;6640:11;6637:448;;;6684:1;6709:5;6705:2;6698:17;6754:4;6750:2;6740:19;6824:2;6812:10;6808:19;6805:1;6801:27;6795:4;6791:38;6860:4;6848:10;6845:20;6842:47;;;-1:-1:-1;6883:4:283;6842:47;6938:2;6933:3;6929:12;6926:1;6922:20;6916:4;6912:31;6902:41;;6993:82;7011:2;7004:5;7001:13;6993:82;;;7056:17;;;7037:1;7026:13;6993:82;;;6997:3;;;6637:448;6547:544;;;:::o;7327:1467::-;7451:3;7445:10;7478:18;7470:6;7467:30;7464:56;;;7500:18;;:::i;:::-;7529:96;7618:6;7578:38;7610:4;7604:11;7578:38;:::i;:::-;7572:4;7529:96;:::i;:::-;7680:4;;7744:2;7733:14;;7761:1;7756:781;;;;8581:1;8598:6;8595:89;;;-1:-1:-1;8650:19:283;;;8644:26;8595:89;7233:66;7224:1;7220:11;;;7216:84;7212:89;7202:100;7308:1;7304:11;;;7199:117;8697:81;;7726:1062;;7756:781;6494:1;6487:14;;;6531:4;6518:18;;7804:66;7792:79;;;7968:236;7982:7;7979:1;7976:14;7968:236;;;8071:19;;;8065:26;8050:42;;8163:27;;;;8131:1;8119:14;;;;7998:19;;7968:236;;;7972:3;8232:6;8223:7;8220:19;8217:261;;;8293:19;;;8287:26;8394:66;8376:1;8372:14;;;8388:3;8368:24;8364:97;8360:102;8345:118;8330:134;;8217:261;-1:-1:-1;;;;;8524:1:283;8508:14;;;8504:22;8491:36;;-1:-1:-1;7327:1467:283:o;8799:184::-;8851:77;8848:1;8841:88;8948:4;8945:1;8938:15;8972:4;8969:1;8962:15;8988:195;9027:3;9058:66;9051:5;9048:77;9045:103;;9128:18;;:::i;:::-;-1:-1:-1;9175:1:283;9164:13;;8988:195::o;9188:184::-;9240:77;9237:1;9230:88;9337:4;9334:1;9327:15;9361:4;9358:1;9351:15;9377:120;9417:1;9443;9433:35;;9448:18;;:::i;:::-;-1:-1:-1;9482:9:283;;9377:120::o;9502:125::-;9542:4;9570:1;9567;9564:8;9561:34;;;9575:18;;:::i;:::-;-1:-1:-1;9612:9:283;;9502:125::o;9632:112::-;9664:1;9690;9680:35;;9695:18;;:::i;:::-;-1:-1:-1;9729:9:283;;9632:112::o;9749:128::-;9789:3;9820:1;9816:6;9813:1;9810:13;9807:39;;;9826:18;;:::i;:::-;-1:-1:-1;9862:9:283;;9749:128::o",
    "linkReferences": {},
    "immutableReferences": {
      "106017": [
        {
          "start": 347,
          "length": 32
        }
      ],
      "106020": [
        {
          "start": 388,
          "length": 32
        }
      ],
      "106023": [
        {
          "start": 429,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "attest((address,bytes32,bytes)[])": "5eb5ea10",
    "attest(address,bytes32,bytes)": "702b9dee",
    "attestations(address,address,bytes32)": "29b42cb5",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"AttestationCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"internalType\":\"struct AttestationStation.AttestationData[]\",\"name\":\"_attestations\",\"type\":\"tuple[]\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_about\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_val\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"attestations\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Optimism CollectiveGitcoin\",\"events\":{\"AttestationCreated(address,address,bytes32,bytes)\":{\"params\":{\"about\":\"Address attestation is about.\",\"creator\":\"Address that made the attestation.\",\"key\":\"Key of the attestation.\",\"val\":\"Value of the attestation.\"}}},\"kind\":\"dev\",\"methods\":{\"attest((address,bytes32,bytes)[])\":{\"params\":{\"_attestations\":\"An array of AttestationData structs.\"}},\"attest(address,bytes32,bytes)\":{\"params\":{\"_about\":\"Address that the attestation is about.\",\"_key\":\"A key used to namespace the attestation.\",\"_val\":\"An arbitrary value stored as part of the attestation.\"}},\"constructor\":{\"custom:semver\":\"1.1.0\"},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"AttestationStation\",\"version\":1},\"userdoc\":{\"events\":{\"AttestationCreated(address,address,bytes32,bytes)\":{\"notice\":\"Emitted when Attestation is created.\"}},\"kind\":\"user\",\"methods\":{\"attest((address,bytes32,bytes)[])\":{\"notice\":\"Allows anyone to create attestations.\"},\"attest(address,bytes32,bytes)\":{\"notice\":\"Allows anyone to create an attestation.\"},\"attestations(address,address,bytes32)\":{\"notice\":\"Maps addresses to attestations. Creator => About => Key => Value.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"Where attestations live.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/op-nft/AttestationStation.sol\":\"AttestationStation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x899ebc97e07a1b6b57a2b50ac1aab5bd92c5831643fb18f56637b299edc192a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6438afacf96dd589db2196c59709e42000bda9997a24533a3a4be2bdf8030ebd\",\"dweb:/ipfs/Qme1WFRRr4NcebZj3wWf2FonSutFTw66h9jmroKeQ1rAiq\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "about",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationStation.AttestationData[]",
              "name": "_attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "about",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "val",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_about",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_key",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_val",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "attestations",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((address,bytes32,bytes)[])": {
            "params": {
              "_attestations": "An array of AttestationData structs."
            }
          },
          "attest(address,bytes32,bytes)": {
            "params": {
              "_about": "Address that the attestation is about.",
              "_key": "A key used to namespace the attestation.",
              "_val": "An arbitrary value stored as part of the attestation."
            }
          },
          "constructor": {
            "custom:semver": "1.1.0"
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((address,bytes32,bytes)[])": {
            "notice": "Allows anyone to create attestations."
          },
          "attest(address,bytes32,bytes)": {
            "notice": "Allows anyone to create an attestation."
          },
          "attestations(address,address,bytes32)": {
            "notice": "Maps addresses to attestations. Creator => About => Key => Value."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/periphery/op-nft/AttestationStation.sol": "AttestationStation"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0x899ebc97e07a1b6b57a2b50ac1aab5bd92c5831643fb18f56637b299edc192a5",
        "urls": [
          "bzz-raw://6438afacf96dd589db2196c59709e42000bda9997a24533a3a4be2bdf8030ebd",
          "dweb:/ipfs/Qme1WFRRr4NcebZj3wWf2FonSutFTw66h9jmroKeQ1rAiq"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 46576,
        "contract": "contracts/periphery/op-nft/AttestationStation.sol:AttestationStation",
        "label": "attestations",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(bytes32 => bytes)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage))"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bytes_storage)"
      },
      "t_mapping(t_bytes32,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "attest((address,bytes32,bytes)[])": {
        "notice": "Allows anyone to create attestations."
      },
      "attest(address,bytes32,bytes)": {
        "notice": "Allows anyone to create an attestation."
      },
      "attestations(address,address,bytes32)": {
        "notice": "Maps addresses to attestations. Creator => About => Key => Value."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      }
    },
    "events": {
      "AttestationCreated(address,address,bytes32,bytes)": {
        "notice": "Emitted when Attestation is created."
      }
    },
    "notice": "Where attestations live."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "Optimism CollectiveGitcoin",
    "methods": {
      "attest((address,bytes32,bytes)[])": {
        "params": {
          "_attestations": "An array of AttestationData structs."
        }
      },
      "attest(address,bytes32,bytes)": {
        "params": {
          "_about": "Address that the attestation is about.",
          "_key": "A key used to namespace the attestation.",
          "_val": "An arbitrary value stored as part of the attestation."
        }
      },
      "constructor": {},
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "events": {
      "AttestationCreated(address,address,bytes32,bytes)": {
        "params": {
          "about": "Address attestation is about.",
          "creator": "Address that made the attestation.",
          "key": "Key of the attestation.",
          "val": "Value of the attestation."
        }
      }
    },
    "title": "AttestationStation"
  },
  "ast": {
    "absolutePath": "contracts/periphery/op-nft/AttestationStation.sol",
    "id": 46672,
    "exportedSymbols": {
      "AttestationStation": [
        46671
      ],
      "Semver": [
        106075
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2357:118",
    "nodes": [
      {
        "id": 46555,
        "nodeType": "PragmaDirective",
        "src": "32:23:118",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46557,
        "nodeType": "ImportDirective",
        "src": "57:52:118",
        "nodes": [],
        "absolutePath": "contracts/universal/Semver.sol",
        "file": "../../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46672,
        "sourceUnit": 106076,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46556,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 106075,
              "src": "66:6:118",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46671,
        "nodeType": "ContractDefinition",
        "src": "234:2154:118",
        "nodes": [
          {
            "id": 46567,
            "nodeType": "StructDefinition",
            "src": "561:93:118",
            "nodes": [],
            "canonicalName": "AttestationStation.AttestationData",
            "members": [
              {
                "constant": false,
                "id": 46562,
                "mutability": "mutable",
                "name": "about",
                "nameLocation": "602:5:118",
                "nodeType": "VariableDeclaration",
                "scope": 46567,
                "src": "594:13:118",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 46561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "594:7:118",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46564,
                "mutability": "mutable",
                "name": "key",
                "nameLocation": "625:3:118",
                "nodeType": "VariableDeclaration",
                "scope": 46567,
                "src": "617:11:118",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 46563,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "617:7:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46566,
                "mutability": "mutable",
                "name": "val",
                "nameLocation": "644:3:118",
                "nodeType": "VariableDeclaration",
                "scope": 46567,
                "src": "638:9:118",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 46565,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:5:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AttestationData",
            "nameLocation": "568:15:118",
            "scope": 46671,
            "visibility": "public"
          },
          {
            "id": 46576,
            "nodeType": "VariableDeclaration",
            "src": "757:85:118",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 46568,
              "nodeType": "StructuredDocumentation",
              "src": "660:92:118",
              "text": " @notice Maps addresses to attestations. Creator => About => Key => Value."
            },
            "functionSelector": "29b42cb5",
            "mutability": "mutable",
            "name": "attestations",
            "nameLocation": "830:12:118",
            "scope": 46671,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(bytes32 => bytes)))"
            },
            "typeName": {
              "id": 46575,
              "keyType": {
                "id": 46569,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "765:7:118",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "757:65:118",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(bytes32 => bytes)))"
              },
              "valueType": {
                "id": 46574,
                "keyType": {
                  "id": 46570,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "784:7:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "776:45:118",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                  "typeString": "mapping(address => mapping(bytes32 => bytes))"
                },
                "valueType": {
                  "id": 46573,
                  "keyType": {
                    "id": 46571,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "795:25:118",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                    "typeString": "mapping(bytes32 => bytes)"
                  },
                  "valueType": {
                    "id": 46572,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 46587,
            "nodeType": "EventDefinition",
            "src": "1127:143:118",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46577,
              "nodeType": "StructuredDocumentation",
              "src": "849:273:118",
              "text": " @notice Emitted when Attestation is created.\n @param creator Address that made the attestation.\n @param about   Address attestation is about.\n @param key     Key of the attestation.\n @param val     Value of the attestation."
            },
            "eventSelector": "28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85",
            "name": "AttestationCreated",
            "nameLocation": "1133:18:118",
            "parameters": {
              "id": 46586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46579,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "1177:7:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46587,
                  "src": "1161:23:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46581,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "about",
                  "nameLocation": "1210:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46587,
                  "src": "1194:21:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46583,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "1241:3:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46587,
                  "src": "1225:19:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46582,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "val",
                  "nameLocation": "1260:3:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46587,
                  "src": "1254:9:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46584,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:118:118"
            }
          },
          {
            "id": 46597,
            "nodeType": "FunctionDefinition",
            "src": "1320:32:118",
            "nodes": [],
            "body": {
              "id": 46596,
              "nodeType": "Block",
              "src": "1350:2:118",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 46588,
              "nodeType": "StructuredDocumentation",
              "src": "1276:39:118",
              "text": " @custom:semver 1.1.0"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 46591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1341:1:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "31",
                    "id": 46592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1344:1:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "30",
                    "id": 46593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 46594,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46590,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 106075,
                  "src": "1334:6:118"
                },
                "nodeType": "ModifierInvocation",
                "src": "1334:15:118"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:2:118"
            },
            "returnParameters": {
              "id": 46595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1350:0:118"
            },
            "scope": 46671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46627,
            "nodeType": "FunctionDefinition",
            "src": "1633:230:118",
            "nodes": [],
            "body": {
              "id": 46626,
              "nodeType": "Block",
              "src": "1735:128:118",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 46607,
                            "name": "attestations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46576,
                            "src": "1745:12:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => bytes storage ref)))"
                            }
                          },
                          "id": 46612,
                          "indexExpression": {
                            "expression": {
                              "id": 46608,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1758:3:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 46609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1758:10:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1745:24:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bytes storage ref))"
                          }
                        },
                        "id": 46613,
                        "indexExpression": {
                          "id": 46610,
                          "name": "_about",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46600,
                          "src": "1770:6:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1745:32:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
                          "typeString": "mapping(bytes32 => bytes storage ref)"
                        }
                      },
                      "id": 46614,
                      "indexExpression": {
                        "id": 46611,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46602,
                        "src": "1778:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1745:38:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46615,
                      "name": "_val",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46604,
                      "src": "1786:4:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1745:45:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 46617,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:45:118"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1825:3:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1825:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46621,
                        "name": "_about",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46600,
                        "src": "1837:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46622,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46602,
                        "src": "1845:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 46623,
                        "name": "_val",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46604,
                        "src": "1851:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46618,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46587,
                      "src": "1806:18:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 46624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:50:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46625,
                  "nodeType": "EmitStatement",
                  "src": "1801:55:118"
                }
              ]
            },
            "documentation": {
              "id": 46598,
              "nodeType": "StructuredDocumentation",
              "src": "1358:270:118",
              "text": " @notice Allows anyone to create an attestation.\n @param _about Address that the attestation is about.\n @param _key   A key used to namespace the attestation.\n @param _val   An arbitrary value stored as part of the attestation."
            },
            "functionSelector": "702b9dee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attest",
            "nameLocation": "1642:6:118",
            "parameters": {
              "id": 46605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46600,
                  "mutability": "mutable",
                  "name": "_about",
                  "nameLocation": "1666:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46627,
                  "src": "1658:14:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46602,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "1690:4:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46627,
                  "src": "1682:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46601,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46604,
                  "mutability": "mutable",
                  "name": "_val",
                  "nameLocation": "1717:4:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46627,
                  "src": "1704:17:118",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46603,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:5:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1648:79:118"
            },
            "returnParameters": {
              "id": 46606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1735:0:118"
            },
            "scope": 46671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46670,
            "nodeType": "FunctionDefinition",
            "src": "2010:376:118",
            "nodes": [],
            "body": {
              "id": 46669,
              "nodeType": "Block",
              "src": "2077:309:118",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46636,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2095:6:118",
                      "nodeType": "VariableDeclaration",
                      "scope": 46669,
                      "src": "2087:14:118",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2087:7:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46639,
                  "initialValue": {
                    "expression": {
                      "id": 46637,
                      "name": "_attestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46632,
                      "src": "2104:13:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct AttestationStation.AttestationData calldata[] calldata"
                      }
                    },
                    "id": 46638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2104:20:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:37:118"
                },
                {
                  "body": {
                    "id": 46667,
                    "nodeType": "Block",
                    "src": "2168:212:118",
                    "statements": [
                      {
                        "assignments": [
                          46649
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 46649,
                            "mutability": "mutable",
                            "name": "attestation",
                            "nameLocation": "2205:11:118",
                            "nodeType": "VariableDeclaration",
                            "scope": 46667,
                            "src": "2182:34:118",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                              "typeString": "struct AttestationStation.AttestationData"
                            },
                            "typeName": {
                              "id": 46648,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 46647,
                                "name": "AttestationData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 46567,
                                "src": "2182:15:118"
                              },
                              "referencedDeclaration": 46567,
                              "src": "2182:15:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                                "typeString": "struct AttestationStation.AttestationData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 46653,
                        "initialValue": {
                          "baseExpression": {
                            "id": 46650,
                            "name": "_attestations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46632,
                            "src": "2219:13:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct AttestationStation.AttestationData calldata[] calldata"
                            }
                          },
                          "id": 46652,
                          "indexExpression": {
                            "id": 46651,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46641,
                            "src": "2233:1:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2219:16:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_calldata_ptr",
                            "typeString": "struct AttestationStation.AttestationData calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2182:53:118"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 46655,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46649,
                                "src": "2257:11:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory"
                                }
                              },
                              "id": 46656,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "about",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46562,
                              "src": "2257:17:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 46657,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46649,
                                "src": "2276:11:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory"
                                }
                              },
                              "id": 46658,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "key",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46564,
                              "src": "2276:15:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 46659,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46649,
                                "src": "2293:11:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                                  "typeString": "struct AttestationStation.AttestationData memory"
                                }
                              },
                              "id": 46660,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "val",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46566,
                              "src": "2293:15:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 46654,
                            "name": "attest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46627,
                            "src": "2250:6:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes32,bytes memory)"
                            }
                          },
                          "id": 46661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2250:59:118",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46662,
                        "nodeType": "ExpressionStatement",
                        "src": "2250:59:118"
                      },
                      {
                        "id": 46666,
                        "nodeType": "UncheckedBlock",
                        "src": "2324:46:118",
                        "statements": [
                          {
                            "expression": {
                              "id": 46664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2352:3:118",
                              "subExpression": {
                                "id": 46663,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46641,
                                "src": "2354:1:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 46665,
                            "nodeType": "ExpressionStatement",
                            "src": "2352:3:118"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46644,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46641,
                      "src": "2154:1:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 46645,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46636,
                      "src": "2158:6:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2154:10:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46668,
                  "initializationExpression": {
                    "assignments": [
                      46641
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 46641,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2147:1:118",
                        "nodeType": "VariableDeclaration",
                        "scope": 46668,
                        "src": "2139:9:118",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2139:7:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 46643,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 46642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2151:1:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2139:13:118"
                  },
                  "nodeType": "ForStatement",
                  "src": "2134:246:118"
                }
              ]
            },
            "documentation": {
              "id": 46628,
              "nodeType": "StructuredDocumentation",
              "src": "1869:136:118",
              "text": " @notice Allows anyone to create attestations.\n @param _attestations An array of AttestationData structs."
            },
            "functionSelector": "5eb5ea10",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attest",
            "nameLocation": "2019:6:118",
            "parameters": {
              "id": 46633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46632,
                  "mutability": "mutable",
                  "name": "_attestations",
                  "nameLocation": "2053:13:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 46670,
                  "src": "2026:40:118",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct AttestationStation.AttestationData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 46630,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 46629,
                        "name": "AttestationData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46567,
                        "src": "2026:15:118"
                      },
                      "referencedDeclaration": 46567,
                      "src": "2026:15:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                        "typeString": "struct AttestationStation.AttestationData"
                      }
                    },
                    "id": 46631,
                    "nodeType": "ArrayTypeName",
                    "src": "2026:17:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                      "typeString": "struct AttestationStation.AttestationData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:42:118"
            },
            "returnParameters": {
              "id": 46634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2077:0:118"
            },
            "scope": 46671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46559,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106075,
              "src": "265:6:118"
            },
            "id": 46560,
            "nodeType": "InheritanceSpecifier",
            "src": "265:6:118"
          }
        ],
        "canonicalName": "AttestationStation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46558,
          "nodeType": "StructuredDocumentation",
          "src": "111:122:118",
          "text": " @title AttestationStation\n @author Optimism Collective\n @author Gitcoin\n @notice Where attestations live."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46671,
          106075
        ],
        "name": "AttestationStation",
        "nameLocation": "243:18:118",
        "scope": 46672,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 118
}