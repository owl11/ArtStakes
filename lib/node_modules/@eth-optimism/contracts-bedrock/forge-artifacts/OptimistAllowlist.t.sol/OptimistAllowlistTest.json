{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "about",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "AttestationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_constructor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromAllowlistAttestor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromInvite_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromWrongAllowlistAttestor_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromWrongOptimistInviter_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_withMultipleAttestations_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_withoutAnyAttestations_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506180bc806200003e6000396000f3fe60806040523480156200001157600080fd5b5060043610620001a15760003560e01c8063a2ebe18411620000e9578063c48738751162000097578063ec85c462116200006e578063ec85c46214620002ad578063f4fa2a4514620002b7578063fa7626d414620002c157600080fd5b8063c4873875146200028f578063defdd1151462000299578063e20c9f7114620002a357600080fd5b8063b5508aa911620000cc578063b5508aa91462000260578063ba414fa6146200026a578063c4625960146200028557600080fd5b8063a2ebe184146200024c578063b44cd0e1146200025657600080fd5b806366d9a9a0116200015357806385226c81116200012a57806385226c81146200021f578063910cfdae1462000238578063916a17c6146200024257600080fd5b806366d9a9a014620001f25780637d9f5772146200020b57806380aee254146200021557600080fd5b8063276beb5f1162000188578063276beb5f14620001d45780633e5e3c2314620001de5780633f7286f414620001e857600080fd5b80630a9254e414620001a65780631ed7831c14620001b2575b600080fd5b620001b0620002cf565b005b620001bc62000896565b604051620001cb9190620036c1565b60405180910390f35b620001b062000907565b620001bc62000b2d565b620001bc62000b9c565b620001fc62000c0b565b604051620001cb9190620036dd565b620001b062000d20565b620001b062000deb565b62000229620011c2565b604051620001cb919062003856565b620001b06200129c565b620001fc620012c0565b620001b0620013cc565b620001b0620013f0565b620002296200159d565b6200027462001677565b6040519015158152602001620001cb565b620001b0620017e1565b620001b062001af0565b620001b062001c0a565b620001bc62001f89565b620001b062001ff8565b620001b0620021ae565b600054620002749060ff1681565b6200030f6040518060400160405280601781526020017f616c6963655f616c6c6f776c6973744174746573746f7200000000000000000081525062002210565b601b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091178155604080518082019091529081527f73616c6c795f636f696e6261736551756573744174746573746f7200000000006020820152620003929062002210565b601c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905560408051808201909152600381527f74656400000000000000000000000000000000000000000000000000000000006020820152620004169062002210565b601d80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905563b0b0b0b0601e8190556040517fffa186490000000000000000000000000000000000000000000000000000000081526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620004d0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004f69190620038fd565b601f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169182179055604080517fc657c71800000000000000000000000000000000000000000000000000000000815260048101929092526024820152600360448201527f626f6200000000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620005d557600080fd5b505af1158015620005ea573d6000803e3d6000fd5b5050601b546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200067c57600080fd5b505af115801562000691573d6000803e3d6000fd5b5050601c546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200072357600080fd5b505af115801562000738573d6000803e3d6000fd5b5050601f546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015620007ca57600080fd5b505af1158015620007df573d6000803e3d6000fd5b5050601d546040517fc88a5e6d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156200087157600080fd5b505af115801562000886573d6000803e3d6000fd5b505050506200089462002224565b565b6060600d805480602002602001604051908101604052809291908181526020018280548015620008fd57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620008d1575b5050505050905090565b601d546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200098757600080fd5b505af11580156200099c573d6000803e3d6000fd5b505060208054601f5460408051808201825260048082527f74727565000000000000000000000000000000000000000000000000000000009582019590955290517f702b9dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416965063702b9dee955062000a549492909316927f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e7669746500000092016200391d565b600060405180830381600087803b15801562000a6f57600080fd5b505af115801562000a84573d6000803e3d6000fd5b5050602154601f546040517f4813d8a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015262000894945091169150634813d8a6906024015b602060405180830381865afa15801562000b01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b2791906200395d565b620024f2565b6060600f805480602002602001604051908101604052809291908181526020018280548015620008fd5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620008d1575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015620008fd5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620008d1575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000d1757600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801562000cfe57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841162000caa5790505b5050505050815250508152602001906001019062000c2f565b50505050905090565b601f5462000d449073ffffffffffffffffffffffffffffffffffffffff16620024fe565b602154601f546040517f4813d8a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015262000894929190911690634813d8a6906024015b602060405180830381865afa15801562000dbf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000de591906200395d565b6200278b565b602154604080517fdb083d71000000000000000000000000000000000000000000000000000000008152905162000ea39273ffffffffffffffffffffffffffffffffffffffff169163db083d719160048083019260209291908290030181865afa15801562000e5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e849190620038fd565b60205473ffffffffffffffffffffffffffffffffffffffff1662002803565b602154604080517fdb3c3163000000000000000000000000000000000000000000000000000000008152905162000f5b9273ffffffffffffffffffffffffffffffffffffffff169163db3c31639160048083019260209291908290030181865afa15801562000f16573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f3c9190620038fd565b601b5473ffffffffffffffffffffffffffffffffffffffff1662002803565b602154604080517f3ac52df70000000000000000000000000000000000000000000000000000000081529051620010139273ffffffffffffffffffffffffffffffffffffffff1691633ac52df79160048083019260209291908290030181865afa15801562000fce573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ff49190620038fd565b601c5473ffffffffffffffffffffffffffffffffffffffff1662002803565b602154604080517f5e4f489a0000000000000000000000000000000000000000000000000000000081529051620010cb9273ffffffffffffffffffffffffffffffffffffffff1691635e4f489a9160048083019260209291908290030181865afa15801562001086573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ac9190620038fd565b60225473ffffffffffffffffffffffffffffffffffffffff1662002803565b602154604080517f54fd4d500000000000000000000000000000000000000000000000000000000081529051620008949273ffffffffffffffffffffffffffffffffffffffff16916354fd4d509160048083019260009291908290030181865afa1580156200113e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052620011869190810190620039b0565b6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525062002945565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000d17578382906000526020600020018054620012089062003a87565b80601f0160208091040260200160405190810160405280929190818152602001828054620012369062003a87565b8015620012875780601f106200125b5761010080835404028352916020019162001287565b820191906000526020600020905b8154815290600101906020018083116200126957829003601f168201915b505050505081526020019060010190620011e6565b601f5462000d449073ffffffffffffffffffffffffffffffffffffffff1662002a95565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000d1757600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015620013b357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200135f5790505b50505050508152505081526020019060010190620012e4565b601f5462000d449073ffffffffffffffffffffffffffffffffffffffff166200307a565b601d546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200147057600080fd5b505af115801562001485573d6000803e3d6000fd5b505060208054601f54602154604080517f819f7e84000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff948516975063702b9dee965092841694939091169263819f7e84926004808401938290030181865afa1580156200150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001530919062003adc565b60408051808201825260048082527f7472756500000000000000000000000000000000000000000000000000000000602083015291517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815262000a54949392016200391d565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000d17578382906000526020600020018054620015e39062003a87565b80601f0160208091040260200160405190810160405280929190818152602001828054620016119062003a87565b8015620016625780601f10620016365761010080835404028352916020019162001662565b820191906000526020600020905b8154815290600101906020018083116200164457829003601f168201915b505050505081526020019060010190620015c1565b60008054610100900460ff1615620016985750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620017dc5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000008284015282518083038401815260608301909352600092909162001740917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162003af6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526200177a9162003b40565b6000604051808303816000865af19150503d8060008114620017b9576040519150601f19603f3d011682016040523d82523d6000602084013e620017be565b606091505b5091505080806020019051810190620017d891906200395d565b9150505b919050565b601f54620018059073ffffffffffffffffffffffffffffffffffffffff16620024fe565b601f54620018299073ffffffffffffffffffffffffffffffffffffffff166200307a565b601f546200184d9073ffffffffffffffffffffffffffffffffffffffff1662002a95565b602154601f546040517f4813d8a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152620018af929190911690634813d8a69060240162000da1565b601d546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200192f57600080fd5b505af115801562001944573d6000803e3d6000fd5b505060208054601f54602154604080517fe7bd804e000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff948516975063702b9dee965092841694939091169263e7bd804e926004808401938290030181865afa158015620019c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019ef919062003adc565b60408051808201825260048082527f7472756500000000000000000000000000000000000000000000000000000000602083015291517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815262001a5c949392016200391d565b600060405180830381600087803b15801562001a7757600080fd5b505af115801562001a8c573d6000803e3d6000fd5b5050602154601f546040517f4813d8a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015262000894945091169150634813d8a69060240162000da1565b601d546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562001b7057600080fd5b505af115801562001b85573d6000803e3d6000fd5b505060208054601f54602154604080517fe7bd804e000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff948516975063702b9dee965092841694939091169263e7bd804e926004808401938290030181865afa1580156200150a573d6000803e3d6000fd5b601f5462001c2e9073ffffffffffffffffffffffffffffffffffffffff16620024fe565b602154604080517fe7bd804e000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163e7bd804e9160048083019260209291908290030181865afa15801562001c9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cc5919062003adc565b6040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482015260006064820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b15801562001d4457600080fd5b505af115801562001d59573d6000803e3d6000fd5b5050601f54601b54604080518082018252600781527f64736166736473000000000000000000000000000000000000000000000000006020820152905186955073ffffffffffffffffffffffffffffffffffffffff938416945092909116917f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d859162001de59162003b5e565b60405180910390a4601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562001e6d57600080fd5b505af115801562001e82573d6000803e3d6000fd5b505060208054601f5460408051938401815260008452517f702b9dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316955063702b9dee945062001ef293929091169186916004016200391d565b600060405180830381600087803b15801562001f0d57600080fd5b505af115801562001f22573d6000803e3d6000fd5b5050602154601f546040517f4813d8a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015262001f86945091169150634813d8a69060240162000ae3565b50565b6060600c805480602002602001604051908101604052809291908181526020018280548015620008fd5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620008d1575050505050905090565b601f546200201c9073ffffffffffffffffffffffffffffffffffffffff16620024fe565b602154604080517fe7bd804e000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163e7bd804e9160048083019260209291908290030181865afa1580156200208d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020b3919062003adc565b6040517f491cc7c200000000000000000000000000000000000000000000000000000000815260016004820181905260248201819052604482018190526064820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b1580156200213257600080fd5b505af115801562002147573d6000803e3d6000fd5b5050601f54601b546040805160208101825260008152905186955073ffffffffffffffffffffffffffffffffffffffff938416945092909116917f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d859162001de59162003b5e565b602154601f546040517f4813d8a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015262000894929190911690634813d8a69060240162000ae3565b60006200221d8262003248565b5092915050565b604051620022329062003636565b604051809103906000f0801580156200224f573d6000803e3d6000fd5b50602080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316908117909155601b54604051921691620022a89062003644565b73ffffffffffffffffffffffffffffffffffffffff928316815291166020820152604001604051809103906000f080158015620022e9573d6000803e3d6000fd5b50602280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691821790556040517ff62d188800000000000000000000000000000000000000000000000000000000815263f62d188890620023689060040162003b73565b600060405180830381600087803b1580156200238357600080fd5b505af115801562002398573d6000803e3d6000fd5b5050602054601b54601c5460225460405173ffffffffffffffffffffffffffffffffffffffff94851696509284169450908316921690620023d99062003652565b73ffffffffffffffffffffffffffffffffffffffff9485168152928416602084015290831660408301529091166060820152608001604051809103906000f0801580156200242b573d6000803e3d6000fd5b50602180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff928316179055602254604051911690620024819062003660565b6200248d919062003bb1565b604051809103906000f080158015620024aa573d6000803e3d6000fd5b50602380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b62001f8681156200278b565b604080516001808252818301909252600091816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200251557905050905060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7bd804e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620025dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002602919062003adc565b81526020016040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152508152508160008151811062002656576200265662003c0b565b6020908102919091010152601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa7906024015b600060405180830381600087803b158015620026e257600080fd5b505af1158015620026f7573d6000803e3d6000fd5b50506020546040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169250635eb5ea1091506200275390849060040162003c3a565b600060405180830381600087803b1580156200276e57600080fd5b505af115801562002783573d6000803e3d6000fd5b505050505050565b8062001f86577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620027f19060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162001f86620033b4565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462002941577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620028bd9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620028f6919062003cf1565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200292f919062003d53565b60405180910390a162002941620033b4565b5050565b8060405160200162002958919062003b40565b604051602081830303815290604052805190602001208260405160200162002981919062003b40565b604051602081830303815290604052805190602001201462002941577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162002a239060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b73747260408201527f696e675d00000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838160405162002a5c919062003d91565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516200292f919062003deb565b604080516001808252818301909252600091602080830190803683375050601f54825192935073ffffffffffffffffffffffffffffffffffffffff169183915060009062002ae75762002ae762003c0b565b73ffffffffffffffffffffffffffffffffffffffff9283166020918202929092010152601b546040517fca669fa700000000000000000000000000000000000000000000000000000000815291166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002b7457600080fd5b505af115801562002b89573d6000803e3d6000fd5b50506022546040517f25b27a3d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911692506325b27a3d915062002be890849060039060040162003e29565b600060405180830381600087803b15801562002c0357600080fd5b505af115801562002c18573d6000803e3d6000fd5b5050602354601f546040517f8ebe24e500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526000945091169150638ebe24e59060240160408051808303816000875af115801562002c93573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002cb9919062003e4d565b601e546023546040517f1c6e7f2500000000000000000000000000000000000000000000000000000000815292935060009262002d68929173ffffffffffffffffffffffffffffffffffffffff1690631c6e7f259062002d1e90879060040162003eab565b602060405180830381865afa15801562002d3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d62919062003adc565b62003537565b90506000848260405160200162002d8192919062003ed9565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fca669fa700000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff871660048301529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801562002e3357600080fd5b505af115801562002e48573d6000803e3d6000fd5b50506022546040517f187e3cd10000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff909116925063187e3cd19150602401600060405180830381600087803b15801562002eb957600080fd5b505af115801562002ece573d6000803e3d6000fd5b5050602254604080517f50b414e60000000000000000000000000000000000000000000000000000000081529051737109709ecfa91a80626ff3989d68f67f5b1dd12d945063e5d6bf029350429273ffffffffffffffffffffffffffffffffffffffff16916350b414e69160048083019260209291908290030181865afa15801562002f5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f84919062003adc565b62002f90919062003f0a565b6040518263ffffffff1660e01b815260040162002faf91815260200190565b600060405180830381600087803b15801562002fca57600080fd5b505af115801562002fdf573d6000803e3d6000fd5b50506022546040517f50eedbc200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911692506350eedbc291506200303f9088908790879060040162003f4a565b600060405180830381600087803b1580156200305a57600080fd5b505af11580156200306f573d6000803e3d6000fd5b505050505050505050565b604080516001808252818301909252600091816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200309157905050905060405180606001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001602160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663819f7e846040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003158573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200317e919062003adc565b81526020016040518060400160405280600481526020017f747275650000000000000000000000000000000000000000000000000000000081525081525081600081518110620031d257620031d262003c0b565b6020908102919091010152601c546040517fca669fa700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401620026c7565b600080826040516020016200325e919062003b40565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529082905280516020909101207fffa18649000000000000000000000000000000000000000000000000000000008252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620032fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033249190620038fd565b6040517fc657c718000000000000000000000000000000000000000000000000000000008152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c718906200337b908590879060040162003ed9565b600060405180830381600087803b1580156200339657600080fd5b505af1158015620033ab573d6000803e3d6000fd5b50505050915091565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620035095760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905262003486929160200162003af6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052620034c09162003b40565b6000604051808303816000865af19150503d8060008114620034ff576040519150601f19603f3d011682016040523d82523d6000602084013e62003504565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6040517fe341eaa4000000000000000000000000000000000000000000000000000000008152600481018390526024810182905260609060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015620035b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620035d8919062003fa9565b6040805160208101939093528281019190915260f89290921b7fff0000000000000000000000000000000000000000000000000000000000000016606082015281516041818303018152606190910190915293505050505b92915050565b610b428062003fe983390190565b611de08062004b2b83390190565b610a74806200690b83390190565b610d31806200737f83390190565b600081518084526020808501945080840160005b83811015620036b657815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010162003682565b509495945050505050565b602081526000620036d660208301846200366e565b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620037c8578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015620037b25783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906200376e565b50978a0197955050509187019160010162003705565b50919998505050505050505050565b60005b83811015620037f4578181015183820152602001620037da565b8381111562003804576000848401525b50505050565b6000815180845262003824816020860160208601620037d7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620038cd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452620038ba8583516200380a565b945092850192908501906001016200387d565b5092979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811462001f8657600080fd5b6000602082840312156200391057600080fd5b8151620036d681620038da565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006200395460608301846200380a565b95945050505050565b6000602082840312156200397057600080fd5b81518015158114620036d657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215620039c357600080fd5b815167ffffffffffffffff80821115620039dc57600080fd5b818401915084601f830112620039f157600080fd5b81518181111562003a065762003a0662003981565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171562003a4f5762003a4f62003981565b8160405282815287602084870101111562003a6957600080fd5b62003a7c836020830160208801620037d7565b979650505050505050565b600181811c9082168062003a9c57607f821691505b60208210810362003ad6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121562003aef57600080fd5b5051919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825162003b32816004850160208701620037d7565b919091016004019392505050565b6000825162003b54818460208701620037d7565b9190910192915050565b602081526000620036d660208301846200380a565b6020815260006200363060208301600f81527f4f7074696d697374496e76697465720000000000000000000000000000000000602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff82168152604060208201526000620036d660408301600f81527f4f7074696d697374496e76697465720000000000000000000000000000000000602082015260400190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562003ce3578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff1684528781015188850152860151606087850181905262003cce818601836200380a565b96890196945050509086019060010162003c61565b509098975050505050505050565b60408152600062003d2f60408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b905073ffffffffffffffffffffffffffffffffffffffff8316602083015292915050565b60408152600062003d2f60408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b60408152600062003dcf60408301600a81527f2020457870656374656400000000000000000000000000000000000000000000602082015260400190565b828103602084015262003de381856200380a565b949350505050565b60408152600062003dcf60408301600a81527f2020202041637475616c00000000000000000000000000000000000000000000602082015260400190565b60408152600062003e3e60408301856200366e565b90508260208301529392505050565b60006040828403121562003e6057600080fd5b6040516040810181811067ffffffffffffffff8211171562003e865762003e8662003981565b604052825162003e9681620038da565b81526020928301519281019290925250919050565b815173ffffffffffffffffffffffffffffffffffffffff168152602080830151908201526040810162003630565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600062003de360408301846200380a565b6000821982111562003f45577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b73ffffffffffffffffffffffffffffffffffffffff8416815262003f916020820184805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b6080606082015260006200395460808301846200380a565b60008060006060848603121562003fbf57600080fd5b835160ff8116811462003fd157600080fd5b60208501516040909501519096949550939250505056fe60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c051610af361004f60003960006101ad015260006101840152600061015b0152610af36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f36600461046c565b6100aa565b604051610071919061051e565b60405180910390f35b610064610154565b610095610090366004610538565b6101f7565b005b6100956100a5366004610687565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d3906106de565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff906106de565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f0000000000000000000000000000000000000000000000000000000000000000610306565b6101a87f0000000000000000000000000000000000000000000000000000000000000000610306565b6101d17f0000000000000000000000000000000000000000000000000000000000000000610306565b6040516020016101e393929190610731565b604051602081830303815290604052905090565b8060005b81811015610254576000848483818110610217576102176107a7565b905060200281019061022991906107d6565b61023290610814565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff871684528252808320858452909152902061029a82826108df565b50818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102f9919061051e565b60405180910390a4505050565b60608160000361034957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610373578061035d81610a28565b915061036c9050600a83610a8f565b915061034d565b60008167ffffffffffffffff81111561038e5761038e6105ad565b6040519080825280601f01601f1916602001820160405280156103b8576020820181803683370190505b5090505b841561043b576103cd600183610aa3565b91506103da600a86610aba565b6103e5906030610ace565b60f81b8183815181106103fa576103fa6107a7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610434600a86610a8f565b94506103bc565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461046757600080fd5b919050565b60008060006060848603121561048157600080fd5b61048a84610443565b925061049860208501610443565b9150604084013590509250925092565b60005b838110156104c35781810151838201526020016104ab565b838111156102545750506000910152565b600081518084526104ec8160208601602086016104a8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061053160208301846104d4565b9392505050565b6000806020838503121561054b57600080fd5b823567ffffffffffffffff8082111561056357600080fd5b818501915085601f83011261057757600080fd5b81358181111561058657600080fd5b8660208260051b850101111561059b57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126105ed57600080fd5b813567ffffffffffffffff80821115610608576106086105ad565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561064e5761064e6105ad565b8160405283815286602085880101111561066757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561069c57600080fd5b6106a584610443565b925060208401359150604084013567ffffffffffffffff8111156106c857600080fd5b6106d4868287016105dc565b9150509250925092565b600181811c908216806106f257607f821691505b60208210810361072b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600084516107438184602089016104a8565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161077f816001850160208a016104a8565b6001920191820152835161079a8160028401602088016104a8565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261080a57600080fd5b9190910192915050565b60006060823603121561082657600080fd5b6040516060810167ffffffffffffffff828210818311171561084a5761084a6105ad565b8160405261085785610443565b835260208501356020840152604085013591508082111561087757600080fd5b50610884368286016105dc565b60408301525092915050565b601f8211156108da57600081815260208120601f850160051c810160208610156108b75750805b601f850160051c820191505b818110156108d6578281556001016108c3565b5050505b505050565b815167ffffffffffffffff8111156108f9576108f96105ad565b61090d8161090784546106de565b84610890565b602080601f831160018114610960576000841561092a5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556108d6565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156109ad5788860151825594840194600190910190840161098e565b50858210156109e957878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5957610a596109f9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610a9e57610a9e610a60565b500490565b600082821015610ab557610ab56109f9565b500390565b600082610ac957610ac9610a60565b500690565b60008219821115610ae157610ae16109f9565b50019056fea164736f6c634300080f000a6101206040523480156200001257600080fd5b5060405162001de038038062001de0833981016040819052620000359162000076565b6001608052600060a081905260c0526001600160a01b0391821660e0521661010052620000b5565b6001600160a01b03811681146200007357600080fd5b50565b600080604083850312156200008a57600080fd5b825162000097816200005d565b6020840151909250620000aa816200005d565b809150509250929050565b60805160a05160c05160e05161010051611cd26200010e60003960008181610257015281816106510152610c0201526000818160f401526103b401526000610da101526000610d7801526000610d4f0152611cd26000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063916db22f1161008c578063db083d7111610066578063db083d7114610252578063de2dd22114610279578063eccec5a814610299578063f62d1888146102d557600080fd5b8063916db22f146101e4578063b4245d731461020b578063c4fc453d1461022b57600080fd5b806350b414e6116100c857806350b414e61461016857806350eedbc21461017e57806354fd4d50146101915780635fda04c7146101a657600080fd5b806314b47241146100ef578063187e3cd11461014057806325b27a3d14610155575b600080fd5b6101167f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61015361014e36600461165f565b6102e8565b005b610153610163366004611678565b61039c565b610170603c81565b604051908152602001610137565b61015361018c3660046117df565b6106bf565b610199610d48565b60405161013791906118f5565b6101d46101b4366004611908565b603660209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610137565b6101707f6f7074696d6973742e63616e2d696e766974650000000000000000000000000081565b61017061021936600461165f565b60356020526000908152604090205481565b6101707f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6101167f000000000000000000000000000000000000000000000000000000000000000081565b610170610287366004611932565b60376020526000908152604090205481565b6101996040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6101536102e336600461194d565b610deb565b60008181526035602052604090205415610389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4f7074696d697374496e76697465723a20636f6d6d69746d656e7420616c726560448201527f616479206d61646500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000908152603560205260409020429055565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f4f7074696d697374496e76697465723a206f6e6c7920696e766974652067726160448201527f6e7465722063616e206772616e7420696e7669746573000000000000000000006064820152608401610380565b8160008167ffffffffffffffff81111561047d5761047d61171c565b6040519080825280602002602001820160405280156104ca57816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161049b5790505b50905060005b828110156106135783603760008888858181106104ef576104ef611996565b90506020020160208101906105049190611932565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550604051806060016040528087878481811061055f5761055f611996565b90506020020160208101906105749190611932565b73ffffffffffffffffffffffffffffffffffffffff1681526020017f6f7074696d6973742e63616e2d696e766974650000000000000000000000000081526020016040518060400160405280600481526020017f747275650000000000000000000000000000000000000000000000000000000081525081525082828151811061060057610600611996565b60209081029190910101526001016104d0565b506040517f5eb5ea1000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635eb5ea10906106869084906004016119c5565b600060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b505050505050505050565b60006035600085846040516020016106d8929190611a78565b604051602081830303815290604052805190602001208152602001908152602001600020549050600081116107b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f4f7074696d697374496e76697465723a20636c61696d657220616e642073696760448201527f6e61747572652068617665206e6f74206265656e20636f6d6d6974746564207960648201527f6574000000000000000000000000000000000000000000000000000000000000608482015260a401610380565b426107c1603c83611ad6565b111561084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f4f7074696d697374496e76697465723a206d696e696d756d20636f6d6d69746d60448201527f656e7420706572696f6420686173206e6f7420656c61707365642079657400006064820152608401610380565b60006108d27f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce6108826020870187611932565b6040805160208181019490945273ffffffffffffffffffffffffffffffffffffffff9092169082015290860135606082015260800160405160208183030381529060405280519060200120610fb5565b90506108eb6108e46020860186611932565b8285611024565b610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4f7074696d697374496e76697465723a20696e76616c6964207369676e61747560448201527f72650000000000000000000000000000000000000000000000000000000000006064820152608401610380565b603660006109886020870187611932565b73ffffffffffffffffffffffffffffffffffffffff1681526020808201929092526040908101600090812087840135825290925290205460ff1615610a4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f4f7074696d697374496e76697465723a206e6f6e63652068617320616c72656160448201527f6479206265656e207573656400000000000000000000000000000000000000006064820152608401610380565b600160366000610a626020880188611932565b73ffffffffffffffffffffffffffffffffffffffff1681526020808201929092526040908101600090812088840180358352935290812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016931515939093179092556037908290610ad69088611932565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f7074696d697374496e76697465723a2069737375657220686173206e6f206960448201527f6e766974657300000000000000000000000000000000000000000000000000006064820152608401610380565b60376000610baf6020870187611932565b73ffffffffffffffffffffffffffffffffffffffff9081168252602080830193909352604090910160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190557f0000000000000000000000000000000000000000000000000000000000000000169063702b9dee9087907f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e7669746500000090610c5990890189611932565b6040805173ffffffffffffffffffffffffffffffffffffffff9092166020830152016040516020818303038152906040526040518463ffffffff1660e01b8152600401610ca893929190611aee565b600060405180830381600087803b158015610cc257600080fd5b505af1158015610cd6573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff86169050610cff6020860186611932565b73ffffffffffffffffffffffffffffffffffffffff167f745d3c5bc92ab40b418069bf8f8e2030807effceb88bbaa07ee01574f16be47560405160405180910390a35050505050565b6060610d737f00000000000000000000000000000000000000000000000000000000000000006111f3565b610d9c7f00000000000000000000000000000000000000000000000000000000000000006111f3565b610dc57f00000000000000000000000000000000000000000000000000000000000000006111f3565b604051602001610dd793929190611b2c565b604051602081830303815290604052905090565b600054610100900460ff1615808015610e0b5750600054600160ff909116105b80610e255750303b158015610e25575060005460ff166001145b610eb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610380565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610f0f57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610f4e826040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250611330565b8015610fb157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600061101e610fc26113d1565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006110338585611451565b9092509050600081600481111561104c5761104c611ba2565b14801561108457508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15611094576001925050506111ec565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016110c9929190611bd1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516111529190611bea565b600060405180830381855afa9150503d806000811461118d576040519150601f19603f3d011682016040523d82523d6000602084013e611192565b606091505b50915091508180156111a5575080516020145b80156111e5575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906111e39083016020908101908401611c06565b145b9450505050505b9392505050565b60608160000361123657505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611260578061124a81611c1f565b91506112599050600a83611c86565b915061123a565b60008167ffffffffffffffff81111561127b5761127b61171c565b6040519080825280601f01601f1916602001820160405280156112a5576020820181803683370190505b5090505b8415611328576112ba600183611c9a565b91506112c7600a86611cb1565b6112d2906030611ad6565b60f81b8183815181106112e7576112e7611996565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611321600a86611c86565b94506112a9565b949350505050565b600054610100900460ff166113c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610380565b610fb18282611496565b600061144c7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61140060015490565b6002546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b60008082516041036114875760208301516040840151606085015160001a61147b87828585611547565b9450945050505061148f565b506000905060025b9250929050565b600054610100900460ff1661152d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610380565b815160209283012081519190920120600191909155600255565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561157e5750600090506003611656565b8460ff16601b1415801561159657508460ff16601c14155b156115a75750600090506004611656565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156115fb573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661164f57600060019250925050611656565b9150600090505b94509492505050565b60006020828403121561167157600080fd5b5035919050565b60008060006040848603121561168d57600080fd5b833567ffffffffffffffff808211156116a557600080fd5b818601915086601f8301126116b957600080fd5b8135818111156116c857600080fd5b8760208260051b85010111156116dd57600080fd5b6020928301989097509590910135949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461171757600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff808411156117665761176661171c565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156117ac576117ac61171c565b816040528093508581528686860111156117c557600080fd5b858560208301376000602087830101525050509392505050565b600080600083850360808112156117f557600080fd5b6117fe856116f3565b935060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561183057600080fd5b50602084019150606084013567ffffffffffffffff81111561185157600080fd5b8401601f8101861361186257600080fd5b6118718682356020840161174b565b9150509250925092565b60005b8381101561189657818101518382015260200161187e565b838111156118a5576000848401525b50505050565b600081518084526118c381602086016020860161187b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006111ec60208301846118ab565b6000806040838503121561191b57600080fd5b611924836116f3565b946020939093013593505050565b60006020828403121561194457600080fd5b6111ec826116f3565b60006020828403121561195f57600080fd5b813567ffffffffffffffff81111561197657600080fd5b8201601f8101841361198757600080fd5b6113288482356020840161174b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611a6a578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff16845287810151888501528601516060878501819052611a56818601836118ab565b9689019694505050908601906001016119ec565b509098975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061132860408301846118ab565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611ae957611ae9611aa7565b500190565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000611b2360608301846118ab565b95945050505050565b60008451611b3e81846020890161187b565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551611b7a816001850160208a0161187b565b60019201918201528351611b9581600284016020880161187b565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061132860408301846118ab565b60008251611bfc81846020870161187b565b9190910192915050565b600060208284031215611c1857600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c5057611c50611aa7565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611c9557611c95611c57565b500490565b600082821015611cac57611cac611aa7565b500390565b600082611cc057611cc0611c57565b50069056fea164736f6c634300080f000a61016060405234801561001157600080fd5b50604051610a74380380610a748339810160408190526100309161007c565b6001608052600060a081905260c0526001600160a01b0393841660e0529183166101005282166101205216610140526100db565b6001600160a01b038116811461007957600080fd5b50565b6000806000806080858703121561009257600080fd5b845161009d81610064565b60208601519094506100ae81610064565b60408601519093506100bf81610064565b60608601519092506100d081610064565b939692955090935050565b60805160a05160c05160e0516101005161012051610140516109246101506000396000818161011b015261035a0152600081816092015261030d01526000818161019e01526102c001526000818161017701526105360152600061026f015260006102460152600061021d01526109246000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063819f7e841161005b578063819f7e841461013d578063db083d7114610172578063db3c316314610199578063e7bd804e146101c057600080fd5b80633ac52df71461008d5780634813d8a6146100de57806354fd4d50146101015780635e4f489a14610116575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f16100ec3660046105cd565b6101e7565b60405190151581526020016100d5565b610109610216565b6040516100d5919061063a565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101647f636f696e626173652e71756573742d656c696769626c6500000000000000000081565b6040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6101647f6f7074696d6973742e63616e2d6d696e7400000000000000000000000000000081565b60006101f2826102b9565b80610201575061020182610306565b80610210575061021082610353565b92915050565b60606102417f00000000000000000000000000000000000000000000000000000000000000006103a0565b61026a7f00000000000000000000000000000000000000000000000000000000000000006103a0565b6102937f00000000000000000000000000000000000000000000000000000000000000006103a0565b6040516020016102a59392919061068b565b604051602081830303815290604052905090565b60006102107f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e740000000000000000000000000000006104dd565b60006102107f0000000000000000000000000000000000000000000000000000000000000000837f636f696e626173652e71756573742d656c696769626c650000000000000000006104dd565b60006102107f0000000000000000000000000000000000000000000000000000000000000000837f6f7074696d6973742e63616e2d6d696e742d66726f6d2d696e766974650000006104dd565b6060816000036103e357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561040d57806103f781610730565b91506104069050600a83610797565b91506103e7565b60008167ffffffffffffffff811115610428576104286107ab565b6040519080825280601f01601f191660200182016040528015610452576020820181803683370190505b5090505b84156104d5576104676001836107da565b9150610474600a866107f1565b61047f906030610805565b60f81b8183815181106104945761049461081d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506104ce600a86610797565b9450610456565b949350505050565b6040517f29b42cb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015283811660248301526044820183905260009182917f000000000000000000000000000000000000000000000000000000000000000016906329b42cb590606401600060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105c3919081019061084c565b5111949350505050565b6000602082840312156105df57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461060357600080fd5b9392505050565b60005b8381101561062557818101518382015260200161060d565b83811115610634576000848401525b50505050565b602081526000825180602084015261065981604085016020870161060a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000845161069d81846020890161060a565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516106d9816001850160208a0161060a565b600192019182015283516106f481600284016020880161060a565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361076157610761610701565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107a6576107a6610768565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156107ec576107ec610701565b500390565b60008261080057610800610768565b500690565b6000821982111561081857610818610701565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561085e57600080fd5b815167ffffffffffffffff8082111561087657600080fd5b818401915084601f83011261088a57600080fd5b81518181111561089c5761089c6107ab565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156108e2576108e26107ab565b816040528281528760208487010111156108fb57600080fd5b61090c83602083016020880161060a565b97965050505050505056fea164736f6c634300080f000a60806040523480156200001157600080fd5b5060405162000d3138038062000d3183398101604081905262000034916200007c565b600080546001600160a01b0319166001600160a01b03841617905560016200005d82826200020b565b505050620002d7565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200009057600080fd5b82516001600160a01b0381168114620000a857600080fd5b602084810151919350906001600160401b0380821115620000c857600080fd5b818601915086601f830112620000dd57600080fd5b815181811115620000f257620000f262000066565b604051601f8201601f19908116603f011681019083821181831017156200011d576200011d62000066565b8160405282815289868487010111156200013657600080fd5b600093505b828410156200015a57848401860151818501870152928501926200013b565b828411156200016c5760008684830101525b8096505050505050509250929050565b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020657600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b5050505b505050565b81516001600160401b0381111562000227576200022762000066565b6200023f816200023884546200017c565b84620001b8565b602080601f8311600181146200027757600084156200025e5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a85788860151825594840194600190910190840162000287565b5085821015620002c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610a4a80620002e76000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "4867:5367:172:-:0;;;1572:26:266;;;1594:4;-1:-1:-1;;1572:26:266;;;;;;;;3161:44:269;;;;;;;;;;;4867:5367:172;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "4867:5367:172:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:568;;;:::i;:::-;;2161:134:272;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7790:329:172;;;:::i;2930:133:272:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;5835:169:172:-;;;:::i;4937:520::-;;;:::i;2301:140:272:-;;;:::i;:::-;;;;;;;:::i;6525:157:172:-;;;:::i;2778:146:272:-;;;:::i;6162:177:172:-;;;:::i;7267:381::-;;;:::i;1866:141:272:-;;;:::i;1819:584:266:-;;;:::i;:::-;;;4090:14:283;;4083:22;4065:41;;4053:2;4038:18;1819:584:266;3925:187:283;8233:630:172;;;:::i;6791:366::-;;;:::i;8957:581::-;;;:::i;2013:142:272:-;;;:::i;9655:577:172:-;;;:::i;5577:138::-;;;:::i;1572:26:266:-;;;;;;;;;1109:568:172;1169:35;;;;;;;;;;;;;;;;;;:8;:35::i;:::-;1143:23;:61;;;;;;;;;;;;;;;1244:39;;;;;;;;;;;;;;;;;;;:8;:39::i;:::-;1214:27;:69;;;;;;;;;;;;;;;1299:15;;;;;;;;;;;;;;;;;;;:8;:15::i;:::-;1293:3;:21;;;;;;;;;;;;;;;1341:10;1325:13;:26;;;1367:22;;;;;;;;4263:25:283;;;;1367:7:172;;;;4236:18:283;;1367:22:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1361:3;:28;;;;;;;;;;;;;;1399:20;;;;;;;;;4926:74:283;;;;5016:18;;;5009:30;5075:1;5055:18;;;5048:29;5113:5;5093:18;;;5086:33;1399:8:172;;;;5136:19:283;;1399:20:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1487:23:172;;1479:41;;;;;:7;1487:23;;;1479:41;;;5366:74:283;1512:7:172;5456:18:283;;;5449:34;1479:7:172;;-1:-1:-1;1479:7:172;;-1:-1:-1;5339:18:283;;1479:41:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1538:27:172;;1530:45;;;;;:7;1538:27;;;1530:45;;;5366:74:283;1567:7:172;5456:18:283;;;5449:34;1530:7:172;;-1:-1:-1;1530:7:172;;-1:-1:-1;5339:18:283;;1530:45:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1593:3:172;;1585:21;;;;;:7;1593:3;;;1585:21;;;5366:74:283;1598:7:172;5456:18:283;;;5449:34;1585:7:172;;-1:-1:-1;1585:7:172;;-1:-1:-1;5339:18:283;;1585:21:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1624:3:172;;1616:21;;;;;:7;1624:3;;;1616:21;;;5366:74:283;1629:7:172;5456:18:283;;;5449:34;1616:7:172;;-1:-1:-1;1616:7:172;;-1:-1:-1;5339:18:283;;1616:21:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:22;:20;:22::i;:::-;1109:568::o;2161:134:272:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;7790:329:172:-;7881:3;;7872:13;;;;;:8;7881:3;;;7872:13;;;5640:74:283;7872:8:172;;;;5613:18:283;;7872:13:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7895:18:172;;;7934:3;;8028:13;;;;;;;;;;;;;;;;;;;;7895:156;;;;;:18;;;;;-1:-1:-1;7895:25:172;;-1:-1:-1;7895:156:172;;7934:3;;;;;418:40:122;;7895:156:172;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8073:17:172;;8107:3;;8073:38;;;;;:17;8107:3;;;8073:38;;;5640:74:283;8061:51:172;;-1:-1:-1;8073:17:172;;;-1:-1:-1;8073:33:172;;5613:18:283;;8073:38:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8061:11;:51::i;2930:133:272:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;5835:169:172:-;5933:3;;5917:20;;5933:3;;5917:15;:20::i;:::-;5958:17;;5992:3;;5958:38;;;;;:17;5992:3;;;5958:38;;;5640:74:283;5947:50:172;;5958:17;;;;;:33;;5613:18:283;;5958:38:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5947:10;:50::i;4937:520::-;5057:17;;:39;;;;;;;;5040:87;;5057:17;;;:37;;:39;;;;;;;;;;;;;;:17;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5107:18;;;;5040:8;:87::i;:::-;5146:17;;:38;;;;;;;;5137:73;;5146:17;;;:36;;:38;;;;;;;;;;;;;;:17;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5186:23;;;;5137:8;:73::i;:::-;5229:17;;:43;;;;;;;;5220:82;;5229:17;;;:41;;:43;;;;;;;;;;;;;;:17;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5274:27;;;;5220:8;:82::i;:::-;5329:17;;:36;;;;;;;;5312:81;;5329:17;;;:34;;:36;;;;;;;;;;;;;;:17;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5376:15;;;;5312:8;:81::i;:::-;5413:17;;:27;;;;;;;;5404:46;;5413:17;;;:25;;:27;;;;;:17;;:27;;;;;;;:17;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5404:46;;;;;;;;;;;;;;;;;:8;:46::i;2301:140:272:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6525:157:172;6611:3;;6596:19;;6611:3;;6596:14;:19::i;2778:146:272:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6162:177:172;6268:3;;6248:24;;6268:3;;6248:19;:24::i;7267:381::-;7414:3;;7405:13;;;;;:8;7414:3;;;7405:13;;;5640:74:283;7405:8:172;;;;5613:18:283;;7405:13:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7428:18:172;;;7467:3;;7484:17;;:59;;;;;;;;7428:18;;;;;-1:-1:-1;7428:25:172;;-1:-1:-1;7467:3:172;;;;7484:17;;;;;:57;;:59;;;;;;;;;;:17;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7557:13;;;;;;;;;;;;;;;;;7428:152;;;;;;;;;;;;;;;;:::i;1866:141:272:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:266;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:266;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5366:74:283;;;2221:17:266;5456:18:283;;;5449:34;2196:43:266;;;;;;;;;5339:18:283;;;2196:43:266;;;-1:-1:-1;;1671:64:266;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:266:o;8233:630:172:-;8334:3;;8318:20;;8334:3;;8318:15;:20::i;:::-;8368:3;;8348:24;;8368:3;;8348:19;:24::i;:::-;8397:3;;8382:19;;8397:3;;8382:14;:19::i;:::-;8423:17;;8457:3;;8423:38;;;;;:17;8457:3;;;8423:38;;;5640:74:283;8412:50:172;;8423:17;;;;;:33;;5613:18:283;;8423:38:172;5494:226:283;8412:50:172;8549:3;;8540:13;;;;;:8;8549:3;;;8540:13;;;5640:74:283;8540:8:172;;;;5613:18:283;;8540:13:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8563:18:172;;;8602:3;;8619:17;;:53;;;;;;;;8563:18;;;;;-1:-1:-1;8563:25:172;;-1:-1:-1;8602:3:172;;;;8619:17;;;;;:51;;:53;;;;;;;;;;:17;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8686:13;;;;;;;;;;;;;;;;;8563:146;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8817:17:172;;8851:3;;8817:38;;;;;:17;8851:3;;;8817:38;;;5640:74:283;8806:50:172;;-1:-1:-1;8817:17:172;;;-1:-1:-1;8817:33:172;;5613:18:283;;8817:38:172;5494:226:283;6791:366:172;6929:3;;6920:13;;;;;:8;6929:3;;;6920:13;;;5640:74:283;6920:8:172;;;;5613:18:283;;6920:13:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6943:18:172;;;6982:3;;6999:17;;:53;;;;;;;;6943:18;;;;;-1:-1:-1;6943:25:172;;-1:-1:-1;6982:3:172;;;;6999:17;;;;;:51;;:53;;;;;;;;;;:17;:53;;;;;;;;;;;;;;8957:581;9109:3;;9093:20;;9109:3;;9093:15;:20::i;:::-;9138:17;;:53;;;;;;;;9124:11;;9138:17;;;:51;;:53;;;;;;;;;;;;;;:17;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9201:38;;;;;9215:4;9201:38;;;9683:41:283;;;9740:18;;;9733:50;;;9799:18;;;9792:50;309:37:267;9858:18:283;;;9851:50;9124:67:172;;-1:-1:-1;9201:13:172;;;;9655:19:283;;9201:38:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9298:3:172;;9273:23;;9308:16;;;;;;;;;;;;;;;;9254:71;;9303:3;;-1:-1:-1;9298:3:172;;;;;-1:-1:-1;9273:23:172;;;;;9254:71;;;;;:::i;:::-;;;;;;;;9389:23;;9380:33;;;;;:8;9389:23;;;9380:33;;;5640:74:283;9380:8:172;;;;5613:18:283;;9380:33:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9423:18:172;;;9449:3;;9459:9;;;;;;;;-1:-1:-1;9459:9:172;;9423:46;;;;:18;;;;;-1:-1:-1;9423:25:172;;-1:-1:-1;9423:46:172;;9449:3;;;;;9454;;9423:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9492:17:172;;9526:3;;9492:38;;;;;:17;9526:3;;;9492:38;;;5640:74:283;9480:51:172;;-1:-1:-1;9492:17:172;;;-1:-1:-1;9492:33:172;;5613:18:283;;9492:38:172;5494:226:283;9480:51:172;9040:498;8957:581::o;2013:142:272:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;9655:577:172:-;9811:3;;9795:20;;9811:3;;9795:15;:20::i;:::-;9840:17;;:53;;;;;;;;9826:11;;9840:17;;;:51;;:53;;;;;;;;;;;;;;:17;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9903:37;;;;;9917:4;9903:37;;;9683:41:283;;;9740:18;;;9733:50;;;9799:18;;;9792:50;;;9858:18;;;9851:50;9826:67:172;;-1:-1:-1;9903:13:172;;;;9655:19:283;;9903:37:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9999:3:172;;9974:23;;10009:9;;;;;;;;-1:-1:-1;10009:9:172;;9955:64;;10004:3;;-1:-1:-1;9999:3:172;;;;;-1:-1:-1;9974:23:172;;;;;9955:64;;;;;:::i;5577:138::-;5669:17;;5703:3;;5669:38;;;;;:17;5703:3;;;5669:38;;;5640:74:283;5657:51:172;;5669:17;;;;;:33;;5613:18:283;;5669:38:172;5494:226:283;16415:125:270;16479:12;16513:20;16528:4;16513:14;:20::i;:::-;-1:-1:-1;16503:30:270;16415:125;-1:-1:-1;;16415:125:270:o;4306:557:172:-;4378:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4357:18:172;:45;;;;;;;;;;;;;;4451:23;;4431:64;;4451:23;;;4431:64;;;:::i;:::-;10347:42:283;10416:15;;;10398:34;;10468:15;;10463:2;10448:18;;10441:43;10325:2;10310:18;4431:64:172;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4413:15:172;:82;;;;;;;;;;;;;;4505:45;;;;;:26;;:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4616:18:172;;4648:23;;4685:27;;4734:15;;4581:179;;4616:18;;;;;-1:-1:-1;4648:23:172;;;;-1:-1:-1;4685:27:172;;;;4734:15;;4581:179;;;:::i;:::-;11215:42:283;11284:15;;;11266:34;;11336:15;;;11331:2;11316:18;;11309:43;11388:15;;;11383:2;11368:18;;11361:43;11440:15;;;11435:2;11420:18;;11413:43;11192:3;11177:19;4581:179:172;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4561:17:172;:199;;;;;;;;;;;4821:15;;4795:61;;4821:15;;;4795:61;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4771:21:172;:85;;;;;;;;;;;;;;;4306:557::o;587:83:268:-;646:17;658:4;657:5;646:10;:17::i;1683:550:172:-;1817:43;;;1858:1;1817:43;;;;;;;;;1743:71;;1817:43;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1817:43:172;;;;;;;;;;;;;;;1743:117;;1954:177;;;;;;;;2010:6;1954:177;;;;;;2035:17;;;;;;;;;;;:51;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:177;;;;2107:13;;;;;;;;;;;;;;;;;1954:177;;;1933:15;1949:1;1933:18;;;;;;;;:::i;:::-;;;;;;;;;;:198;2150:23;;2141:33;;;;;:8;2150:23;;;2141:33;;;5640:74:283;2141:8:172;;;;5613:18:283;;2141:33:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2184:18:172;;:42;;;;;:18;;;;;-1:-1:-1;2184:25:172;;-1:-1:-1;2184:42:172;;2210:15;;2184:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1733:500;1683:550;:::o;3255:157:266:-;3315:9;3310:96;;3345:30;;;;;13526:2:283;13508:21;;;13565:2;13545:18;;;13538:30;13604:25;13599:2;13584:18;;13577:53;13662:2;13647:18;;13324:347;3345:30:266;;;;;;;;3389:6;:4;:6::i;3615:277::-;3683:1;3678:6;;:1;:6;;;3674:212;;3705:44;;;;;13878:2:283;13860:21;;;13917:2;13897:18;;;13890:30;13956:34;13951:2;13936:18;;13929:62;14027:7;14022:2;14007:18;;14000:35;14067:3;14052:19;;13676:401;3705:44:266;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;:::-;3615:277;;:::o;14688:344::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;15697:2:283;15679:21;;;15736:2;15716:18;;;15709:30;15775:34;15770:2;15755:18;;15748:62;15846:6;15841:2;15826:18;;15819:34;15885:3;15870:19;;15495:400;14848:43:266;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;2809:1053:172:-;2898:16;;;2912:1;2898:16;;;;;;;;;2869:26;;2898:16;;;;;;;;;-1:-1:-1;;2939:3:172;;2924:12;;;;-1:-1:-1;2939:3:172;;;2924:12;;-1:-1:-1;2939:3:172;;2924:12;;;;:::i;:::-;:18;;;;:12;;;;;;;;;:18;2962:23;;2953:33;;;;;2962:23;;2953:33;;;5640:74:283;2953:8:172;;;;5613:18:283;;2953:33:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3030:15:172;;:45;;;;;:15;;;;;-1:-1:-1;3030:31:172;;-1:-1:-1;3030:45:172;;3062:9;;3073:1;;3030:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:21:172;;3239:3;;3173:70;;;;;:21;3239:3;;;3173:70;;;5640:74:283;3116:54:172;;-1:-1:-1;3173:21:172;;;-1:-1:-1;3173:65:172;;5613:18:283;;3173:70:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3353:13;;3380:21;;:48;;;;;3116:127;;-1:-1:-1;3301:22:172;;3326:112;;3353:13;3380:21;;;:31;;:48;;3116:127;;3380:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3326:13;:112::i;:::-;3301:137;;3449:20;3493:7;3502:9;3482:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3472:41;;3482:30;3472:41;;;;3553:17;;;5670:42:283;5658:55;;3553:17:172;;;5640:74:283;3472:41:172;-1:-1:-1;3553:8:172;;;;5613:18:283;;3553:17:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3580:15:172;;:42;;;;;;;;4263:25:283;;;3580:15:172;;;;;-1:-1:-1;3580:28:172;;-1:-1:-1;4236:18:283;;3580:42:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3683:15:172;;:39;;;;;;;;3675:7;;-1:-1:-1;3675:7:172;;-1:-1:-1;3725:15:172;;3675:7;3683:15;;:37;;:39;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;3675:66;;;;;;;;;;;;;4263:25:283;;4251:2;4236:18;;4117:177;3675:66:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3791:15:172;;:64;;;;;:15;;;;;-1:-1:-1;3791:27:172;;-1:-1:-1;3791:64:172;;3819:7;;3828:15;;3845:9;;3791:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2859:1003;;;;2809:1053;:::o;2239:564::-;2377:43;;;2418:1;2377:43;;;;;;;;;2303:71;;2377:43;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2377:43:172;;;;;;;;;;;;;;;2303:117;;2514:183;;;;;;;;2570:6;2514:183;;;;;;2595:17;;;;;;;;;;;:57;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2514:183;;;;2673:13;;;;;;;;;;;;;;;;;2514:183;;;2493:15;2509:1;2493:18;;;;;;;;:::i;:::-;;;;;;;;;;:204;2716:27;;2707:37;;;;;:8;2716:27;;;2707:37;;;5640:74:283;2707:8:172;;;;5613:18:283;;2707:37:172;5494:226:283;16134:242:270;16204:12;16218:18;16296:4;16279:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;16269:33;;16279:22;16269:33;;;;16320:19;;;;;;4263:25:283;;;16269:33:270;-1:-1:-1;16320:7:270;;;;4236:18:283;;16320:19:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16349:20;;;;;16313:26;;-1:-1:-1;16349:8:270;;;;:20;;16313:26;;16364:4;;16349:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16134:242;;;:::o;2410:424:266:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;20263:74:283;;;2670:17:266;20353:18:283;;;20346:34;;;;2705:4:266;20396:18:283;;;20389:34;2482:11:266;;1671:64;2579:43;;20236:18:283;;2645:67:266;;;;;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;;;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:266;2813:7;:14;;;;;;;;2410:424::o;3993:307:172:-;4170:36;;;;;;;;20608:25:283;;;20649:18;;;20642:34;;;4108:12:172;;4137:7;;;;;;4170;;;;20581:18:283;;4170:36:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4242:25;;;;;;21268:19:283;;;;21303:12;;;21296:28;;;;21362:3;21358:16;;;;21376:66;21354:89;21340:12;;;21333:111;4242:25:172;;;;;;;;;21460:12:283;;;;4242:25:172;;;;-1:-1:-1;;;;3993:307:172;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:484:283:-;67:3;105:5;99:12;132:6;127:3;120:19;158:4;187:2;182:3;178:12;171:19;;224:2;217:5;213:14;245:1;255:218;269:6;266:1;263:13;255:218;;;334:13;;349:42;330:62;318:75;;413:12;;;;448:15;;;;291:1;284:9;255:218;;;-1:-1:-1;489:3:283;;14:484;-1:-1:-1;;;;;14:484:283:o;503:261::-;682:2;671:9;664:21;645:4;702:56;754:2;743:9;739:18;731:6;702:56;:::i;:::-;694:64;503:261;-1:-1:-1;;;503:261:283:o;769:1699::-;975:4;1004:2;1044;1033:9;1029:18;1074:2;1063:9;1056:21;1097:6;1132;1126:13;1163:6;1155;1148:22;1189:2;1179:12;;1222:2;1211:9;1207:18;1200:25;;1284:2;1274:6;1271:1;1267:14;1256:9;1252:30;1248:39;1322:2;1314:6;1310:15;1343:1;1364;1374:1065;1390:6;1385:3;1382:15;1374:1065;;;1459:22;;;1483:66;1455:95;1443:108;;1574:13;;1661:9;;1672:42;1657:58;1642:74;;1755:11;;1749:18;1787:15;;;1780:27;;;1868:19;;1614:15;;;1900:24;;;1990:21;;;;2035:1;;1958:2;1946:15;;;2049:282;2065:8;2060:3;2057:17;2049:282;;;2146:15;;2163:66;2142:88;2128:103;;2300:17;;;;2093:1;2084:11;;;;;2257:14;;;;2049:282;;;-1:-1:-1;2417:12:283;;;;2354:5;-1:-1:-1;;;2382:15:283;;;;1416:1;1407:11;1374:1065;;;-1:-1:-1;2456:6:283;;769:1699;-1:-1:-1;;;;;;;;;769:1699:283:o;2473:258::-;2545:1;2555:113;2569:6;2566:1;2563:13;2555:113;;;2645:11;;;2639:18;2626:11;;;2619:39;2591:2;2584:10;2555:113;;;2686:6;2683:1;2680:13;2677:48;;;2721:1;2712:6;2707:3;2703:16;2696:27;2677:48;;2473:258;;;:::o;2736:317::-;2778:3;2816:5;2810:12;2843:6;2838:3;2831:19;2859:63;2915:6;2908:4;2903:3;2899:14;2892:4;2885:5;2881:16;2859:63;:::i;:::-;2967:2;2955:15;2972:66;2951:88;2942:98;;;;3042:4;2938:109;;2736:317;-1:-1:-1;;2736:317:283:o;3058:862::-;3220:4;3249:2;3289;3278:9;3274:18;3319:2;3308:9;3301:21;3342:6;3377;3371:13;3408:6;3400;3393:22;3446:2;3435:9;3431:18;3424:25;;3508:2;3498:6;3495:1;3491:14;3480:9;3476:30;3472:39;3458:53;;3546:2;3538:6;3534:15;3567:1;3577:314;3591:6;3588:1;3585:13;3577:314;;;3680:66;3668:9;3660:6;3656:22;3652:95;3647:3;3640:108;3771:40;3804:6;3795;3789:13;3771:40;:::i;:::-;3761:50;-1:-1:-1;3869:12:283;;;;3834:15;;;;3613:1;3606:9;3577:314;;;-1:-1:-1;3908:6:283;;3058:862;-1:-1:-1;;;;;;;3058:862:283:o;4299:154::-;4385:42;4378:5;4374:54;4367:5;4364:65;4354:93;;4443:1;4440;4433:12;4458:251;4528:6;4581:2;4569:9;4560:7;4556:23;4552:32;4549:52;;;4597:1;4594;4587:12;4549:52;4629:9;4623:16;4648:31;4673:5;4648:31;:::i;5725:409::-;5940:42;5932:6;5928:55;5917:9;5910:74;6020:6;6015:2;6004:9;6000:18;5993:34;6063:2;6058;6047:9;6043:18;6036:30;5891:4;6083:45;6124:2;6113:9;6109:18;6101:6;6083:45;:::i;:::-;6075:53;5725:409;-1:-1:-1;;;;;5725:409:283:o;6139:277::-;6206:6;6259:2;6247:9;6238:7;6234:23;6230:32;6227:52;;;6275:1;6272;6265:12;6227:52;6307:9;6301:16;6360:5;6353:13;6346:21;6339:5;6336:32;6326:60;;6382:1;6379;6372:12;6705:184;6757:77;6754:1;6747:88;6854:4;6851:1;6844:15;6878:4;6875:1;6868:15;6894:943;6974:6;7027:2;7015:9;7006:7;7002:23;6998:32;6995:52;;;7043:1;7040;7033:12;6995:52;7076:9;7070:16;7105:18;7146:2;7138:6;7135:14;7132:34;;;7162:1;7159;7152:12;7132:34;7200:6;7189:9;7185:22;7175:32;;7245:7;7238:4;7234:2;7230:13;7226:27;7216:55;;7267:1;7264;7257:12;7216:55;7296:2;7290:9;7318:2;7314;7311:10;7308:36;;;7324:18;;:::i;:::-;7458:2;7452:9;7520:4;7512:13;;7363:66;7508:22;;;7532:2;7504:31;7500:40;7488:53;;;7556:18;;;7576:22;;;7553:46;7550:72;;;7602:18;;:::i;:::-;7642:10;7638:2;7631:22;7677:2;7669:6;7662:18;7717:7;7712:2;7707;7703;7699:11;7695:20;7692:33;7689:53;;;7738:1;7735;7728:12;7689:53;7751:55;7803:2;7798;7790:6;7786:15;7781:2;7777;7773:11;7751:55;:::i;:::-;7825:6;6894:943;-1:-1:-1;;;;;;;6894:943:283:o;7842:437::-;7921:1;7917:12;;;;7964;;;7985:61;;8039:4;8031:6;8027:17;8017:27;;7985:61;8092:2;8084:6;8081:14;8061:18;8058:38;8055:218;;8129:77;8126:1;8119:88;8230:4;8227:1;8220:15;8258:4;8255:1;8248:15;8055:218;;7842:437;;;:::o;8284:184::-;8354:6;8407:2;8395:9;8386:7;8382:23;8378:32;8375:52;;;8423:1;8420;8413:12;8375:52;-1:-1:-1;8446:16:283;;8284:184;-1:-1:-1;8284:184:283:o;8775:417::-;8972:66;8964:6;8960:79;8955:3;8948:92;8930:3;9069:6;9063:13;9085:61;9139:6;9135:1;9130:3;9126:11;9119:4;9111:6;9107:17;9085:61;:::i;:::-;9166:16;;;;9184:1;9162:24;;8775:417;-1:-1:-1;;;8775:417:283:o;9197:274::-;9326:3;9364:6;9358:13;9380:53;9426:6;9421:3;9414:4;9406:6;9402:17;9380:53;:::i;:::-;9449:16;;;;;9197:274;-1:-1:-1;;9197:274:283:o;9912:218::-;10059:2;10048:9;10041:21;10022:4;10079:45;10120:2;10109:9;10105:18;10097:6;10079:45;:::i;10664:277::-;10866:2;10855:9;10848:21;10829:4;10886:49;10931:2;10920:9;10916:18;10572:2;10560:15;;10607:17;10600:4;10591:14;;10584:41;10650:2;10641:12;;10495:164;11467:422;11734:42;11726:6;11722:55;11711:9;11704:74;11814:2;11809;11798:9;11794:18;11787:30;11685:4;11834:49;11879:2;11868:9;11864:18;10572:2;10560:15;;10607:17;10600:4;10591:14;;10584:41;10650:2;10641:12;;10495:164;11894:184;11946:77;11943:1;11936:88;12043:4;12040:1;12033:15;12067:4;12064:1;12057:15;12083:1236;12293:4;12322:2;12362;12351:9;12347:18;12392:2;12381:9;12374:21;12415:6;12450;12444:13;12481:6;12473;12466:22;12507:2;12497:12;;12540:2;12529:9;12525:18;12518:25;;12602:2;12592:6;12589:1;12585:14;12574:9;12570:30;12566:39;12640:2;12632:6;12628:15;12661:1;12671:619;12685:6;12682:1;12679:13;12671:619;;;12750:22;;;12774:66;12746:95;12734:108;;12865:13;;12937:9;;12948:42;12933:58;12918:74;;13035:11;;;13029:18;13012:15;;;13005:43;13087:11;;13081:18;12901:4;13119:15;;;13112:27;;;13162:48;13194:15;;;13081:18;13162:48;:::i;:::-;13268:12;;;;13152:58;-1:-1:-1;;;13233:15:283;;;;12707:1;12700:9;12671:619;;;-1:-1:-1;13307:6:283;;12083:1236;-1:-1:-1;;;;;;;;12083:1236:283:o;14246:397::-;14476:2;14465:9;14458:21;14439:4;14496:49;14541:2;14530:9;14526:18;14159:2;14147:15;;14194:12;14187:4;14178:14;;14171:36;14232:2;14223:12;;14082:159;14496:49;14488:57;;14593:42;14585:6;14581:55;14576:2;14565:9;14561:18;14554:83;14246:397;;;;:::o;14812:::-;15042:2;15031:9;15024:21;15005:4;15062:49;15107:2;15096:9;15092:18;14725:2;14713:15;;14760:12;14753:4;14744:14;;14737:36;14798:2;14789:12;;14648:159;15900:440;16150:2;16139:9;16132:21;16113:4;16176:49;16221:2;16210:9;16206:18;14159:2;14147:15;;14194:12;14187:4;14178:14;;14171:36;14232:2;14223:12;;14082:159;16176:49;16273:9;16265:6;16261:22;16256:2;16245:9;16241:18;16234:50;16301:33;16327:6;16319;16301:33;:::i;:::-;16293:41;15900:440;-1:-1:-1;;;;15900:440:283:o;16345:::-;16595:2;16584:9;16577:21;16558:4;16621:49;16666:2;16655:9;16651:18;14725:2;14713:15;;14760:12;14753:4;14744:14;;14737:36;14798:2;14789:12;;14648:159;16790:340;17005:2;16994:9;16987:21;16968:4;17025:56;17077:2;17066:9;17062:18;17054:6;17025:56;:::i;:::-;17017:64;;17117:6;17112:2;17101:9;17097:18;17090:34;16790:340;;;;;:::o;17135:577::-;17239:6;17292:2;17280:9;17271:7;17267:23;17263:32;17260:52;;;17308:1;17305;17298:12;17260:52;17341:2;17335:9;17383:2;17375:6;17371:15;17452:6;17440:10;17437:22;17416:18;17404:10;17401:34;17398:62;17395:88;;;17463:18;;:::i;:::-;17499:2;17492:22;17536:16;;17561:31;17536:16;17561:31;:::i;:::-;17601:21;;17676:2;17661:18;;;17655:25;17638:15;;;17631:50;;;;-1:-1:-1;17608:6:283;17135:577;-1:-1:-1;17135:577:283:o;17927:272::-;17802:12;;17816:42;17798:61;17786:74;;17909:4;17898:16;;;17892:23;17876:14;;;17869:47;18129:2;18114:18;;18141:52;17717:205;18204:338;18391:42;18383:6;18379:55;18368:9;18361:74;18471:2;18466;18455:9;18451:18;18444:30;18342:4;18491:45;18532:2;18521:9;18517:18;18509:6;18491:45;:::i;18918:282::-;18958:3;18989:1;18985:6;18982:1;18979:13;18976:193;;;19025:77;19022:1;19015:88;19126:4;19123:1;19116:15;19154:4;19151:1;19144:15;18976:193;-1:-1:-1;19185:9:283;;18918:282::o;19205:506::-;19488:42;19480:6;19476:55;19465:9;19458:74;19541:61;19598:2;19587:9;19583:18;19575:6;17802:12;;17816:42;17798:61;17786:74;;17909:4;17898:16;;;17892:23;17876:14;;17869:47;17717:205;19541:61;19638:3;19633:2;19622:9;19618:18;19611:31;19439:4;19659:46;19700:3;19689:9;19685:19;19677:6;19659:46;:::i;20687:395::-;20773:6;20781;20789;20842:2;20830:9;20821:7;20817:23;20813:32;20810:52;;;20858:1;20855;20848:12;20810:52;20890:9;20884:16;20940:4;20933:5;20929:16;20922:5;20919:27;20909:55;;20960:1;20957;20950:12;20909:55;21028:2;21013:18;;21007:25;21072:2;21057:18;;;21051:25;20983:5;;21007:25;;-1:-1:-1;21051:25:283;20687:395;-1:-1:-1;;;20687:395:283:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_constructor_succeeds()": "80aee254",
    "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()": "defdd115",
    "test_isAllowedToMint_fromAllowlistAttestor_succeeds()": "7d9f5772",
    "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()": "ec85c462",
    "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()": "a2ebe184",
    "test_isAllowedToMint_fromInvite_succeeds()": "910cfdae",
    "test_isAllowedToMint_fromWrongAllowlistAttestor_fails()": "c4873875",
    "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()": "b44cd0e1",
    "test_isAllowedToMint_fromWrongOptimistInviter_fails()": "276beb5f",
    "test_isAllowedToMint_withMultipleAttestations_succeeds()": "c4625960",
    "test_isAllowedToMint_withoutAnyAttestations_fails()": "f4fa2a45"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"AttestationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_constructor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromAllowlistAttestor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromInvite_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromWrongAllowlistAttestor_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromWrongOptimistInviter_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_withMultipleAttestations_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_withoutAnyAttestations_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()\":{\"notice\":\"Having falsy attestation value should not allow minting.\"},\"test_isAllowedToMint_fromAllowlistAttestor_succeeds()\":{\"notice\":\"After receiving a valid allowlist attestation, the account should be able to mint.\"},\"test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()\":{\"notice\":\"Having falsy attestation value from Coinbase attestor should not allow minting.\"},\"test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()\":{\"notice\":\"After receiving a valid attestation from the Coinbase Quest attestor,         the account should be able to mint.\"},\"test_isAllowedToMint_fromInvite_succeeds()\":{\"notice\":\"Account that received an attestation from the OptimistInviter contract by going         through the claim invite flow should be able to mint.\"},\"test_isAllowedToMint_fromWrongAllowlistAttestor_fails()\":{\"notice\":\"Attestation from the wrong allowlist attestor should not allow minting.\"},\"test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()\":{\"notice\":\"Coinbase quest attestation from wrong attestor should not allow minting.\"},\"test_isAllowedToMint_fromWrongOptimistInviter_fails()\":{\"notice\":\"Claiming an invite on the non-official OptimistInviter contract should not allow         minting.\"},\"test_isAllowedToMint_withMultipleAttestations_succeeds()\":{\"notice\":\"Having multiple signals, even if one is invalid, should still allow minting.\"},\"test_isAllowedToMint_withoutAnyAttestations_fails()\":{\"notice\":\"Base case, a account without any relevant attestations should not be able to mint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/OptimistAllowlist.t.sol\":\"OptimistAllowlistTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x0df3b36eae1b8593259f7c96d0c11164b92ea6d03a379c96e13b851c9142fcc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3594bcb5373ccd847c64e1ae1d7e3f5db656d09746a4712e4e0bbbc2abfe2eaf\",\"dweb:/ipfs/QmQgVTGXHHh7Yxn41GvSFppG1yk4wKwsfrzjs74rZomVto\"]},\"contracts/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x43edc72987f5b64e986ea678bc57bee4f9bc637cd8cfb942edcb0c9160fb0e69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d3ecbeebdf22c5ba9d0c1d3edf574f8a9346b85bfc6b7491993ece1e2638e6\",\"dweb:/ipfs/QmUXeLETUjSN9b4jjXoXBzB8KqtbWm2Spo3TNXknvUk66Z\"]},\"contracts/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x8d957f6f57a7ffdbb89ea3405bedaca9462a15c13767c9b6025b02923d9af792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fd6798f85729c64f9b93519ccdf707b1dc0d51a319cf07bb884542a3d3a6d69\",\"dweb:/ipfs/QmYkmf59sFtzRMz9qYyuU1A3fBEypFbhKwaegNLjRLrpwW\"]},\"contracts/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0x899ebc97e07a1b6b57a2b50ac1aab5bd92c5831643fb18f56637b299edc192a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6438afacf96dd589db2196c59709e42000bda9997a24533a3a4be2bdf8030ebd\",\"dweb:/ipfs/Qme1WFRRr4NcebZj3wWf2FonSutFTw66h9jmroKeQ1rAiq\"]},\"contracts/periphery/op-nft/OptimistAllowlist.sol\":{\"keccak256\":\"0xe2e6a9e71d550bb0fab20dce3a62f006252e700c6b03b05bd2884c0336765608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a94a86369acb0b5781dc1f5cc55827f5924821e5aa5b2fdf9e1d7d118c16dc84\",\"dweb:/ipfs/QmbV5Kd9VLd4sfcFwhJEWxjQPFHyYovN9rWCbsHyBcFHiF\"]},\"contracts/periphery/op-nft/OptimistInviter.sol\":{\"keccak256\":\"0x2776fe997f0c849efbd8e3fa3d3bf64337b11d1f6e8329a492020468d1e29488\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec827ce5bbe45d3356b8cfedcbe322475ca9533e573c6a2aa0a38a72ac328bd1\",\"dweb:/ipfs/QmUAYf1ftCPav3c8F2qgy8qqPg4CaaJMVTXGi27UdPAQrJ\"]},\"contracts/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x6eebe1db87f8a5de79bf8af9120e5b0cc6a9b51d8d86e6461cdb6bc52a1dde21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff03d9ebffd48a84f0fc7d381ba569843e53c7960b91ec00178ee14c7dcf833c\",\"dweb:/ipfs/QmXit8hX46BHAzP9Wtk3AEkShTw6qqNd5nnQzceEvBdhVr\"]},\"contracts/test/Helpers.sol\":{\"keccak256\":\"0x2ded008a3017349c03c0ce36e67a2022afb6fd1aba0ee9ed2ccaaf20f1e52794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81b22d4fce3f7e96a25adbcfbaacc3989cbcf7b614d59b680f827779002a74b\",\"dweb:/ipfs/QmdNrEzp7yxTwXLewEfopnkewtn3cMA9LoKMcDFDAPonKU\"]},\"contracts/test/OptimistAllowlist.t.sol\":{\"keccak256\":\"0xd0aca6b05e9c6a1383bbf10de3e076672fae224d122559ab0408b30e2edadeb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a935ebb3abe265187515a8099df46925d6082650b60d0adc969523aa6f0f63b2\",\"dweb:/ipfs/QmWCt6FDrUCrSW2PhNAa3Xyh1g7KUe6LZAgJ4adGEDEr4u\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482\",\"dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"node_modules/@rari-capital/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"node_modules/@rari-capital/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "about",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_constructor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromAllowlistAttestor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromInvite_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromWrongAllowlistAttestor_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromWrongOptimistInviter_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_withMultipleAttestations_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_withoutAnyAttestations_fails"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()": {
            "notice": "Having falsy attestation value should not allow minting."
          },
          "test_isAllowedToMint_fromAllowlistAttestor_succeeds()": {
            "notice": "After receiving a valid allowlist attestation, the account should be able to mint."
          },
          "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()": {
            "notice": "Having falsy attestation value from Coinbase attestor should not allow minting."
          },
          "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()": {
            "notice": "After receiving a valid attestation from the Coinbase Quest attestor,         the account should be able to mint."
          },
          "test_isAllowedToMint_fromInvite_succeeds()": {
            "notice": "Account that received an attestation from the OptimistInviter contract by going         through the claim invite flow should be able to mint."
          },
          "test_isAllowedToMint_fromWrongAllowlistAttestor_fails()": {
            "notice": "Attestation from the wrong allowlist attestor should not allow minting."
          },
          "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()": {
            "notice": "Coinbase quest attestation from wrong attestor should not allow minting."
          },
          "test_isAllowedToMint_fromWrongOptimistInviter_fails()": {
            "notice": "Claiming an invite on the non-official OptimistInviter contract should not allow         minting."
          },
          "test_isAllowedToMint_withMultipleAttestations_succeeds()": {
            "notice": "Having multiple signals, even if one is invalid, should still allow minting."
          },
          "test_isAllowedToMint_withoutAnyAttestations_fails()": {
            "notice": "Base case, a account without any relevant attestations should not be able to mint."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/test/OptimistAllowlist.t.sol": "OptimistAllowlistTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/periphery/faucet/Faucet.sol": {
        "keccak256": "0x0df3b36eae1b8593259f7c96d0c11164b92ea6d03a379c96e13b851c9142fcc5",
        "urls": [
          "bzz-raw://3594bcb5373ccd847c64e1ae1d7e3f5db656d09746a4712e4e0bbbc2abfe2eaf",
          "dweb:/ipfs/QmQgVTGXHHh7Yxn41GvSFppG1yk4wKwsfrzjs74rZomVto"
        ],
        "license": "MIT"
      },
      "contracts/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": {
        "keccak256": "0x43edc72987f5b64e986ea678bc57bee4f9bc637cd8cfb942edcb0c9160fb0e69",
        "urls": [
          "bzz-raw://b1d3ecbeebdf22c5ba9d0c1d3edf574f8a9346b85bfc6b7491993ece1e2638e6",
          "dweb:/ipfs/QmUXeLETUjSN9b4jjXoXBzB8KqtbWm2Spo3TNXknvUk66Z"
        ],
        "license": "MIT"
      },
      "contracts/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x8d957f6f57a7ffdbb89ea3405bedaca9462a15c13767c9b6025b02923d9af792",
        "urls": [
          "bzz-raw://0fd6798f85729c64f9b93519ccdf707b1dc0d51a319cf07bb884542a3d3a6d69",
          "dweb:/ipfs/QmYkmf59sFtzRMz9qYyuU1A3fBEypFbhKwaegNLjRLrpwW"
        ],
        "license": "MIT"
      },
      "contracts/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0x899ebc97e07a1b6b57a2b50ac1aab5bd92c5831643fb18f56637b299edc192a5",
        "urls": [
          "bzz-raw://6438afacf96dd589db2196c59709e42000bda9997a24533a3a4be2bdf8030ebd",
          "dweb:/ipfs/Qme1WFRRr4NcebZj3wWf2FonSutFTw66h9jmroKeQ1rAiq"
        ],
        "license": "MIT"
      },
      "contracts/periphery/op-nft/OptimistAllowlist.sol": {
        "keccak256": "0xe2e6a9e71d550bb0fab20dce3a62f006252e700c6b03b05bd2884c0336765608",
        "urls": [
          "bzz-raw://a94a86369acb0b5781dc1f5cc55827f5924821e5aa5b2fdf9e1d7d118c16dc84",
          "dweb:/ipfs/QmbV5Kd9VLd4sfcFwhJEWxjQPFHyYovN9rWCbsHyBcFHiF"
        ],
        "license": "MIT"
      },
      "contracts/periphery/op-nft/OptimistInviter.sol": {
        "keccak256": "0x2776fe997f0c849efbd8e3fa3d3bf64337b11d1f6e8329a492020468d1e29488",
        "urls": [
          "bzz-raw://ec827ce5bbe45d3356b8cfedcbe322475ca9533e573c6a2aa0a38a72ac328bd1",
          "dweb:/ipfs/QmUAYf1ftCPav3c8F2qgy8qqPg4CaaJMVTXGi27UdPAQrJ"
        ],
        "license": "MIT"
      },
      "contracts/periphery/op-nft/libraries/OptimistConstants.sol": {
        "keccak256": "0x6eebe1db87f8a5de79bf8af9120e5b0cc6a9b51d8d86e6461cdb6bc52a1dde21",
        "urls": [
          "bzz-raw://ff03d9ebffd48a84f0fc7d381ba569843e53c7960b91ec00178ee14c7dcf833c",
          "dweb:/ipfs/QmXit8hX46BHAzP9Wtk3AEkShTw6qqNd5nnQzceEvBdhVr"
        ],
        "license": "MIT"
      },
      "contracts/test/Helpers.sol": {
        "keccak256": "0x2ded008a3017349c03c0ce36e67a2022afb6fd1aba0ee9ed2ccaaf20f1e52794",
        "urls": [
          "bzz-raw://e81b22d4fce3f7e96a25adbcfbaacc3989cbcf7b614d59b680f827779002a74b",
          "dweb:/ipfs/QmdNrEzp7yxTwXLewEfopnkewtn3cMA9LoKMcDFDAPonKU"
        ],
        "license": "MIT"
      },
      "contracts/test/OptimistAllowlist.t.sol": {
        "keccak256": "0xd0aca6b05e9c6a1383bbf10de3e076672fae224d122559ab0408b30e2edadeb5",
        "urls": [
          "bzz-raw://a935ebb3abe265187515a8099df46925d6082650b60d0adc969523aa6f0f63b2",
          "dweb:/ipfs/QmWCt6FDrUCrSW2PhNAa3Xyh1g7KUe6LZAgJ4adGEDEr4u"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0xc455c84bb1f17e994dea0451fd363f81f83965bfa86e81ac6c8b3a327b9a0ff0",
        "urls": [
          "bzz-raw://fab499f3c0d7df8eb763b50621848d5d2147fb9c42a8eb9b65a11093090bb482",
          "dweb:/ipfs/QmUKsG4ztwtUZFjuRYAxgUFTgH5YxWSGF1BFFaB7vdM2K3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81",
        "urls": [
          "bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b",
          "dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114733,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 114735,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124395,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124416,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)"
      },
      {
        "astId": 124420,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 124424,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 124427,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 125093,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 126806,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 116443,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116446,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116449,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116452,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116455,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116458,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116462,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 116466,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 122939,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 89078,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "alice_allowlistAttestor",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 89080,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "sally_coinbaseQuestAttestor",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 89082,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "ted",
        "offset": 0,
        "slot": "29",
        "type": "t_address"
      },
      {
        "astId": 89084,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "bobPrivateKey",
        "offset": 0,
        "slot": "30",
        "type": "t_uint256"
      },
      {
        "astId": 89086,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "bob",
        "offset": 0,
        "slot": "31",
        "type": "t_address"
      },
      {
        "astId": 89089,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "attestationStation",
        "offset": 0,
        "slot": "32",
        "type": "t_contract(AttestationStation)46671"
      },
      {
        "astId": 89092,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "optimistAllowlist",
        "offset": 0,
        "slot": "33",
        "type": "t_contract(OptimistAllowlist)47090"
      },
      {
        "astId": 89095,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "optimistInviter",
        "offset": 0,
        "slot": "34",
        "type": "t_contract(OptimistInviter)47429"
      },
      {
        "astId": 89098,
        "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "optimistInviterHelper",
        "offset": 0,
        "slot": "35",
        "type": "t_contract(OptimistInviterHelper)65813"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)116440_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(AttestationStation)46671": {
        "encoding": "inplace",
        "label": "contract AttestationStation",
        "numberOfBytes": "20"
      },
      "t_contract(OptimistAllowlist)47090": {
        "encoding": "inplace",
        "label": "contract OptimistAllowlist",
        "numberOfBytes": "20"
      },
      "t_contract(OptimistInviter)47429": {
        "encoding": "inplace",
        "label": "contract OptimistInviter",
        "numberOfBytes": "20"
      },
      "t_contract(OptimistInviterHelper)65813": {
        "encoding": "inplace",
        "label": "contract OptimistInviterHelper",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)124411_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)124411_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 124404,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 124406,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 124408,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 124410,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)116440_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 116436,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 116439,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)128292_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 128272,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 128280,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 128283,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 128285,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 128287,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 128289,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 128291,
            "contract": "contracts/test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()": {
        "notice": "Having falsy attestation value should not allow minting."
      },
      "test_isAllowedToMint_fromAllowlistAttestor_succeeds()": {
        "notice": "After receiving a valid allowlist attestation, the account should be able to mint."
      },
      "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()": {
        "notice": "Having falsy attestation value from Coinbase attestor should not allow minting."
      },
      "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()": {
        "notice": "After receiving a valid attestation from the Coinbase Quest attestor,         the account should be able to mint."
      },
      "test_isAllowedToMint_fromInvite_succeeds()": {
        "notice": "Account that received an attestation from the OptimistInviter contract by going         through the claim invite flow should be able to mint."
      },
      "test_isAllowedToMint_fromWrongAllowlistAttestor_fails()": {
        "notice": "Attestation from the wrong allowlist attestor should not allow minting."
      },
      "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()": {
        "notice": "Coinbase quest attestation from wrong attestor should not allow minting."
      },
      "test_isAllowedToMint_fromWrongOptimistInviter_fails()": {
        "notice": "Claiming an invite on the non-official OptimistInviter contract should not allow         minting."
      },
      "test_isAllowedToMint_withMultipleAttestations_succeeds()": {
        "notice": "Having multiple signals, even if one is invalid, should still allow minting."
      },
      "test_isAllowedToMint_withoutAnyAttestations_fails()": {
        "notice": "Base case, a account without any relevant attestations should not be able to mint."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev"
  },
  "ast": {
    "absolutePath": "contracts/test/OptimistAllowlist.t.sol",
    "id": 89817,
    "exportedSymbols": {
      "AttestationStation": [
        46671
      ],
      "OptimistAllowlist": [
        47090
      ],
      "OptimistAllowlistTest": [
        89816
      ],
      "OptimistAllowlist_Initializer": [
        89444
      ],
      "OptimistConstants": [
        47440
      ],
      "OptimistInviter": [
        47429
      ],
      "OptimistInviterHelper": [
        65813
      ],
      "Test": [
        117552
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:10204:172",
    "nodes": [
      {
        "id": 89052,
        "nodeType": "PragmaDirective",
        "src": "31:23:172",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 89054,
        "nodeType": "ImportDirective",
        "src": "80:42:172",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89817,
        "sourceUnit": 117553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 89053,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117552,
              "src": "89:4:172",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89056,
        "nodeType": "ImportDirective",
        "src": "123:80:172",
        "nodes": [],
        "absolutePath": "contracts/periphery/op-nft/AttestationStation.sol",
        "file": "../periphery/op-nft/AttestationStation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89817,
        "sourceUnit": 46672,
        "symbolAliases": [
          {
            "foreign": {
              "id": 89055,
              "name": "AttestationStation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46671,
              "src": "132:18:172",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89058,
        "nodeType": "ImportDirective",
        "src": "204:78:172",
        "nodes": [],
        "absolutePath": "contracts/periphery/op-nft/OptimistAllowlist.sol",
        "file": "../periphery/op-nft/OptimistAllowlist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89817,
        "sourceUnit": 47091,
        "symbolAliases": [
          {
            "foreign": {
              "id": 89057,
              "name": "OptimistAllowlist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47090,
              "src": "213:17:172",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89060,
        "nodeType": "ImportDirective",
        "src": "283:74:172",
        "nodes": [],
        "absolutePath": "contracts/periphery/op-nft/OptimistInviter.sol",
        "file": "../periphery/op-nft/OptimistInviter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89817,
        "sourceUnit": 47430,
        "symbolAliases": [
          {
            "foreign": {
              "id": 89059,
              "name": "OptimistInviter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47429,
              "src": "292:15:172",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89062,
        "nodeType": "ImportDirective",
        "src": "358:54:172",
        "nodes": [],
        "absolutePath": "contracts/test/Helpers.sol",
        "file": "./Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89817,
        "sourceUnit": 65959,
        "symbolAliases": [
          {
            "foreign": {
              "id": 89061,
              "name": "OptimistInviterHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65813,
              "src": "367:21:172",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89064,
        "nodeType": "ImportDirective",
        "src": "413:88:172",
        "nodes": [],
        "absolutePath": "contracts/periphery/op-nft/libraries/OptimistConstants.sol",
        "file": "../periphery/op-nft/libraries/OptimistConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89817,
        "sourceUnit": 47441,
        "symbolAliases": [
          {
            "foreign": {
              "id": 89063,
              "name": "OptimistConstants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47440,
              "src": "422:17:172",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89444,
        "nodeType": "ContractDefinition",
        "src": "503:4362:172",
        "nodes": [
          {
            "id": 89076,
            "nodeType": "EventDefinition",
            "src": "556:143:172",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85",
            "name": "AttestationCreated",
            "nameLocation": "562:18:172",
            "parameters": {
              "id": 89075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89068,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "606:7:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89076,
                  "src": "590:23:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89070,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "about",
                  "nameLocation": "639:5:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89076,
                  "src": "623:21:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89072,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "670:3:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89076,
                  "src": "654:19:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89071,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89074,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "val",
                  "nameLocation": "689:3:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89076,
                  "src": "683:9:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:5:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "580:118:172"
            }
          },
          {
            "id": 89078,
            "nodeType": "VariableDeclaration",
            "src": "704:40:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice_allowlistAttestor",
            "nameLocation": "721:23:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 89077,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:172",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89080,
            "nodeType": "VariableDeclaration",
            "src": "750:44:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sally_coinbaseQuestAttestor",
            "nameLocation": "767:27:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 89079,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "750:7:172",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89082,
            "nodeType": "VariableDeclaration",
            "src": "800:20:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ted",
            "nameLocation": "817:3:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 89081,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:172",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89084,
            "nodeType": "VariableDeclaration",
            "src": "827:30:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bobPrivateKey",
            "nameLocation": "844:13:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 89083,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "827:7:172",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89086,
            "nodeType": "VariableDeclaration",
            "src": "863:20:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "880:3:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 89085,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "863:7:172",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89089,
            "nodeType": "VariableDeclaration",
            "src": "890:37:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "attestationStation",
            "nameLocation": "909:18:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AttestationStation_$46671",
              "typeString": "contract AttestationStation"
            },
            "typeName": {
              "id": 89088,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89087,
                "name": "AttestationStation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46671,
                "src": "890:18:172"
              },
              "referencedDeclaration": 46671,
              "src": "890:18:172",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AttestationStation_$46671",
                "typeString": "contract AttestationStation"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89092,
            "nodeType": "VariableDeclaration",
            "src": "933:35:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimistAllowlist",
            "nameLocation": "951:17:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
              "typeString": "contract OptimistAllowlist"
            },
            "typeName": {
              "id": 89091,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89090,
                "name": "OptimistAllowlist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47090,
                "src": "933:17:172"
              },
              "referencedDeclaration": 47090,
              "src": "933:17:172",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                "typeString": "contract OptimistAllowlist"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89095,
            "nodeType": "VariableDeclaration",
            "src": "974:31:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimistInviter",
            "nameLocation": "990:15:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistInviter_$47429",
              "typeString": "contract OptimistInviter"
            },
            "typeName": {
              "id": 89094,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89093,
                "name": "OptimistInviter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47429,
                "src": "974:15:172"
              },
              "referencedDeclaration": 47429,
              "src": "974:15:172",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                "typeString": "contract OptimistInviter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89098,
            "nodeType": "VariableDeclaration",
            "src": "1059:43:172",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimistInviterHelper",
            "nameLocation": "1081:21:172",
            "scope": 89444,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
              "typeString": "contract OptimistInviterHelper"
            },
            "typeName": {
              "id": 89097,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 89096,
                "name": "OptimistInviterHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65813,
                "src": "1059:21:172"
              },
              "referencedDeclaration": 65813,
              "src": "1059:21:172",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                "typeString": "contract OptimistInviterHelper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 89169,
            "nodeType": "FunctionDefinition",
            "src": "1109:568:172",
            "nodes": [],
            "body": {
              "id": 89168,
              "nodeType": "Block",
              "src": "1133:544:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 89105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89101,
                      "name": "alice_allowlistAttestor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89078,
                      "src": "1143:23:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "616c6963655f616c6c6f776c6973744174746573746f72",
                          "id": 89103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1178:25:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1a532924a33c891785a403c6978a7794470a29efc20e0f5443c4f4607a4f14a0",
                            "typeString": "literal_string \"alice_allowlistAttestor\""
                          },
                          "value": "alice_allowlistAttestor"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1a532924a33c891785a403c6978a7794470a29efc20e0f5443c4f4607a4f14a0",
                            "typeString": "literal_string \"alice_allowlistAttestor\""
                          }
                        ],
                        "id": 89102,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126574,
                        "src": "1169:8:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 89104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:35:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1143:61:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89106,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:61:172"
                },
                {
                  "expression": {
                    "id": 89111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89107,
                      "name": "sally_coinbaseQuestAttestor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89080,
                      "src": "1214:27:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "73616c6c795f636f696e6261736551756573744174746573746f72",
                          "id": 89109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1253:29:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_93d30dfdad791c18650c4bec00bc083c3c78341af41f97e3738ff7eba705ece7",
                            "typeString": "literal_string \"sally_coinbaseQuestAttestor\""
                          },
                          "value": "sally_coinbaseQuestAttestor"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_93d30dfdad791c18650c4bec00bc083c3c78341af41f97e3738ff7eba705ece7",
                            "typeString": "literal_string \"sally_coinbaseQuestAttestor\""
                          }
                        ],
                        "id": 89108,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126574,
                        "src": "1244:8:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 89110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1244:39:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1214:69:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89112,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:69:172"
                },
                {
                  "expression": {
                    "id": 89117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89113,
                      "name": "ted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89082,
                      "src": "1293:3:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "746564",
                          "id": 89115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2a6164b193c097414f141367909e9588ffea11f645f7d9ccd0a1bd7763362541",
                            "typeString": "literal_string \"ted\""
                          },
                          "value": "ted"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2a6164b193c097414f141367909e9588ffea11f645f7d9ccd0a1bd7763362541",
                            "typeString": "literal_string \"ted\""
                          }
                        ],
                        "id": 89114,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126574,
                        "src": "1299:8:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 89116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1299:15:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1293:21:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89118,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:21:172"
                },
                {
                  "expression": {
                    "id": 89121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89119,
                      "name": "bobPrivateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89084,
                      "src": "1325:13:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30784230423042304230",
                      "id": 89120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1341:10:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2964369584_by_1",
                        "typeString": "int_const 2964369584"
                      },
                      "value": "0xB0B0B0B0"
                    },
                    "src": "1325:26:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89122,
                  "nodeType": "ExpressionStatement",
                  "src": "1325:26:172"
                },
                {
                  "expression": {
                    "id": 89128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89123,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89086,
                      "src": "1361:3:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89126,
                          "name": "bobPrivateKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89084,
                          "src": "1375:13:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 89124,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122936,
                          "src": "1367:2:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 89125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 117623,
                        "src": "1367:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 89127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1367:22:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1361:28:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89129,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:28:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89133,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "1408:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "626f62",
                        "id": 89134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1413:5:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        },
                        "value": "bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        }
                      ],
                      "expression": {
                        "id": 89130,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1399:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117953,
                      "src": "1399:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 89135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:20:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89136,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:20:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89140,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "1487:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:7:172",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 89137,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1479:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "1479:7:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 89142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:41:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89143,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:41:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89147,
                        "name": "sally_coinbaseQuestAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89080,
                        "src": "1538:27:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1567:7:172",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 89144,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1530:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "1530:7:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 89149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:45:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89150,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:45:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89154,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "1593:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:7:172",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 89151,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1585:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "1585:7:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 89156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:21:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89157,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:21:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89161,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89082,
                        "src": "1624:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1629:7:172",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 89158,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1616:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "1616:7:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 89163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1616:21:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89164,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:21:172"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89165,
                      "name": "_initializeContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89443,
                      "src": "1648:20:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 89166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:22:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89167,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:22:172"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1118:5:172",
            "parameters": {
              "id": 89099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1123:2:172"
            },
            "returnParameters": {
              "id": 89100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:172"
            },
            "scope": 89444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89216,
            "nodeType": "FunctionDefinition",
            "src": "1683:550:172",
            "nodes": [],
            "body": {
              "id": 89215,
              "nodeType": "Block",
              "src": "1733:500:172",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89179,
                      "mutability": "mutable",
                      "name": "attestationData",
                      "nameLocation": "1799:15:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89215,
                      "src": "1743:71:172",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 89177,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89176,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "1743:34:172"
                          },
                          "referencedDeclaration": 46567,
                          "src": "1743:34:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 89178,
                        "nodeType": "ArrayTypeName",
                        "src": "1743:36:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89186,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 89184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1858:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 89183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1817:40:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AttestationStation.AttestationData memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 89181,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89180,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "1821:34:172"
                          },
                          "referencedDeclaration": 46567,
                          "src": "1821:34:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 89182,
                        "nodeType": "ArrayTypeName",
                        "src": "1821:36:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      }
                    },
                    "id": 89185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:43:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1743:117:172"
                },
                {
                  "expression": {
                    "id": 89201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 89187,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89179,
                        "src": "1933:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 89189,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 89188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1949:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1933:18:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89192,
                          "name": "_about",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89171,
                          "src": "2010:6:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89193,
                              "name": "optimistAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89092,
                              "src": "2035:17:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                                "typeString": "contract OptimistAllowlist"
                              }
                            },
                            "id": 89194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46944,
                            "src": "2035:51:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view external returns (bytes32)"
                            }
                          },
                          "id": 89195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2035:53:172",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 89198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2113:6:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              }
                            ],
                            "id": 89197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2107:5:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 89196,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2107:5:172",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:13:172",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 89190,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46671,
                          "src": "1954:18:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 89191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46567,
                        "src": "1954:34:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 89200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1954:177:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "1933:198:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 89202,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:198:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89206,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "2150:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89203,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "2141:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "2141:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:33:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89208,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:33:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89212,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89179,
                        "src": "2210:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 89209,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "2184:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46670,
                      "src": "2184:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 89213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:42:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89214,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:42:172"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attestAllowlist",
            "nameLocation": "1692:15:172",
            "parameters": {
              "id": 89172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89171,
                  "mutability": "mutable",
                  "name": "_about",
                  "nameLocation": "1716:6:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89216,
                  "src": "1708:14:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1707:16:172"
            },
            "returnParameters": {
              "id": 89173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1733:0:172"
            },
            "scope": 89444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89263,
            "nodeType": "FunctionDefinition",
            "src": "2239:564:172",
            "nodes": [],
            "body": {
              "id": 89262,
              "nodeType": "Block",
              "src": "2293:510:172",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89226,
                      "mutability": "mutable",
                      "name": "attestationData",
                      "nameLocation": "2359:15:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89262,
                      "src": "2303:71:172",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 89224,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89223,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "2303:34:172"
                          },
                          "referencedDeclaration": 46567,
                          "src": "2303:34:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 89225,
                        "nodeType": "ArrayTypeName",
                        "src": "2303:36:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89233,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 89231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2418:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 89230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2377:40:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AttestationStation.AttestationData memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 89228,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89227,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46567,
                            "src": "2381:34:172"
                          },
                          "referencedDeclaration": 46567,
                          "src": "2381:34:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$46567_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 89229,
                        "nodeType": "ArrayTypeName",
                        "src": "2381:36:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      }
                    },
                    "id": 89232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2377:43:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2303:117:172"
                },
                {
                  "expression": {
                    "id": 89248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 89234,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89226,
                        "src": "2493:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 89236,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 89235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2509:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2493:18:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89239,
                          "name": "_about",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89218,
                          "src": "2570:6:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89240,
                              "name": "optimistAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89092,
                              "src": "2595:17:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                                "typeString": "contract OptimistAllowlist"
                              }
                            },
                            "id": 89241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46951,
                            "src": "2595:57:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view external returns (bytes32)"
                            }
                          },
                          "id": 89242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2595:59:172",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 89245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2679:6:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              }
                            ],
                            "id": 89244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2673:5:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 89243,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2673:5:172",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2673:13:172",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 89237,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46671,
                          "src": "2514:18:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$46671_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 89238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46567,
                        "src": "2514:34:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$46567_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 89247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2514:183:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "2493:204:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$46567_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 89249,
                  "nodeType": "ExpressionStatement",
                  "src": "2493:204:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89253,
                        "name": "sally_coinbaseQuestAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89080,
                        "src": "2716:27:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89250,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "2707:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "2707:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2707:37:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89255,
                  "nodeType": "ExpressionStatement",
                  "src": "2707:37:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89259,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89226,
                        "src": "2780:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 89256,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "2754:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46670,
                      "src": "2754:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$46567_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 89260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:42:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89261,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:42:172"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attestCoinbaseQuest",
            "nameLocation": "2248:19:172",
            "parameters": {
              "id": 89219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89218,
                  "mutability": "mutable",
                  "name": "_about",
                  "nameLocation": "2276:6:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89263,
                  "src": "2268:14:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2267:16:172"
            },
            "returnParameters": {
              "id": 89220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2293:0:172"
            },
            "scope": 89444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89360,
            "nodeType": "FunctionDefinition",
            "src": "2809:1053:172",
            "nodes": [],
            "body": {
              "id": 89359,
              "nodeType": "Block",
              "src": "2859:1003:172",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89272,
                      "mutability": "mutable",
                      "name": "addresses",
                      "nameLocation": "2886:9:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89359,
                      "src": "2869:26:172",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 89270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2869:7:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 89271,
                        "nodeType": "ArrayTypeName",
                        "src": "2869:9:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89278,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 89276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2912:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 89275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2898:13:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 89273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2902:7:172",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 89274,
                        "nodeType": "ArrayTypeName",
                        "src": "2902:9:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 89277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:16:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2869:45:172"
                },
                {
                  "expression": {
                    "id": 89283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 89279,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89272,
                        "src": "2924:9:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 89281,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 89280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2924:12:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89282,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89086,
                      "src": "2939:3:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2924:18:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89284,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:18:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89288,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "2962:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89285,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "2953:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "2953:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:33:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89290,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:33:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89294,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89272,
                        "src": "3062:9:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 89295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3073:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 89291,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89095,
                        "src": "3030:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 89293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInviteCounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47279,
                      "src": "3030:31:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256) external"
                      }
                    },
                    "id": 89296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3030:45:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89297,
                  "nodeType": "ExpressionStatement",
                  "src": "3030:45:172"
                },
                {
                  "assignments": [
                    89302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89302,
                      "mutability": "mutable",
                      "name": "claimableInvite",
                      "nameLocation": "3155:15:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89359,
                      "src": "3116:54:172",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimableInvite_$47147_memory_ptr",
                        "typeString": "struct OptimistInviter.ClaimableInvite"
                      },
                      "typeName": {
                        "id": 89301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89300,
                          "name": "OptimistInviter.ClaimableInvite",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47147,
                          "src": "3116:31:172"
                        },
                        "referencedDeclaration": 47147,
                        "src": "3116:31:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$47147_storage_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89305,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "3239:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89303,
                        "name": "optimistInviterHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89098,
                        "src": "3173:21:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                          "typeString": "contract OptimistInviterHelper"
                        }
                      },
                      "id": 89304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getClaimableInviteWithNewNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65739,
                      "src": "3173:65:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_struct$_ClaimableInvite_$47147_memory_ptr_$",
                        "typeString": "function (address) external returns (struct OptimistInviter.ClaimableInvite memory)"
                      }
                    },
                    "id": 89306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:70:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$47147_memory_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3116:127:172"
                },
                {
                  "assignments": [
                    89309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89309,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "3314:9:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89359,
                      "src": "3301:22:172",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89308,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3301:5:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89317,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89311,
                        "name": "bobPrivateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89084,
                        "src": "3353:13:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89314,
                            "name": "claimableInvite",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89302,
                            "src": "3412:15:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$47147_memory_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$47147_memory_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite memory"
                            }
                          ],
                          "expression": {
                            "id": 89312,
                            "name": "optimistInviterHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89098,
                            "src": "3380:21:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                              "typeString": "contract OptimistInviterHelper"
                            }
                          },
                          "id": 89313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getDigest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65769,
                          "src": "3380:31:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_ClaimableInvite_$47147_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct OptimistInviter.ClaimableInvite memory) view external returns (bytes32)"
                          }
                        },
                        "id": 89315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3380:48:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 89310,
                      "name": "_getSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89394,
                      "src": "3326:13:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256,bytes32) pure returns (bytes memory)"
                      }
                    },
                    "id": 89316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3326:112:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3301:137:172"
                },
                {
                  "assignments": [
                    89319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89319,
                      "mutability": "mutable",
                      "name": "hashedCommit",
                      "nameLocation": "3457:12:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89359,
                      "src": "3449:20:172",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89318,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3449:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89327,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89323,
                            "name": "claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89265,
                            "src": "3493:7:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 89324,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89309,
                            "src": "3502:9:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 89321,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3482:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 89322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3482:10:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 89325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3482:30:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 89320,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3472:9:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 89326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:41:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3449:64:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89331,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89265,
                        "src": "3562:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89328,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "3553:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "3553:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3553:17:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89333,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:17:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89337,
                        "name": "hashedCommit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89319,
                        "src": "3609:12:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89334,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89095,
                        "src": "3580:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 89336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitInvite",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47302,
                      "src": "3580:28:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 89338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3580:42:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89339,
                  "nodeType": "ExpressionStatement",
                  "src": "3580:42:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 89343,
                              "name": "optimistInviter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89095,
                              "src": "3683:15:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                                "typeString": "contract OptimistInviter"
                              }
                            },
                            "id": 89344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MIN_COMMITMENT_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47142,
                            "src": "3683:37:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 89345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3683:39:172",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 89346,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3725:5:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3725:15:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3683:57:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 89340,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "3675:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118608,
                      "src": "3675:7:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 89349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:66:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89350,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:66:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89354,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89265,
                        "src": "3819:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89355,
                        "name": "claimableInvite",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89302,
                        "src": "3828:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$47147_memory_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite memory"
                        }
                      },
                      {
                        "id": 89356,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89309,
                        "src": "3845:9:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$47147_memory_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89351,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89095,
                        "src": "3791:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 89353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimInvite",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47428,
                      "src": "3791:27:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_struct$_ClaimableInvite_$47147_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OptimistInviter.ClaimableInvite memory,bytes memory) external"
                      }
                    },
                    "id": 89357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3791:64:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89358,
                  "nodeType": "ExpressionStatement",
                  "src": "3791:64:172"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inviteAndClaim",
            "nameLocation": "2818:14:172",
            "parameters": {
              "id": 89266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89265,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "2841:7:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89360,
                  "src": "2833:15:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2833:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2832:17:172"
            },
            "returnParameters": {
              "id": 89267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2859:0:172"
            },
            "scope": 89444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89394,
            "nodeType": "FunctionDefinition",
            "src": "3993:307:172",
            "nodes": [],
            "body": {
              "id": 89393,
              "nodeType": "Block",
              "src": "4126:174:172",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89371,
                    89373,
                    89375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89371,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "4143:1:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89393,
                      "src": "4137:7:172",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 89370,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4137:5:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 89373,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4154:1:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89393,
                      "src": "4146:9:172",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89372,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4146:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 89375,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4165:1:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89393,
                      "src": "4157:9:172",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89374,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4157:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89381,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89378,
                        "name": "_signingPrivateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89363,
                        "src": "4178:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89379,
                        "name": "_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89365,
                        "src": "4198:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 89376,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "4170:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sign",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117616,
                      "src": "4170:7:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (uint256,bytes32) pure external returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 89380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4170:36:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4136:70:172"
                },
                {
                  "assignments": [
                    89383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89383,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "4230:9:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89393,
                      "src": "4217:22:172",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 89382,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4217:5:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89390,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89386,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89373,
                        "src": "4259:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89387,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89375,
                        "src": "4262:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 89388,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89371,
                        "src": "4265:1:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 89384,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4242:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 89385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4242:16:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 89389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4242:25:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4217:50:172"
                },
                {
                  "expression": {
                    "id": 89391,
                    "name": "signature",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89383,
                    "src": "4284:9:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 89369,
                  "id": 89392,
                  "nodeType": "Return",
                  "src": "4277:16:172"
                }
              ]
            },
            "documentation": {
              "id": 89361,
              "nodeType": "StructuredDocumentation",
              "src": "3868:120:172",
              "text": " @notice Get signature as a bytes blob, since SignatureChecker takes arbitrary signature blobs."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSignature",
            "nameLocation": "4002:13:172",
            "parameters": {
              "id": 89366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89363,
                  "mutability": "mutable",
                  "name": "_signingPrivateKey",
                  "nameLocation": "4024:18:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89394,
                  "src": "4016:26:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4016:7:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89365,
                  "mutability": "mutable",
                  "name": "_digest",
                  "nameLocation": "4052:7:172",
                  "nodeType": "VariableDeclaration",
                  "scope": 89394,
                  "src": "4044:15:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89364,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4044:7:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4015:45:172"
            },
            "returnParameters": {
              "id": 89369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89368,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89394,
                  "src": "4108:12:172",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 89367,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4108:5:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4107:14:172"
            },
            "scope": 89444,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89443,
            "nodeType": "FunctionDefinition",
            "src": "4306:557:172",
            "nodes": [],
            "body": {
              "id": 89442,
              "nodeType": "Block",
              "src": "4347:516:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 89402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89397,
                      "name": "attestationStation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89089,
                      "src": "4357:18:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$46671",
                        "typeString": "contract AttestationStation"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 89400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4378:22:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationStation_$46671_$",
                          "typeString": "function () returns (contract AttestationStation)"
                        },
                        "typeName": {
                          "id": 89399,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89398,
                            "name": "AttestationStation",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46671,
                            "src": "4382:18:172"
                          },
                          "referencedDeclaration": 46671,
                          "src": "4382:18:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationStation_$46671",
                            "typeString": "contract AttestationStation"
                          }
                        }
                      },
                      "id": 89401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4378:24:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$46671",
                        "typeString": "contract AttestationStation"
                      }
                    },
                    "src": "4357:45:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationStation_$46671",
                      "typeString": "contract AttestationStation"
                    }
                  },
                  "id": 89403,
                  "nodeType": "ExpressionStatement",
                  "src": "4357:45:172"
                },
                {
                  "expression": {
                    "id": 89411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89404,
                      "name": "optimistInviter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89095,
                      "src": "4413:15:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89408,
                          "name": "alice_allowlistAttestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89078,
                          "src": "4451:23:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 89409,
                          "name": "attestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89089,
                          "src": "4476:18:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationStation_$46671",
                            "typeString": "contract AttestationStation"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_AttestationStation_$46671",
                            "typeString": "contract AttestationStation"
                          }
                        ],
                        "id": 89407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4431:19:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_AttestationStation_$46671_$returns$_t_contract$_OptimistInviter_$47429_$",
                          "typeString": "function (address,contract AttestationStation) returns (contract OptimistInviter)"
                        },
                        "typeName": {
                          "id": 89406,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89405,
                            "name": "OptimistInviter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47429,
                            "src": "4435:15:172"
                          },
                          "referencedDeclaration": 47429,
                          "src": "4435:15:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                            "typeString": "contract OptimistInviter"
                          }
                        }
                      },
                      "id": 89410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4431:64:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "src": "4413:82:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                      "typeString": "contract OptimistInviter"
                    }
                  },
                  "id": 89412,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:82:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f7074696d697374496e7669746572",
                        "id": 89416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4532:17:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                          "typeString": "literal_string \"OptimistInviter\""
                        },
                        "value": "OptimistInviter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                          "typeString": "literal_string \"OptimistInviter\""
                        }
                      ],
                      "expression": {
                        "id": 89413,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89095,
                        "src": "4505:15:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 89415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47201,
                      "src": "4505:26:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 89417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4505:45:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89418,
                  "nodeType": "ExpressionStatement",
                  "src": "4505:45:172"
                },
                {
                  "expression": {
                    "id": 89431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89419,
                      "name": "optimistAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89092,
                      "src": "4561:17:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                        "typeString": "contract OptimistAllowlist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89423,
                          "name": "attestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89089,
                          "src": "4616:18:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationStation_$46671",
                            "typeString": "contract AttestationStation"
                          }
                        },
                        {
                          "id": 89424,
                          "name": "alice_allowlistAttestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89078,
                          "src": "4648:23:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 89425,
                          "name": "sally_coinbaseQuestAttestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89080,
                          "src": "4685:27:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 89428,
                              "name": "optimistInviter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89095,
                              "src": "4734:15:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                                "typeString": "contract OptimistInviter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                                "typeString": "contract OptimistInviter"
                              }
                            ],
                            "id": 89427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4726:7:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4726:7:172",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4726:24:172",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AttestationStation_$46671",
                            "typeString": "contract AttestationStation"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4581:21:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AttestationStation_$46671_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_OptimistAllowlist_$47090_$",
                          "typeString": "function (contract AttestationStation,address,address,address) returns (contract OptimistAllowlist)"
                        },
                        "typeName": {
                          "id": 89421,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89420,
                            "name": "OptimistAllowlist",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47090,
                            "src": "4585:17:172"
                          },
                          "referencedDeclaration": 47090,
                          "src": "4585:17:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                            "typeString": "contract OptimistAllowlist"
                          }
                        }
                      },
                      "id": 89430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4581:179:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                        "typeString": "contract OptimistAllowlist"
                      }
                    },
                    "src": "4561:199:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                      "typeString": "contract OptimistAllowlist"
                    }
                  },
                  "id": 89432,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:199:172"
                },
                {
                  "expression": {
                    "id": 89440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89433,
                      "name": "optimistInviterHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89098,
                      "src": "4771:21:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                        "typeString": "contract OptimistInviterHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89437,
                          "name": "optimistInviter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89095,
                          "src": "4821:15:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                            "typeString": "contract OptimistInviter"
                          }
                        },
                        {
                          "hexValue": "4f7074696d697374496e7669746572",
                          "id": 89438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4838:17:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                            "typeString": "literal_string \"OptimistInviter\""
                          },
                          "value": "OptimistInviter"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                            "typeString": "contract OptimistInviter"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                            "typeString": "literal_string \"OptimistInviter\""
                          }
                        ],
                        "id": 89436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4795:25:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_OptimistInviter_$47429_$_t_string_memory_ptr_$returns$_t_contract$_OptimistInviterHelper_$65813_$",
                          "typeString": "function (contract OptimistInviter,string memory) returns (contract OptimistInviterHelper)"
                        },
                        "typeName": {
                          "id": 89435,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 89434,
                            "name": "OptimistInviterHelper",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 65813,
                            "src": "4799:21:172"
                          },
                          "referencedDeclaration": 65813,
                          "src": "4799:21:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                            "typeString": "contract OptimistInviterHelper"
                          }
                        }
                      },
                      "id": 89439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4795:61:172",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                        "typeString": "contract OptimistInviterHelper"
                      }
                    },
                    "src": "4771:85:172",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviterHelper_$65813",
                      "typeString": "contract OptimistInviterHelper"
                    }
                  },
                  "id": 89441,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:85:172"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeContracts",
            "nameLocation": "4315:20:172",
            "parameters": {
              "id": 89395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4335:2:172"
            },
            "returnParameters": {
              "id": 89396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4347:0:172"
            },
            "scope": 89444,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 89065,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117552,
              "src": "545:4:172"
            },
            "id": 89066,
            "nodeType": "InheritanceSpecifier",
            "src": "545:4:172"
          }
        ],
        "canonicalName": "OptimistAllowlist_Initializer",
        "contractDependencies": [
          46671,
          47090,
          47429,
          65813
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89444,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "OptimistAllowlist_Initializer",
        "nameLocation": "512:29:172",
        "scope": 89817,
        "usedErrors": []
      },
      {
        "id": 89816,
        "nodeType": "ContractDefinition",
        "src": "4867:5367:172",
        "nodes": [
          {
            "id": 89497,
            "nodeType": "FunctionDefinition",
            "src": "4937:520:172",
            "nodes": [],
            "body": {
              "id": 89496,
              "nodeType": "Block",
              "src": "4983:474:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 89452,
                                "name": "optimistAllowlist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89092,
                                "src": "5057:17:172",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                                  "typeString": "contract OptimistAllowlist"
                                }
                              },
                              "id": 89453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ATTESTATION_STATION",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46955,
                              "src": "5057:37:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AttestationStation_$46671_$",
                                "typeString": "function () view external returns (contract AttestationStation)"
                              }
                            },
                            "id": 89454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5057:39:172",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          ],
                          "id": 89451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5049:7:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5049:7:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5049:48:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89458,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89089,
                            "src": "5107:18:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttestationStation_$46671",
                              "typeString": "contract AttestationStation"
                            }
                          ],
                          "id": 89457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5099:7:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89456,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5099:7:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5099:27:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89449,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 114965,
                      "src": "5040:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 89460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5040:87:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89461,
                  "nodeType": "ExpressionStatement",
                  "src": "5040:87:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89463,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "5146:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ALLOWLIST_ATTESTOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46958,
                          "src": "5146:36:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 89465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5146:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89466,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "5186:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89462,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 114965,
                      "src": "5137:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 89467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5137:73:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89468,
                  "nodeType": "ExpressionStatement",
                  "src": "5137:73:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89470,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "5229:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COINBASE_QUEST_ATTESTOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46961,
                          "src": "5229:41:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 89472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5229:43:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89473,
                        "name": "sally_coinbaseQuestAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89080,
                        "src": "5274:27:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89469,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 114965,
                      "src": "5220:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 89474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5220:82:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89475,
                  "nodeType": "ExpressionStatement",
                  "src": "5220:82:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 89479,
                                "name": "optimistAllowlist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89092,
                                "src": "5329:17:172",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                                  "typeString": "contract OptimistAllowlist"
                                }
                              },
                              "id": 89480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OPTIMIST_INVITER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46964,
                              "src": "5329:34:172",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 89481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5329:36:172",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 89478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5321:7:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5321:7:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5321:45:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89485,
                            "name": "optimistInviter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89095,
                            "src": "5376:15:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                              "typeString": "contract OptimistInviter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimistInviter_$47429",
                              "typeString": "contract OptimistInviter"
                            }
                          ],
                          "id": 89484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5368:7:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89483,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5368:7:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5368:24:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89476,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 114965,
                      "src": "5312:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 89487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:81:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89488,
                  "nodeType": "ExpressionStatement",
                  "src": "5312:81:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89490,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "5413:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "version",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 106074,
                          "src": "5413:25:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 89492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5413:27:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "312e302e30",
                        "id": 89493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5442:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        },
                        "value": "1.0.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        }
                      ],
                      "id": 89489,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 116284,
                      "src": "5404:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 89494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:46:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89495,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:46:172"
                }
              ]
            },
            "functionSelector": "80aee254",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_constructor_succeeds",
            "nameLocation": "4946:25:172",
            "parameters": {
              "id": 89447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4971:2:172"
            },
            "returnParameters": {
              "id": 89448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4983:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89509,
            "nodeType": "FunctionDefinition",
            "src": "5577:138:172",
            "nodes": [],
            "body": {
              "id": 89508,
              "nodeType": "Block",
              "src": "5647:68:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89504,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "5703:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89502,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "5669:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "5669:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5669:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89501,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123021,
                        123035
                      ],
                      "referencedDeclaration": 123021,
                      "src": "5657:11:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5657:51:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89507,
                  "nodeType": "ExpressionStatement",
                  "src": "5657:51:172"
                }
              ]
            },
            "documentation": {
              "id": 89498,
              "nodeType": "StructuredDocumentation",
              "src": "5463:109:172",
              "text": " @notice Base case, a account without any relevant attestations should not be able to mint."
            },
            "functionSelector": "f4fa2a45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_withoutAnyAttestations_fails",
            "nameLocation": "5586:49:172",
            "parameters": {
              "id": 89499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5635:2:172"
            },
            "returnParameters": {
              "id": 89500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5647:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89525,
            "nodeType": "FunctionDefinition",
            "src": "5835:169:172",
            "nodes": [],
            "body": {
              "id": 89524,
              "nodeType": "Block",
              "src": "5907:97:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89514,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "5933:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89513,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89216,
                      "src": "5917:15:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5917:20:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89516,
                  "nodeType": "ExpressionStatement",
                  "src": "5917:20:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89520,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "5992:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89518,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "5958:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "5958:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5958:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89517,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        114914,
                        114935
                      ],
                      "referencedDeclaration": 114914,
                      "src": "5947:10:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5947:50:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89523,
                  "nodeType": "ExpressionStatement",
                  "src": "5947:50:172"
                }
              ]
            },
            "documentation": {
              "id": 89510,
              "nodeType": "StructuredDocumentation",
              "src": "5721:109:172",
              "text": " @notice After receiving a valid allowlist attestation, the account should be able to mint."
            },
            "functionSelector": "7d9f5772",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromAllowlistAttestor_succeeds",
            "nameLocation": "5844:51:172",
            "parameters": {
              "id": 89511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5895:2:172"
            },
            "returnParameters": {
              "id": 89512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5907:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89541,
            "nodeType": "FunctionDefinition",
            "src": "6162:177:172",
            "nodes": [],
            "body": {
              "id": 89540,
              "nodeType": "Block",
              "src": "6238:101:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89530,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "6268:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89529,
                      "name": "attestCoinbaseQuest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89263,
                      "src": "6248:19:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:24:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89532,
                  "nodeType": "ExpressionStatement",
                  "src": "6248:24:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89536,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "6327:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89534,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "6293:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "6293:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6293:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89533,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        114914,
                        114935
                      ],
                      "referencedDeclaration": 114914,
                      "src": "6282:10:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6282:50:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89539,
                  "nodeType": "ExpressionStatement",
                  "src": "6282:50:172"
                }
              ]
            },
            "documentation": {
              "id": 89526,
              "nodeType": "StructuredDocumentation",
              "src": "6010:147:172",
              "text": " @notice After receiving a valid attestation from the Coinbase Quest attestor,\n         the account should be able to mint."
            },
            "functionSelector": "a2ebe184",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds",
            "nameLocation": "6171:55:172",
            "parameters": {
              "id": 89527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6226:2:172"
            },
            "returnParameters": {
              "id": 89528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6238:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89557,
            "nodeType": "FunctionDefinition",
            "src": "6525:157:172",
            "nodes": [],
            "body": {
              "id": 89556,
              "nodeType": "Block",
              "src": "6586:96:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89546,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "6611:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89545,
                      "name": "inviteAndClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89360,
                      "src": "6596:14:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6596:19:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89548,
                  "nodeType": "ExpressionStatement",
                  "src": "6596:19:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89552,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "6670:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89550,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "6636:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "6636:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6636:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89549,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        114914,
                        114935
                      ],
                      "referencedDeclaration": 114914,
                      "src": "6625:10:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6625:50:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89555,
                  "nodeType": "ExpressionStatement",
                  "src": "6625:50:172"
                }
              ]
            },
            "documentation": {
              "id": 89542,
              "nodeType": "StructuredDocumentation",
              "src": "6345:175:172",
              "text": " @notice Account that received an attestation from the OptimistInviter contract by going\n         through the claim invite flow should be able to mint."
            },
            "functionSelector": "910cfdae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromInvite_succeeds",
            "nameLocation": "6534:40:172",
            "parameters": {
              "id": 89543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6574:2:172"
            },
            "returnParameters": {
              "id": 89544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6586:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89588,
            "nodeType": "FunctionDefinition",
            "src": "6791:366:172",
            "nodes": [],
            "body": {
              "id": 89587,
              "nodeType": "Block",
              "src": "6865:292:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89564,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89082,
                        "src": "6929:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89561,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "6920:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "6920:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6920:13:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89566,
                  "nodeType": "ExpressionStatement",
                  "src": "6920:13:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89570,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "6982:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89571,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "6999:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46944,
                          "src": "6999:51:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 89573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6999:53:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 89576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7072:6:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 89575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7066:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89574,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7066:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7066:13:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89567,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "6943:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "6943:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 89578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6943:146:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89579,
                  "nodeType": "ExpressionStatement",
                  "src": "6943:146:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89583,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "7145:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89581,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "7111:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "7111:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7111:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89580,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123021,
                        123035
                      ],
                      "referencedDeclaration": 123021,
                      "src": "7099:11:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7099:51:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89586,
                  "nodeType": "ExpressionStatement",
                  "src": "7099:51:172"
                }
              ]
            },
            "documentation": {
              "id": 89558,
              "nodeType": "StructuredDocumentation",
              "src": "6688:98:172",
              "text": " @notice Attestation from the wrong allowlist attestor should not allow minting."
            },
            "functionSelector": "c4873875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromWrongAllowlistAttestor_fails",
            "nameLocation": "6800:53:172",
            "parameters": {
              "id": 89559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6853:2:172"
            },
            "returnParameters": {
              "id": 89560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6865:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89619,
            "nodeType": "FunctionDefinition",
            "src": "7267:381:172",
            "nodes": [],
            "body": {
              "id": 89618,
              "nodeType": "Block",
              "src": "7345:303:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89595,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89082,
                        "src": "7414:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89592,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "7405:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "7405:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7405:13:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89597,
                  "nodeType": "ExpressionStatement",
                  "src": "7405:13:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89601,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "7467:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89602,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "7484:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46951,
                          "src": "7484:57:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 89604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7484:59:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 89607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7563:6:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 89606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7557:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89605,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7557:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7557:13:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89598,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "7428:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "7428:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 89609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7428:152:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89610,
                  "nodeType": "ExpressionStatement",
                  "src": "7428:152:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89614,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "7636:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89612,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "7602:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "7602:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7602:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89611,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123021,
                        123035
                      ],
                      "referencedDeclaration": 123021,
                      "src": "7590:11:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7590:51:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89617,
                  "nodeType": "ExpressionStatement",
                  "src": "7590:51:172"
                }
              ]
            },
            "documentation": {
              "id": 89589,
              "nodeType": "StructuredDocumentation",
              "src": "7163:99:172",
              "text": " @notice Coinbase quest attestation from wrong attestor should not allow minting."
            },
            "functionSelector": "b44cd0e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails",
            "nameLocation": "7276:57:172",
            "parameters": {
              "id": 89590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7333:2:172"
            },
            "returnParameters": {
              "id": 89591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7345:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89649,
            "nodeType": "FunctionDefinition",
            "src": "7790:329:172",
            "nodes": [],
            "body": {
              "id": 89648,
              "nodeType": "Block",
              "src": "7862:257:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89626,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89082,
                        "src": "7881:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89623,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "7872:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "7872:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7872:13:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89628,
                  "nodeType": "ExpressionStatement",
                  "src": "7872:13:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89632,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "7934:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 89633,
                          "name": "OptimistConstants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47440,
                          "src": "7951:17:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OptimistConstants_$47440_$",
                            "typeString": "type(library OptimistConstants)"
                          }
                        },
                        "id": 89634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OPTIMIST_CAN_MINT_FROM_INVITE_ATTESTATION_KEY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47439,
                        "src": "7951:63:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 89637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8034:6:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 89636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8028:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89635,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8028:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8028:13:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89629,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "7895:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "7895:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 89639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7895:156:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89640,
                  "nodeType": "ExpressionStatement",
                  "src": "7895:156:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89644,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "8107:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89642,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "8073:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "8073:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8073:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89641,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123021,
                        123035
                      ],
                      "referencedDeclaration": 123021,
                      "src": "8061:11:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8061:51:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89647,
                  "nodeType": "ExpressionStatement",
                  "src": "8061:51:172"
                }
              ]
            },
            "documentation": {
              "id": 89620,
              "nodeType": "StructuredDocumentation",
              "src": "7654:131:172",
              "text": " @notice Claiming an invite on the non-official OptimistInviter contract should not allow\n         minting."
            },
            "functionSelector": "276beb5f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromWrongOptimistInviter_fails",
            "nameLocation": "7799:51:172",
            "parameters": {
              "id": 89621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7850:2:172"
            },
            "returnParameters": {
              "id": 89622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7862:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89699,
            "nodeType": "FunctionDefinition",
            "src": "8233:630:172",
            "nodes": [],
            "body": {
              "id": 89698,
              "nodeType": "Block",
              "src": "8308:555:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89654,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "8334:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89653,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89216,
                      "src": "8318:15:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8318:20:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89656,
                  "nodeType": "ExpressionStatement",
                  "src": "8318:20:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89658,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "8368:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89657,
                      "name": "attestCoinbaseQuest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89263,
                      "src": "8348:19:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8348:24:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89660,
                  "nodeType": "ExpressionStatement",
                  "src": "8348:24:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89662,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "8397:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89661,
                      "name": "inviteAndClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89360,
                      "src": "8382:14:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:19:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89664,
                  "nodeType": "ExpressionStatement",
                  "src": "8382:19:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89668,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "8457:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89666,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "8423:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "8423:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8423:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89665,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        114914,
                        114935
                      ],
                      "referencedDeclaration": 114914,
                      "src": "8412:10:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:50:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89671,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:50:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89675,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89082,
                        "src": "8549:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89672,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "8540:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "8540:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8540:13:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89677,
                  "nodeType": "ExpressionStatement",
                  "src": "8540:13:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89681,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "8602:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 89682,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "8619:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46944,
                          "src": "8619:51:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 89684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8619:53:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 89687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8692:6:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 89686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8686:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89685,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8686:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8686:13:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89678,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "8563:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "8563:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 89689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:146:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89690,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:146:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89694,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "8851:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89692,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "8817:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "8817:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8817:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89691,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        114914,
                        114935
                      ],
                      "referencedDeclaration": 114914,
                      "src": "8806:10:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8806:50:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89697,
                  "nodeType": "ExpressionStatement",
                  "src": "8806:50:172"
                }
              ]
            },
            "documentation": {
              "id": 89650,
              "nodeType": "StructuredDocumentation",
              "src": "8125:103:172",
              "text": " @notice Having multiple signals, even if one is invalid, should still allow minting."
            },
            "functionSelector": "c4625960",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_withMultipleAttestations_succeeds",
            "nameLocation": "8242:54:172",
            "parameters": {
              "id": 89651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8296:2:172"
            },
            "returnParameters": {
              "id": 89652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8308:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89757,
            "nodeType": "FunctionDefinition",
            "src": "8957:581:172",
            "nodes": [],
            "body": {
              "id": 89756,
              "nodeType": "Block",
              "src": "9040:498:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89704,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "9109:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89703,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89216,
                      "src": "9093:15:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9093:20:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89706,
                  "nodeType": "ExpressionStatement",
                  "src": "9093:20:172"
                },
                {
                  "assignments": [
                    89708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89708,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "9132:3:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89756,
                      "src": "9124:11:172",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89707,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9124:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89712,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89709,
                        "name": "optimistAllowlist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89092,
                        "src": "9138:17:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                          "typeString": "contract OptimistAllowlist"
                        }
                      },
                      "id": 89710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46944,
                      "src": "9138:51:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 89711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9138:53:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9124:67:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 89716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9215:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9221:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9227:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 89719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9233:5:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 89713,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "9201:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118739,
                      "src": "9201:13:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 89720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9201:38:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89721,
                  "nodeType": "ExpressionStatement",
                  "src": "9201:38:172"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 89723,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "9273:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89724,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "9298:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89725,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89708,
                        "src": "9303:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "64736166736473",
                            "id": 89728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9314:9:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ea3e3f7147c048d654af79f29d0828563335e686aa09abaeacfa73a259a8741a",
                              "typeString": "literal_string \"dsafsds\""
                            },
                            "value": "dsafsds"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ea3e3f7147c048d654af79f29d0828563335e686aa09abaeacfa73a259a8741a",
                              "typeString": "literal_string \"dsafsds\""
                            }
                          ],
                          "id": 89727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9308:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89726,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9308:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9308:16:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 89722,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89076,
                      "src": "9254:18:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 89730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9254:71:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89731,
                  "nodeType": "EmitStatement",
                  "src": "9249:76:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89735,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "9389:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89732,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "9380:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "9380:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9380:33:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89737,
                  "nodeType": "ExpressionStatement",
                  "src": "9380:33:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89741,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "9449:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89742,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89708,
                        "src": "9454:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 89745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9465:2:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 89744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9459:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89743,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9459:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9459:9:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89738,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "9423:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "9423:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 89747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9423:46:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89748,
                  "nodeType": "ExpressionStatement",
                  "src": "9423:46:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89752,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "9526:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89750,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "9492:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "9492:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9492:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89749,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123021,
                        123035
                      ],
                      "referencedDeclaration": 123021,
                      "src": "9480:11:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9480:51:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89755,
                  "nodeType": "ExpressionStatement",
                  "src": "9480:51:172"
                }
              ]
            },
            "documentation": {
              "id": 89700,
              "nodeType": "StructuredDocumentation",
              "src": "8869:83:172",
              "text": " @notice Having falsy attestation value should not allow minting."
            },
            "functionSelector": "defdd115",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails",
            "nameLocation": "8966:62:172",
            "parameters": {
              "id": 89701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9028:2:172"
            },
            "returnParameters": {
              "id": 89702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9040:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89815,
            "nodeType": "FunctionDefinition",
            "src": "9655:577:172",
            "nodes": [],
            "body": {
              "id": 89814,
              "nodeType": "Block",
              "src": "9742:490:172",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89762,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "9811:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89761,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89216,
                      "src": "9795:15:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9795:20:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89764,
                  "nodeType": "ExpressionStatement",
                  "src": "9795:20:172"
                },
                {
                  "assignments": [
                    89766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89766,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "9834:3:172",
                      "nodeType": "VariableDeclaration",
                      "scope": 89814,
                      "src": "9826:11:172",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89765,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9826:7:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89770,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89767,
                        "name": "optimistAllowlist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89092,
                        "src": "9840:17:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                          "typeString": "contract OptimistAllowlist"
                        }
                      },
                      "id": 89768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46944,
                      "src": "9840:51:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 89769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9840:53:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9826:67:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 89774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9917:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9923:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9929:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9935:4:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 89771,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "9903:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118739,
                      "src": "9903:13:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 89778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9903:37:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89779,
                  "nodeType": "ExpressionStatement",
                  "src": "9903:37:172"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 89781,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "9974:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89782,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "9999:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89783,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89766,
                        "src": "10004:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 89786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10015:2:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 89785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10009:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89784,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "10009:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10009:9:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 89780,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89076,
                      "src": "9955:18:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 89788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9955:64:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89789,
                  "nodeType": "EmitStatement",
                  "src": "9950:69:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89793,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89078,
                        "src": "10083:23:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89790,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "10074:2:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118671,
                      "src": "10074:8:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10074:33:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89795,
                  "nodeType": "ExpressionStatement",
                  "src": "10074:33:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89799,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "10143:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89800,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89766,
                        "src": "10148:3:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 89803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10159:2:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 89802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10153:5:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 89801,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "10153:5:172",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10153:9:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 89796,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89089,
                        "src": "10117:18:172",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$46671",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 89798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46627,
                      "src": "10117:25:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 89805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10117:46:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89806,
                  "nodeType": "ExpressionStatement",
                  "src": "10117:46:172"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89810,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89086,
                            "src": "10220:3:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89808,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89092,
                            "src": "10186:17:172",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$47090",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 89809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47020,
                          "src": "10186:33:172",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 89811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10186:38:172",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89807,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123021,
                        123035
                      ],
                      "referencedDeclaration": 123021,
                      "src": "10174:11:172",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 89812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10174:51:172",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89813,
                  "nodeType": "ExpressionStatement",
                  "src": "10174:51:172"
                }
              ]
            },
            "documentation": {
              "id": 89758,
              "nodeType": "StructuredDocumentation",
              "src": "9544:106:172",
              "text": " @notice Having falsy attestation value from Coinbase attestor should not allow minting."
            },
            "functionSelector": "ec85c462",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails",
            "nameLocation": "9664:66:172",
            "parameters": {
              "id": 89759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9730:2:172"
            },
            "returnParameters": {
              "id": 89760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9742:0:172"
            },
            "scope": 89816,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 89445,
              "name": "OptimistAllowlist_Initializer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89444,
              "src": "4901:29:172"
            },
            "id": 89446,
            "nodeType": "InheritanceSpecifier",
            "src": "4901:29:172"
          }
        ],
        "canonicalName": "OptimistAllowlistTest",
        "contractDependencies": [
          46671,
          47090,
          47429,
          65813
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89816,
          89444,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "OptimistAllowlistTest",
        "nameLocation": "4876:21:172",
        "scope": 89817,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 172
}