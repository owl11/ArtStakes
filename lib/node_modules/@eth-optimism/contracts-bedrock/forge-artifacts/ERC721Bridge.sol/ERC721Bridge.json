{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC721BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC721BridgeInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC721To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC721(address,address,uint256,uint32,bytes)": "3687011a",
    "bridgeERC721To(address,address,address,uint256,uint32,bytes)": "aa557452",
    "messenger()": "3cb747bf",
    "otherBridge()": "c89701a2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"params\":{\"extraData\":\"Extra data for use on the client-side.\",\"from\":\"Address that initiated bridging action.\",\"localToken\":\"Address of the token on this domain.\",\"remoteToken\":\"Address of the token on the remote domain.\",\"to\":\"Address to receive the token.\",\"tokenId\":\"ID of the specific token deposited.\"}},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"params\":{\"extraData\":\"Extra data for use on the client-side.\",\"from\":\"Address that initiated bridging action.\",\"localToken\":\"Address of the token on this domain.\",\"remoteToken\":\"Address of the token on the remote domain.\",\"to\":\"Address to receive the token.\",\"tokenId\":\"ID of the specific token deposited.\"}}},\"kind\":\"dev\",\"methods\":{\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_to\":\"Address to receive the token on the other domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"constructor\":{\"params\":{\"_messenger\":\"Address of the CrossDomainMessenger on this network.\",\"_otherBridge\":\"Address of the ERC721 bridge on the other network.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}},\"otherBridge()\":{\"custom:legacy\":\"@notice Legacy getter for other bridge address.\",\"returns\":{\"_0\":\"Address of the bridge on the other network.\"}}},\"title\":\"ERC721Bridge\",\"version\":1},\"userdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge from the other network is finalized.\"},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge to the other network is initiated.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Address of the bridge on the other network.\"},\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"}},\"notice\":\"ERC721Bridge is a base contract for the L1 and L2 ERC721 bridges.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/universal/ERC721Bridge.sol\":\"ERC721Bridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L1/ResourceMetering.sol\":{\"keccak256\":\"0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562\",\"dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP\"]},\"contracts/libraries/Arithmetic.sol\":{\"keccak256\":\"0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0\",\"dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0xb3d5f5370d106d181fd6a3cc6c8ca2e476577d487572be089b746c1a71a7b82b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b20c0f7818daf78634aa721b441a2fd7469bfd20fd2d63c922437c3037b8cdb\",\"dweb:/ipfs/QmUtpZYavK7njnqXkpi1QA5A2mwDKXyjkU1hhSo9vRLoFq\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0xb6908eada9896c172eb16ac196763fe82b07c595f424c19c1734ffd7cd437622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382ddbc903bf239dcd752f13cbc40cd271afd99323f2d11b8d7b20a069d257be\",\"dweb:/ipfs/QmeUbvEbwDoJV1ytiu4xUMReMePMYSHJ2m4mFPiidCGJrf\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x2e232df6b4c6e30f33d8242b41848331285a0439227e80bd4e0a2d7d599ce06d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495ca371e91787525f421162ac77fb30e0887a8df0a6e36a79017e711f8496e4\",\"dweb:/ipfs/QmcJjNWwXiKeosTQRoRM1qjC2f8GUkrFNA8hwthoNedjsq\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0x4cabce33fa3c59ff3206dae21722fe34e5753ea8d9246fc07c0d23cbdb3610f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba2beeed5a481afdd92fe09ff8b25b423a8f8d77816b41039603d35aca733cc\",\"dweb:/ipfs/QmPztnkeUeZjZ5BnWAdAAF9fg7QiCkYdffzzvoCxUsVLLM\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x2371d20825b028f3d4b79db49b58d132929476f828fe4dcade9a2ddf5376d563\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1406d7d1f508361eaec926f28b0921fd95b2c57a3919d1f9f40b39e805472c64\",\"dweb:/ipfs/QmRtGgeFBt1RimoRRNKHL8VDZP9q9eRCke2gcWNZhYaTc6\"]},\"contracts/universal/ERC721Bridge.sol\":{\"keccak256\":\"0xed6b0a64ffd09fcf8ef88f4325d2184cbf136603de8bf9691a16dac06453f0c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7783c46e23ba188286b2efa1c13853acee760b2a389c6cc7f669c108bb631290\",\"dweb:/ipfs/QmTcvU1KCyytz2uYQMHVdMVLeG1PvuoWVyz6935CTkJD9x\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC721BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC721BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC721To"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "otherBridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bridgeERC721(address,address,uint256,uint32,bytes)": {
            "params": {
              "_extraData": "Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.",
              "_localToken": "Address of the ERC721 on this domain.",
              "_minGasLimit": "Minimum gas limit for the bridge message on the other domain.",
              "_remoteToken": "Address of the ERC721 on the remote domain.",
              "_tokenId": "Token ID to bridge."
            }
          },
          "bridgeERC721To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_extraData": "Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.",
              "_localToken": "Address of the ERC721 on this domain.",
              "_minGasLimit": "Minimum gas limit for the bridge message on the other domain.",
              "_remoteToken": "Address of the ERC721 on the remote domain.",
              "_to": "Address to receive the token on the other domain.",
              "_tokenId": "Token ID to bridge."
            }
          },
          "constructor": {
            "params": {
              "_messenger": "Address of the CrossDomainMessenger on this network.",
              "_otherBridge": "Address of the ERC721 bridge on the other network."
            }
          },
          "messenger()": {
            "custom:legacy": "@notice Legacy getter for messenger contract.",
            "returns": {
              "_0": "Messenger contract on this domain."
            }
          },
          "otherBridge()": {
            "custom:legacy": "@notice Legacy getter for other bridge address.",
            "returns": {
              "_0": "Address of the bridge on the other network."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Messenger contract on this domain."
          },
          "OTHER_BRIDGE()": {
            "notice": "Address of the bridge on the other network."
          },
          "bridgeERC721(address,address,uint256,uint32,bytes)": {
            "notice": "Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2."
          },
          "bridgeERC721To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/universal/ERC721Bridge.sol": "ERC721Bridge"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L1/ResourceMetering.sol": {
        "keccak256": "0x35ca59dee75f40dce00096a4a4648fbb7c10b4a43e9c30c2553b7703a7549743",
        "urls": [
          "bzz-raw://24e8582cb6f9803f66237816e2cbb075b7be4a9933dda83f4683409fac1ce562",
          "dweb:/ipfs/QmewENu8wjnsPZS39L19kjk1hsfpkLKrsomNs711oiwzxP"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Arithmetic.sol": {
        "keccak256": "0xd4d2a32c60c02a9b5484ddc19a4c9309b81908968dacc71ba42e97bd8a82efa2",
        "urls": [
          "bzz-raw://2e1411ddf93a89b7a94d4252399ae4a790278d9dc4e0772e040a52b6df7f81d0",
          "dweb:/ipfs/Qmetfi8dN9nyzjnK7PGUBqNp6nXECAbpQkyEJQXYFoP8Cb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Constants.sol": {
        "keccak256": "0xb3d5f5370d106d181fd6a3cc6c8ca2e476577d487572be089b746c1a71a7b82b",
        "urls": [
          "bzz-raw://1b20c0f7818daf78634aa721b441a2fd7469bfd20fd2d63c922437c3037b8cdb",
          "dweb:/ipfs/QmUtpZYavK7njnqXkpi1QA5A2mwDKXyjkU1hhSo9vRLoFq"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0xb6908eada9896c172eb16ac196763fe82b07c595f424c19c1734ffd7cd437622",
        "urls": [
          "bzz-raw://382ddbc903bf239dcd752f13cbc40cd271afd99323f2d11b8d7b20a069d257be",
          "dweb:/ipfs/QmeUbvEbwDoJV1ytiu4xUMReMePMYSHJ2m4mFPiidCGJrf"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x2e232df6b4c6e30f33d8242b41848331285a0439227e80bd4e0a2d7d599ce06d",
        "urls": [
          "bzz-raw://495ca371e91787525f421162ac77fb30e0887a8df0a6e36a79017e711f8496e4",
          "dweb:/ipfs/QmcJjNWwXiKeosTQRoRM1qjC2f8GUkrFNA8hwthoNedjsq"
        ],
        "license": "MIT"
      },
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0x4cabce33fa3c59ff3206dae21722fe34e5753ea8d9246fc07c0d23cbdb3610f3",
        "urls": [
          "bzz-raw://6ba2beeed5a481afdd92fe09ff8b25b423a8f8d77816b41039603d35aca733cc",
          "dweb:/ipfs/QmPztnkeUeZjZ5BnWAdAAF9fg7QiCkYdffzzvoCxUsVLLM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x2371d20825b028f3d4b79db49b58d132929476f828fe4dcade9a2ddf5376d563",
        "urls": [
          "bzz-raw://1406d7d1f508361eaec926f28b0921fd95b2c57a3919d1f9f40b39e805472c64",
          "dweb:/ipfs/QmRtGgeFBt1RimoRRNKHL8VDZP9q9eRCke2gcWNZhYaTc6"
        ],
        "license": "MIT"
      },
      "contracts/universal/ERC721Bridge.sol": {
        "keccak256": "0xed6b0a64ffd09fcf8ef88f4325d2184cbf136603de8bf9691a16dac06453f0c4",
        "urls": [
          "bzz-raw://7783c46e23ba188286b2efa1c13853acee760b2a389c6cc7f669c108bb631290",
          "dweb:/ipfs/QmTcvU1KCyytz2uYQMHVdMVLeG1PvuoWVyz6935CTkJD9x"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 104144,
        "contract": "contracts/universal/ERC721Bridge.sol:ERC721Bridge",
        "label": "__gap",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Messenger contract on this domain."
      },
      "OTHER_BRIDGE()": {
        "notice": "Address of the bridge on the other network."
      },
      "bridgeERC721(address,address,uint256,uint32,bytes)": {
        "notice": "Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2."
      },
      "bridgeERC721To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2."
      }
    },
    "events": {
      "ERC721BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC721 bridge from the other network is finalized."
      },
      "ERC721BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC721 bridge to the other network is initiated."
      }
    },
    "notice": "ERC721Bridge is a base contract for the L1 and L2 ERC721 bridges."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "bridgeERC721(address,address,uint256,uint32,bytes)": {
        "params": {
          "_extraData": "Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.",
          "_localToken": "Address of the ERC721 on this domain.",
          "_minGasLimit": "Minimum gas limit for the bridge message on the other domain.",
          "_remoteToken": "Address of the ERC721 on the remote domain.",
          "_tokenId": "Token ID to bridge."
        }
      },
      "bridgeERC721To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_extraData": "Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.",
          "_localToken": "Address of the ERC721 on this domain.",
          "_minGasLimit": "Minimum gas limit for the bridge message on the other domain.",
          "_remoteToken": "Address of the ERC721 on the remote domain.",
          "_to": "Address to receive the token on the other domain.",
          "_tokenId": "Token ID to bridge."
        }
      },
      "constructor": {
        "params": {
          "_messenger": "Address of the CrossDomainMessenger on this network.",
          "_otherBridge": "Address of the ERC721 bridge on the other network."
        }
      },
      "messenger()": {
        "returns": {
          "_0": "Messenger contract on this domain."
        }
      },
      "otherBridge()": {
        "returns": {
          "_0": "Address of the bridge on the other network."
        }
      }
    },
    "events": {
      "ERC721BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "extraData": "Extra data for use on the client-side.",
          "from": "Address that initiated bridging action.",
          "localToken": "Address of the token on this domain.",
          "remoteToken": "Address of the token on the remote domain.",
          "to": "Address to receive the token.",
          "tokenId": "ID of the specific token deposited."
        }
      },
      "ERC721BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "extraData": "Extra data for use on the client-side.",
          "from": "Address that initiated bridging action.",
          "localToken": "Address of the token on this domain.",
          "remoteToken": "Address of the token on the remote domain.",
          "to": "Address to receive the token.",
          "tokenId": "ID of the specific token deposited."
        }
      }
    },
    "title": "ERC721Bridge"
  },
  "ast": {
    "absolutePath": "contracts/universal/ERC721Bridge.sol",
    "id": 104349,
    "exportedSymbols": {
      "Address": [
        111317
      ],
      "CrossDomainMessenger": [
        104125
      ],
      "ERC721Bridge": [
        104348
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8515:201",
    "nodes": [
      {
        "id": 104127,
        "nodeType": "PragmaDirective",
        "src": "32:23:201",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 104129,
        "nodeType": "ImportDirective",
        "src": "57:66:201",
        "nodes": [],
        "absolutePath": "contracts/universal/CrossDomainMessenger.sol",
        "file": "./CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104349,
        "sourceUnit": 104126,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104128,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 104125,
              "src": "66:20:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104131,
        "nodeType": "ImportDirective",
        "src": "124:68:201",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104349,
        "sourceUnit": 111318,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104130,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111317,
              "src": "133:7:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104348,
        "nodeType": "ContractDefinition",
        "src": "296:8250:201",
        "nodes": [
          {
            "id": 104136,
            "nodeType": "VariableDeclaration",
            "src": "384:47:201",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104133,
              "nodeType": "StructuredDocumentation",
              "src": "333:46:201",
              "text": "@notice Messenger contract on this domain."
            },
            "functionSelector": "927ede2d",
            "mutability": "immutable",
            "name": "MESSENGER",
            "nameLocation": "422:9:201",
            "scope": 104348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
              "typeString": "contract CrossDomainMessenger"
            },
            "typeName": {
              "id": 104135,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104134,
                "name": "CrossDomainMessenger",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104125,
                "src": "384:20:201"
              },
              "referencedDeclaration": 104125,
              "src": "384:20:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                "typeString": "contract CrossDomainMessenger"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104139,
            "nodeType": "VariableDeclaration",
            "src": "498:37:201",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104137,
              "nodeType": "StructuredDocumentation",
              "src": "438:55:201",
              "text": "@notice Address of the bridge on the other network."
            },
            "functionSelector": "7f46ddb2",
            "mutability": "immutable",
            "name": "OTHER_BRIDGE",
            "nameLocation": "523:12:201",
            "scope": 104348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 104138,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:201",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104144,
            "nodeType": "VariableDeclaration",
            "src": "640:25:201",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104140,
              "nodeType": "StructuredDocumentation",
              "src": "542:93:201",
              "text": "@notice Reserve extra slots (to a total of 50) in the storage layout for future upgrades."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "660:5:201",
            "scope": 104348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 104141,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "640:7:201",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 104143,
              "length": {
                "hexValue": "3439",
                "id": 104142,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "648:2:201",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "640:11:201",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 104159,
            "nodeType": "EventDefinition",
            "src": "1140:207:201",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 104145,
              "nodeType": "StructuredDocumentation",
              "src": "672:463:201",
              "text": "@notice Emitted when an ERC721 bridge to the other network is initiated.\n @param localToken  Address of the token on this domain.\n @param remoteToken Address of the token on the remote domain.\n @param from        Address that initiated bridging action.\n @param to          Address to receive the token.\n @param tokenId     ID of the specific token deposited.\n @param extraData   Extra data for use on the client-side."
            },
            "eventSelector": "b7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a5",
            "name": "ERC721BridgeInitiated",
            "nameLocation": "1146:21:201",
            "parameters": {
              "id": 104158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104147,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "1193:10:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104159,
                  "src": "1177:26:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104149,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "1229:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104159,
                  "src": "1213:27:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104151,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1266:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104159,
                  "src": "1250:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1288:2:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104159,
                  "src": "1280:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1308:7:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104159,
                  "src": "1300:15:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "1331:9:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104159,
                  "src": "1325:15:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104156,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1167:179:201"
            }
          },
          {
            "id": 104174,
            "nodeType": "EventDefinition",
            "src": "1823:207:201",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 104160,
              "nodeType": "StructuredDocumentation",
              "src": "1353:465:201",
              "text": "@notice Emitted when an ERC721 bridge from the other network is finalized.\n @param localToken  Address of the token on this domain.\n @param remoteToken Address of the token on the remote domain.\n @param from        Address that initiated bridging action.\n @param to          Address to receive the token.\n @param tokenId     ID of the specific token deposited.\n @param extraData   Extra data for use on the client-side."
            },
            "eventSelector": "1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac",
            "name": "ERC721BridgeFinalized",
            "nameLocation": "1829:21:201",
            "parameters": {
              "id": 104173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104162,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "1876:10:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104174,
                  "src": "1860:26:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104164,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "1912:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104174,
                  "src": "1896:27:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104166,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1949:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104174,
                  "src": "1933:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1971:2:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104174,
                  "src": "1963:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104170,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1991:7:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104174,
                  "src": "1983:15:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2014:9:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104174,
                  "src": "2008:15:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104171,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:179:201"
            }
          },
          {
            "id": 104196,
            "nodeType": "ModifierDefinition",
            "src": "2124:249:201",
            "nodes": [],
            "body": {
              "id": 104195,
              "nodeType": "Block",
              "src": "2151:222:201",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 104190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 104184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 104178,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2182:3:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 104179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2182:10:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 104182,
                                "name": "MESSENGER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104136,
                                "src": "2204:9:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              ],
                              "id": 104181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2196:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 104180,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2196:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 104183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2196:18:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2182:32:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 104189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 104185,
                                "name": "MESSENGER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104136,
                                "src": "2218:9:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              },
                              "id": 104186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "xDomainMessageSender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 104037,
                              "src": "2218:30:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 104187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2218:32:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 104188,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104139,
                            "src": "2254:12:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2218:48:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2182:84:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20746865206f7468657220627269646765",
                        "id": 104191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2280:65:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d",
                          "typeString": "literal_string \"ERC721Bridge: function can only be called from the other bridge\""
                        },
                        "value": "ERC721Bridge: function can only be called from the other bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d",
                          "typeString": "literal_string \"ERC721Bridge: function can only be called from the other bridge\""
                        }
                      ],
                      "id": 104177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2161:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:194:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104193,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:194:201"
                },
                {
                  "id": 104194,
                  "nodeType": "PlaceholderStatement",
                  "src": "2365:1:201"
                }
              ]
            },
            "documentation": {
              "id": 104175,
              "nodeType": "StructuredDocumentation",
              "src": "2036:83:201",
              "text": "@notice Ensures that the caller is a cross-chain message from the other bridge."
            },
            "name": "onlyOtherBridge",
            "nameLocation": "2133:15:201",
            "parameters": {
              "id": 104176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2148:2:201"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 104235,
            "nodeType": "FunctionDefinition",
            "src": "2539:340:201",
            "nodes": [],
            "body": {
              "id": 104234,
              "nodeType": "Block",
              "src": "2593:286:201",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 104210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104205,
                          "name": "_messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104199,
                          "src": "2611:10:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 104208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2633:1:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 104207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2625:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 104206,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2625:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 104209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2625:10:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2611:24:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314272696467653a206d657373656e6765722063616e6e6f742062652061646472657373283029",
                        "id": 104211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2637:46:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f",
                          "typeString": "literal_string \"ERC721Bridge: messenger cannot be address(0)\""
                        },
                        "value": "ERC721Bridge: messenger cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f",
                          "typeString": "literal_string \"ERC721Bridge: messenger cannot be address(0)\""
                        }
                      ],
                      "id": 104204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2603:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:81:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104213,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:81:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 104220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104215,
                          "name": "_otherBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104201,
                          "src": "2702:12:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 104218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2726:1:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 104217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2718:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 104216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2718:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 104219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2718:10:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2702:26:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314272696467653a206f74686572206272696467652063616e6e6f742062652061646472657373283029",
                        "id": 104221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2730:49:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e",
                          "typeString": "literal_string \"ERC721Bridge: other bridge cannot be address(0)\""
                        },
                        "value": "ERC721Bridge: other bridge cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e",
                          "typeString": "literal_string \"ERC721Bridge: other bridge cannot be address(0)\""
                        }
                      ],
                      "id": 104214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2694:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2694:86:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104223,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:86:201"
                },
                {
                  "expression": {
                    "id": 104228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104224,
                      "name": "MESSENGER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104136,
                      "src": "2791:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 104226,
                          "name": "_messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104199,
                          "src": "2824:10:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104225,
                        "name": "CrossDomainMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104125,
                        "src": "2803:20:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossDomainMessenger_$104125_$",
                          "typeString": "type(contract CrossDomainMessenger)"
                        }
                      },
                      "id": 104227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2803:32:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "src": "2791:44:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "id": 104229,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:44:201"
                },
                {
                  "expression": {
                    "id": 104232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104230,
                      "name": "OTHER_BRIDGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104139,
                      "src": "2845:12:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104231,
                      "name": "_otherBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104201,
                      "src": "2860:12:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2845:27:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 104233,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:27:201"
                }
              ]
            },
            "documentation": {
              "id": 104197,
              "nodeType": "StructuredDocumentation",
              "src": "2379:155:201",
              "text": "@param _messenger   Address of the CrossDomainMessenger on this network.\n @param _otherBridge Address of the ERC721 bridge on the other network."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 104202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104199,
                  "mutability": "mutable",
                  "name": "_messenger",
                  "nameLocation": "2559:10:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104235,
                  "src": "2551:18:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104201,
                  "mutability": "mutable",
                  "name": "_otherBridge",
                  "nameLocation": "2579:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104235,
                  "src": "2571:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2571:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2550:42:201"
            },
            "returnParameters": {
              "id": 104203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2593:0:201"
            },
            "scope": 104348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 104245,
            "nodeType": "FunctionDefinition",
            "src": "3013:99:201",
            "nodes": [],
            "body": {
              "id": 104244,
              "nodeType": "Block",
              "src": "3079:33:201",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 104242,
                    "name": "MESSENGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104136,
                    "src": "3096:9:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "functionReturnParameters": 104241,
                  "id": 104243,
                  "nodeType": "Return",
                  "src": "3089:16:201"
                }
              ]
            },
            "documentation": {
              "id": 104236,
              "nodeType": "StructuredDocumentation",
              "src": "2885:123:201",
              "text": "@custom:legacy\n @notice Legacy getter for messenger contract.\n @return Messenger contract on this domain."
            },
            "functionSelector": "3cb747bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messenger",
            "nameLocation": "3022:9:201",
            "parameters": {
              "id": 104237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3031:2:201"
            },
            "returnParameters": {
              "id": 104241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104245,
                  "src": "3057:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 104239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104238,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 104125,
                      "src": "3057:20:201"
                    },
                    "referencedDeclaration": 104125,
                    "src": "3057:20:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$104125",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3056:22:201"
            },
            "scope": 104348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 104254,
            "nodeType": "FunctionDefinition",
            "src": "3257:91:201",
            "nodes": [],
            "body": {
              "id": 104253,
              "nodeType": "Block",
              "src": "3312:36:201",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 104251,
                    "name": "OTHER_BRIDGE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104139,
                    "src": "3329:12:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 104250,
                  "id": 104252,
                  "nodeType": "Return",
                  "src": "3322:19:201"
                }
              ]
            },
            "documentation": {
              "id": 104246,
              "nodeType": "StructuredDocumentation",
              "src": "3118:134:201",
              "text": "@custom:legacy\n @notice Legacy getter for other bridge address.\n @return Address of the bridge on the other network."
            },
            "functionSelector": "c89701a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "otherBridge",
            "nameLocation": "3266:11:201",
            "parameters": {
              "id": 104247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3277:2:201"
            },
            "returnParameters": {
              "id": 104250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104254,
                  "src": "3303:7:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3302:9:201"
            },
            "scope": 104348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 104291,
            "nodeType": "FunctionDefinition",
            "src": "4715:1053:201",
            "nodes": [],
            "body": {
              "id": 104290,
              "nodeType": "Block",
              "src": "4901:867:201",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5467:31:201",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 104271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5487:3:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 104272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5487:10:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 104269,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111317,
                              "src": "5468:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$111317_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 104270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 111040,
                            "src": "5468:18:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 104273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5468:30:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314272696467653a206163636f756e74206973206e6f742065787465726e616c6c79206f776e6564",
                        "id": 104275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5500:47:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581",
                          "typeString": "literal_string \"ERC721Bridge: account is not externally owned\""
                        },
                        "value": "ERC721Bridge: account is not externally owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581",
                          "typeString": "literal_string \"ERC721Bridge: account is not externally owned\""
                        }
                      ],
                      "id": 104268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5459:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5459:89:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104277,
                  "nodeType": "ExpressionStatement",
                  "src": "5459:89:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104279,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104257,
                        "src": "5594:11:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104280,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104259,
                        "src": "5619:12:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 104281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5645:3:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5645:10:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 104283,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5669:3:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5669:10:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104285,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104261,
                        "src": "5693:8:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 104286,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104263,
                        "src": "5715:12:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 104287,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104265,
                        "src": "5741:10:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 104278,
                      "name": "_initiateBridgeERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104347,
                      "src": "5559:21:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes calldata)"
                      }
                    },
                    "id": 104288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5559:202:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104289,
                  "nodeType": "ExpressionStatement",
                  "src": "5559:202:201"
                }
              ]
            },
            "documentation": {
              "id": 104255,
              "nodeType": "StructuredDocumentation",
              "src": "3354:1356:201",
              "text": "@notice Initiates a bridge of an NFT to the caller's account on the other chain. Note that\n         this function can only be called by EOAs. Smart contract wallets should use the\n         `bridgeERC721To` function after ensuring that the recipient address on the remote\n         chain exists. Also note that the current owner of the token on this chain must\n         approve this contract to operate the NFT before it can be bridged.\n         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n         bridge only supports ERC721s originally deployed on Ethereum. Users will need to\n         wait for the one-week challenge period to elapse before their Optimism-native NFT\n         can be refunded on L2.\n @param _localToken  Address of the ERC721 on this domain.\n @param _remoteToken Address of the ERC721 on the remote domain.\n @param _tokenId     Token ID to bridge.\n @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n @param _extraData   Optional data to forward to the other chain. Data supplied here will not\n                     be used to execute any code on the other chain and is only emitted as\n                     extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "3687011a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeERC721",
            "nameLocation": "4724:12:201",
            "parameters": {
              "id": 104266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104257,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "4754:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104291,
                  "src": "4746:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104259,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "4783:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104291,
                  "src": "4775:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104261,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4813:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104291,
                  "src": "4805:16:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104263,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "4838:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104291,
                  "src": "4831:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 104262,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4831:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104265,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "4875:10:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104291,
                  "src": "4860:25:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104264,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4736:155:201"
            },
            "returnParameters": {
              "id": 104267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4901:0:201"
            },
            "scope": 104348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 104329,
            "nodeType": "FunctionDefinition",
            "src": "6994:510:201",
            "nodes": [],
            "body": {
              "id": 104328,
              "nodeType": "Block",
              "src": "7203:301:201",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 104313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104308,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104298,
                          "src": "7221:3:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 104311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7236:1:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 104310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7228:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 104309,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7228:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 104312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7228:10:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7221:17:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314272696467653a206e667420726563697069656e742063616e6e6f742062652061646472657373283029",
                        "id": 104314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7240:50:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186",
                          "typeString": "literal_string \"ERC721Bridge: nft recipient cannot be address(0)\""
                        },
                        "value": "ERC721Bridge: nft recipient cannot be address(0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186",
                          "typeString": "literal_string \"ERC721Bridge: nft recipient cannot be address(0)\""
                        }
                      ],
                      "id": 104307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7213:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7213:78:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104316,
                  "nodeType": "ExpressionStatement",
                  "src": "7213:78:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104318,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104294,
                        "src": "7337:11:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104319,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104296,
                        "src": "7362:12:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 104320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7388:3:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7388:10:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104322,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104298,
                        "src": "7412:3:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104323,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104300,
                        "src": "7429:8:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 104324,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104302,
                        "src": "7451:12:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 104325,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104304,
                        "src": "7477:10:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 104317,
                      "name": "_initiateBridgeERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104347,
                      "src": "7302:21:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes calldata)"
                      }
                    },
                    "id": 104326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:195:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104327,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:195:201"
                }
              ]
            },
            "documentation": {
              "id": 104292,
              "nodeType": "StructuredDocumentation",
              "src": "5774:1215:201",
              "text": "@notice Initiates a bridge of an NFT to some recipient's account on the other chain. Note\n         that the current owner of the token on this chain must approve this contract to\n         operate the NFT before it can be bridged.\n         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n         bridge only supports ERC721s originally deployed on Ethereum. Users will need to\n         wait for the one-week challenge period to elapse before their Optimism-native NFT\n         can be refunded on L2.\n @param _localToken  Address of the ERC721 on this domain.\n @param _remoteToken Address of the ERC721 on the remote domain.\n @param _to          Address to receive the token on the other domain.\n @param _tokenId     Token ID to bridge.\n @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n @param _extraData   Optional data to forward to the other chain. Data supplied here will not\n                     be used to execute any code on the other chain and is only emitted as\n                     extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "aa557452",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeERC721To",
            "nameLocation": "7003:14:201",
            "parameters": {
              "id": 104305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104294,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "7035:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104329,
                  "src": "7027:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7027:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104296,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "7064:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104329,
                  "src": "7056:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7056:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104298,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7094:3:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104329,
                  "src": "7086:11:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7086:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104300,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7115:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104329,
                  "src": "7107:16:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7107:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104302,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "7140:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104329,
                  "src": "7133:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 104301,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7133:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104304,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7177:10:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104329,
                  "src": "7162:25:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7162:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7017:176:201"
            },
            "returnParameters": {
              "id": 104306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7203:0:201"
            },
            "scope": 104348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 104347,
            "nodeType": "FunctionDefinition",
            "src": "8297:247:201",
            "nodes": [],
            "documentation": {
              "id": 104330,
              "nodeType": "StructuredDocumentation",
              "src": "7510:782:201",
              "text": "@notice Internal function for initiating a token bridge to the other domain.\n @param _localToken  Address of the ERC721 on this domain.\n @param _remoteToken Address of the ERC721 on the remote domain.\n @param _from        Address of the sender on this domain.\n @param _to          Address to receive the token on the other domain.\n @param _tokenId     Token ID to bridge.\n @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n @param _extraData   Optional data to forward to the other domain. Data supplied here will\n                     not be used to execute any code on the other domain and is only emitted\n                     as extra data for the convenience of off-chain tooling."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeERC721",
            "nameLocation": "8306:21:201",
            "parameters": {
              "id": 104345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104332,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "8345:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8337:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8337:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104334,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "8374:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8366:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104336,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "8404:5:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8396:13:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8396:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104338,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8427:3:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8419:11:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104340,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8448:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8440:16:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8440:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104342,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "8473:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8466:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 104341,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8466:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104344,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "8510:10:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 104347,
                  "src": "8495:25:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104343,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8495:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8327:199:201"
            },
            "returnParameters": {
              "id": 104346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8543:0:201"
            },
            "scope": 104348,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "ERC721Bridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 104132,
          "nodeType": "StructuredDocumentation",
          "src": "194:102:201",
          "text": "@title ERC721Bridge\n @notice ERC721Bridge is a base contract for the L1 and L2 ERC721 bridges."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          104348
        ],
        "name": "ERC721Bridge",
        "nameLocation": "314:12:201",
        "scope": 104349,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 201
}