{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invariant_burn_gas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50611a648061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063916a17c611610081578063d45aad941161005b578063d45aad9414610163578063e20c9f711461016b578063fa7626d41461017357600080fd5b8063916a17c61461013b578063b5508aa914610143578063ba414fa61461014b57600080fd5b80633f7286f4116100b25780633f7286f41461010957806366d9a9a01461011157806385226c811461012657600080fd5b80630a9254e4146100d95780631ed7831c146100e35780633e5e3c2314610101575b600080fd5b6100e1610180565b005b6100eb61030f565b6040516100f89190610f78565b60405180910390f35b6100eb61037e565b6100eb6103eb565b610119610458565b6040516100f89190610fd2565b61012e610569565b6040516100f8919061113e565b610119610639565b61012e610741565b610153610811565b60405190151581526020016100f8565b6100e1610971565b6100eb610a0f565b6000546101539060ff1681565b6040517f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d906101ae90610eaa565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f0801580156101e7573d6000803e3d6000fd5b50601b805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009283168117909155600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd018054909216179055604080516001808252818301909252600091816020016020820280368337019050509050634ad5d16f60e01b816000815181106102a7576102a76111be565b7fffffffff0000000000000000000000000000000000000000000000000000000090921660209283029190910182015260408051808201909152601b5473ffffffffffffffffffffffffffffffffffffffff16815290810182905261030b81610a7c565b5050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561037457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561054857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104f55790505b5050505050815250508152602001906001019061047c565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105605783829060005260206000200180546105ac906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546105d8906111ed565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b50505050508152602001906001019061058d565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561072957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106d65790505b5050505050815250508152602001906001019061065d565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610560578382906000526020600020018054610784906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546107b0906111ed565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b505050505081526020019060010190610765565b60008054610100900460ff16156108315750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561096c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916108d6917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261090e91611288565b6000604051808303816000865af19150503d806000811461094b576040519150601f19603f3d011682016040523d82523d6000602084013e610950565b606091505b509150508080602001905181019061096891906112a4565b9150505b919050565b601b54604080517f79df245a0000000000000000000000000000000000000000000000000000000081529051610a0d9273ffffffffffffffffffffffffffffffffffffffff16916379df245a9160048083019260209291908290030181865afa1580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0691906112a4565b6000610b39565b565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6013805460018101825560009190915281517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090600290920291820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117815560208084015180518594610b33937f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a091909101920190610eb7565b50505050565b8015158215151461030b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610bc99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f60408201527f6c5d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382610c32576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610c69565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610c7691906112cd565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381610cdf576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610d16565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610d239190611314565b60405180910390a161030b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e7c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610dfd9291602001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e3591611288565b6000604051808303816000865af19150503d8060008114610e72576040519150601f19603f3d011682016040523d82523d6000602084013e610e77565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6106fc8061135c83390190565b82805482825590600052602060002090600701600890048101928215610f535791602002820160005b83821115610f2157835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610ee0565b8015610f515782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610f21565b505b50610f5f929150610f63565b5090565b5b80821115610f5f5760008155600101610f64565b6020808252825182820181905260009190848201906040850190845b81811015610fc657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f94565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156110b9578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156110a45783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611062565b50978a01979550505091870191600101610ffa565b50919998505050505050505050565b60005b838110156110e35781810151838201526020016110cb565b83811115610b335750506000910152565b6000815180845261110c8160208601602086016110c8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111b1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261119f8583516110f4565b94509285019290850190600101611165565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061120157607f821691505b60208210810361123a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161127a8160048501602087016110c8565b919091016004019392505050565b6000825161129a8184602087016110c8565b9190910192915050565b6000602082840312156112b657600080fd5b815180151581146112c657600080fd5b9392505050565b60408152600a60408201527f2020202020204c6566740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f4565b60408152600a60408201527f202020202052696768740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f456fe608060405234801561001057600080fd5b506040516106fc3803806106fc83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610669806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ad5d16f1461003b57806379df245a14610050575b600080fd5b61004e6100493660046104cd565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b627a1200600061009a83828461010e565b905060005a90506100aa82610163565b60005a905082828203111580156100c2575081838303115b1561010757600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b5050505050565b600061011b848484610191565b905061015c6040518060400160405280600c81526020017f426f756e6420526573756c740000000000000000000000000000000000000000815250826103cd565b9392505050565b6000805a90505b825a6101769083610515565b101561018c576101858261052c565b915061016a565b505050565b600081831115610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102375750818411155b1561024357508261015c565b600061024f8484610515565b61025a906001610564565b90506003851115801561026c57508481115b156102835761027b8585610564565b91505061015c565b6102ae60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b85101580156102e557506102e2857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b81115b1561031e57610314857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b61027b9084610515565b828511156103745760006103328487610515565b90506000610340838361057c565b9050806000036103555784935050505061015c565b60016103618288610564565b61036b9190610515565b935050506103c5565b838510156103c55760006103888686610515565b90506000610396838361057c565b9050806000036103ab5785935050505061015c565b6103b58186610515565b6103c0906001610564565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016104049291906105e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516104859190610640565b600060405180830381855afa9150503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b505050505050565b6000602082840312156104df57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610527576105276104e6565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361055d5761055d6104e6565b5060010190565b60008219821115610577576105776104e6565b500190565b6000826105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b838110156105d25781810151838201526020016105ba565b838111156105e1576000848401525b50505050565b60408152600083518060408401526106068160608501602088016105b7565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b600082516106528184602087016105b7565b919091019291505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "1356:911:191:-:0;;;1572:26:266;;;1594:4;-1:-1:-1;;1572:26:266;;;;;;;;3161:44:269;;;;;;;;;;;1356:911:191;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063916a17c611610081578063d45aad941161005b578063d45aad9414610163578063e20c9f711461016b578063fa7626d41461017357600080fd5b8063916a17c61461013b578063b5508aa914610143578063ba414fa61461014b57600080fd5b80633f7286f4116100b25780633f7286f41461010957806366d9a9a01461011157806385226c811461012657600080fd5b80630a9254e4146100d95780631ed7831c146100e35780633e5e3c2314610101575b600080fd5b6100e1610180565b005b6100eb61030f565b6040516100f89190610f78565b60405180910390f35b6100eb61037e565b6100eb6103eb565b610119610458565b6040516100f89190610fd2565b61012e610569565b6040516100f8919061113e565b610119610639565b61012e610741565b610153610811565b60405190151581526020016100f8565b6100e1610971565b6100eb610a0f565b6000546101539060ff1681565b6040517f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d906101ae90610eaa565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f0801580156101e7573d6000803e3d6000fd5b50601b805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009283168117909155600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd018054909216179055604080516001808252818301909252600091816020016020820280368337019050509050634ad5d16f60e01b816000815181106102a7576102a76111be565b7fffffffff0000000000000000000000000000000000000000000000000000000090921660209283029190910182015260408051808201909152601b5473ffffffffffffffffffffffffffffffffffffffff16815290810182905261030b81610a7c565b5050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561037457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561054857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104f55790505b5050505050815250508152602001906001019061047c565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105605783829060005260206000200180546105ac906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546105d8906111ed565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b50505050508152602001906001019061058d565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561072957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106d65790505b5050505050815250508152602001906001019061065d565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610560578382906000526020600020018054610784906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546107b0906111ed565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b505050505081526020019060010190610765565b60008054610100900460ff16156108315750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561096c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916108d6917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261090e91611288565b6000604051808303816000865af19150503d806000811461094b576040519150601f19603f3d011682016040523d82523d6000602084013e610950565b606091505b509150508080602001905181019061096891906112a4565b9150505b919050565b601b54604080517f79df245a0000000000000000000000000000000000000000000000000000000081529051610a0d9273ffffffffffffffffffffffffffffffffffffffff16916379df245a9160048083019260209291908290030181865afa1580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0691906112a4565b6000610b39565b565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6013805460018101825560009190915281517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090600290920291820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117815560208084015180518594610b33937f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a091909101920190610eb7565b50505050565b8015158215151461030b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610bc99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f60408201527f6c5d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382610c32576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610c69565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610c7691906112cd565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381610cdf576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610d16565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610d239190611314565b60405180910390a161030b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e7c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610dfd9291602001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e3591611288565b6000604051808303816000865af19150503d8060008114610e72576040519150601f19603f3d011682016040523d82523d6000602084013e610e77565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6106fc8061135c83390190565b82805482825590600052602060002090600701600890048101928215610f535791602002820160005b83821115610f2157835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610ee0565b8015610f515782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610f21565b505b50610f5f929150610f63565b5090565b5b80821115610f5f5760008155600101610f64565b6020808252825182820181905260009190848201906040850190845b81811015610fc657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f94565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156110b9578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156110a45783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611062565b50978a01979550505091870191600101610ffa565b50919998505050505050505050565b60005b838110156110e35781810151838201526020016110cb565b83811115610b335750506000910152565b6000815180845261110c8160208601602086016110c8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111b1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261119f8583516110f4565b94509285019290850190600101611165565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061120157607f821691505b60208210810361123a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161127a8160048501602087016110c8565b919091016004019392505050565b6000825161129a8184602087016110c8565b9190910192915050565b6000602082840312156112b657600080fd5b815180151581146112c657600080fd5b9392505050565b60408152600a60408201527f2020202020204c6566740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f4565b60408152600a60408201527f202020202052696768740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f456fe608060405234801561001057600080fd5b506040516106fc3803806106fc83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610669806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ad5d16f1461003b57806379df245a14610050575b600080fd5b61004e6100493660046104cd565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b627a1200600061009a83828461010e565b905060005a90506100aa82610163565b60005a905082828203111580156100c2575081838303115b1561010757600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b5050505050565b600061011b848484610191565b905061015c6040518060400160405280600c81526020017f426f756e6420526573756c740000000000000000000000000000000000000000815250826103cd565b9392505050565b6000805a90505b825a6101769083610515565b101561018c576101858261052c565b915061016a565b505050565b600081831115610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102375750818411155b1561024357508261015c565b600061024f8484610515565b61025a906001610564565b90506003851115801561026c57508481115b156102835761027b8585610564565b91505061015c565b6102ae60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b85101580156102e557506102e2857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b81115b1561031e57610314857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b61027b9084610515565b828511156103745760006103328487610515565b90506000610340838361057c565b9050806000036103555784935050505061015c565b60016103618288610564565b61036b9190610515565b935050506103c5565b838510156103c55760006103888686610515565b90506000610396838361057c565b9050806000036103ab5785935050505061015c565b6103b58186610515565b6103c0906001610564565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016104049291906105e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516104859190610640565b600060405180830381855afa9150503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b505050505050565b6000602082840312156104df57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610527576105276104e6565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361055d5761055d6104e6565b5060010190565b60008219821115610577576105776104e6565b500190565b6000826105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b838110156105d25781810151838201526020016105ba565b838111156105e1576000848401525b50505050565b60408152600083518060408401526106068160608501602088016105b7565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b600082516106528184602087016105b7565b919091019291505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "1356:911:191:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:386;;;:::i;:::-;;2161:134:272;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:266:-;;;:::i;:::-;;;4021:14:283;;4014:22;3996:41;;3984:2;3969:18;1819:584:266;3856:187:283;2085:180:191;;;:::i;2013:142:272:-;;;:::i;1572:26:266:-;;;;;;;;;1452:386:191;1532:22;;317:28:267;;1532:22:191;;;:::i;:::-;4237:42:283;4225:55;;;4207:74;;4195:2;4180:18;1532:22:191;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1524:5:191;:30;;;;;;;;;;;;;;;;1419:18:272;:45;;-1:-1:-1;1419:45:272;;;;-1:-1:-1;1419:45:272;;;;;;;;;;;;;;1634:15:191;;;1647:1;1634:15;;;;;;;;;1606:25;;1634:15;;;;;;;;;;;;-1:-1:-1;1634:15:191;1606:43;;1674:22;;;1659:9;1669:1;1659:12;;;;;;;;:::i;:::-;:37;;;;:12;;;;;;;;;;:37;1737:60;;;;;;;;;1766:5;;;;1737:60;;;;;;;;1807:24;1737:60;1807:14;:24::i;:::-;1476:362;;1452:386::o;2161:134:272:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:266;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:266;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5286:74:283;;;2221:17:266;5376:18:283;;;5369:34;2196:43:266;;;;;;;;;5259:18:283;;;2196:43:266;;;-1:-1:-1;;1671:64:266;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:266:o;2085:180:191:-;2229:5;;:21;;;;;;;;2220:38;;2229:5;;;:19;;:21;;;;;;;;;;;;;;:5;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2252:5;2220:8;:38::i;:::-;2085:180::o;2013:142:272:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1477:137::-;1562:18;:45;;;;;;;-1:-1:-1;1562:45:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1477:137;:::o;789:312:268:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;6599:2:283;6581:21;;;6638:2;6618:18;;;6611:30;6677:34;6672:2;6657:18;;6650:62;6748:4;6743:2;6728:18;;6721:32;6785:3;6770:19;;6397:398;881:41:268;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:52;;;;;;:::i;:::-;;;;;;;;1078:6;2990:42:266;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7916:74:283;;;2670:17:266;8006:18:283;;;7999:34;;;;2705:4:266;8049:18:283;;;8042:34;2482:11:266;;1671:64;2579:43;;7889:18:283;;2645:67:266;;;;;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;;;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:266;2813:7;:14;;;;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:681:283;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:283;;14:681;-1:-1:-1;;;;;;14:681:283:o;700:1699::-;906:4;935:2;975;964:9;960:18;1005:2;994:9;987:21;1028:6;1063;1057:13;1094:6;1086;1079:22;1120:2;1110:12;;1153:2;1142:9;1138:18;1131:25;;1215:2;1205:6;1202:1;1198:14;1187:9;1183:30;1179:39;1253:2;1245:6;1241:15;1274:1;1295;1305:1065;1321:6;1316:3;1313:15;1305:1065;;;1390:22;;;1414:66;1386:95;1374:108;;1505:13;;1592:9;;1603:42;1588:58;1573:74;;1686:11;;1680:18;1718:15;;;1711:27;;;1799:19;;1545:15;;;1831:24;;;1921:21;;;;1966:1;;1889:2;1877:15;;;1980:282;1996:8;1991:3;1988:17;1980:282;;;2077:15;;2094:66;2073:88;2059:103;;2231:17;;;;2024:1;2015:11;;;;;2188:14;;;;1980:282;;;-1:-1:-1;2348:12:283;;;;2285:5;-1:-1:-1;;;2313:15:283;;;;1347:1;1338:11;1305:1065;;;-1:-1:-1;2387:6:283;;700:1699;-1:-1:-1;;;;;;;;;700:1699:283:o;2404:258::-;2476:1;2486:113;2500:6;2497:1;2494:13;2486:113;;;2576:11;;;2570:18;2557:11;;;2550:39;2522:2;2515:10;2486:113;;;2617:6;2614:1;2611:13;2608:48;;;-1:-1:-1;;2652:1:283;2634:16;;2627:27;2404:258::o;2667:317::-;2709:3;2747:5;2741:12;2774:6;2769:3;2762:19;2790:63;2846:6;2839:4;2834:3;2830:14;2823:4;2816:5;2812:16;2790:63;:::i;:::-;2898:2;2886:15;2903:66;2882:88;2873:98;;;;2973:4;2869:109;;2667:317;-1:-1:-1;;2667:317:283:o;2989:862::-;3151:4;3180:2;3220;3209:9;3205:18;3250:2;3239:9;3232:21;3273:6;3308;3302:13;3339:6;3331;3324:22;3377:2;3366:9;3362:18;3355:25;;3439:2;3429:6;3426:1;3422:14;3411:9;3407:30;3403:39;3389:53;;3477:2;3469:6;3465:15;3498:1;3508:314;3522:6;3519:1;3516:13;3508:314;;;3611:66;3599:9;3591:6;3587:22;3583:95;3578:3;3571:108;3702:40;3735:6;3726;3720:13;3702:40;:::i;:::-;3692:50;-1:-1:-1;3800:12:283;;;;3765:15;;;;3544:1;3537:9;3508:314;;;-1:-1:-1;3839:6:283;;2989:862;-1:-1:-1;;;;;;;2989:862:283:o;4481:184::-;4533:77;4530:1;4523:88;4630:4;4627:1;4620:15;4654:4;4651:1;4644:15;4670:437;4749:1;4745:12;;;;4792;;;4813:61;;4867:4;4859:6;4855:17;4845:27;;4813:61;4920:2;4912:6;4909:14;4889:18;4886:38;4883:218;;4957:77;4954:1;4947:88;5058:4;5055:1;5048:15;5086:4;5083:1;5076:15;4883:218;;4670:437;;;:::o;5414:417::-;5611:66;5603:6;5599:79;5594:3;5587:92;5569:3;5708:6;5702:13;5724:61;5778:6;5774:1;5769:3;5765:11;5758:4;5750:6;5746:17;5724:61;:::i;:::-;5805:16;;;;5823:1;5801:24;;5414:417;-1:-1:-1;;;5414:417:283:o;5836:274::-;5965:3;6003:6;5997:13;6019:53;6065:6;6060:3;6053:4;6045:6;6041:17;6019:53;:::i;:::-;6088:16;;;;;5836:274;-1:-1:-1;;5836:274:283:o;6115:277::-;6182:6;6235:2;6223:9;6214:7;6210:23;6206:32;6203:52;;;6251:1;6248;6241:12;6203:52;6283:9;6277:16;6336:5;6329:13;6322:21;6315:5;6312:32;6302:60;;6358:1;6355;6348:12;6302:60;6381:5;6115:277;-1:-1:-1;;;6115:277:283:o;6800:452::-;7050:2;7039:9;7032:21;7089:2;7084;7073:9;7069:18;7062:30;7128:12;7123:2;7112:9;7108:18;7101:40;7179:3;7172:4;7161:9;7157:20;7150:33;7013:4;7200:46;7241:3;7230:9;7226:19;7218:6;7200:46;:::i;7257:452::-;7507:2;7496:9;7489:21;7546:2;7541;7530:9;7526:18;7519:30;7585:12;7580:2;7569:9;7565:18;7558:40;7636:3;7629:4;7618:9;7614:20;7607:33;7470:4;7657:46;7698:3;7687:9;7683:19;7675:6;7657:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "invariant_burn_gas()": "d45aad94",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invariant_burn_gas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"invariant_burn_gas()\":{\"custom:invariant\":\"`gas(uint256)` always burns at least the amount of gas passed. Asserts that when `Burn.gas(uint256)` is called, it always burns at least the amount of gas passed to the function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/invariants/Burn.Gas.t.sol\":\"Burn_BurnGas_Invariant\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"contracts/test/invariants/Burn.Gas.t.sol\":{\"keccak256\":\"0x1ca18726ee7e52fc6be5ebfe7d439683cd3e775b61049197d45c6ec90ccaa814\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2721be6b514ddd5c6ee225585ad32cd708509b7141e21478d883dc7d8e513f31\",\"dweb:/ipfs/QmdDtgNEimYWGRa74wv3B3Xhqt8mKtq7FGwwyWwh3EBnrz\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invariant_burn_gas"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "invariant_burn_gas()": {
            "custom:invariant": "`gas(uint256)` always burns at least the amount of gas passed. Asserts that when `Burn.gas(uint256)` is called, it always burns at least the amount of gas passed to the function."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/test/invariants/Burn.Gas.t.sol": "Burn_BurnGas_Invariant"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "contracts/test/invariants/Burn.Gas.t.sol": {
        "keccak256": "0x1ca18726ee7e52fc6be5ebfe7d439683cd3e775b61049197d45c6ec90ccaa814",
        "urls": [
          "bzz-raw://2721be6b514ddd5c6ee225585ad32cd708509b7141e21478d883dc7d8e513f31",
          "dweb:/ipfs/QmdDtgNEimYWGRa74wv3B3Xhqt8mKtq7FGwwyWwh3EBnrz"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114733,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 114735,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124395,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124416,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)"
      },
      {
        "astId": 124420,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 124424,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 124427,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 125093,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 126806,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 116443,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116446,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116449,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116452,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116455,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116458,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116462,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 116466,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 122939,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 100781,
        "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "actor",
        "offset": 0,
        "slot": "27",
        "type": "t_contract(Burn_GasBurner)100774"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)116440_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(Burn_GasBurner)100774": {
        "encoding": "inplace",
        "label": "contract Burn_GasBurner",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)124411_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)124411_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 124404,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 124406,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 124408,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 124410,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)116440_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 116436,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 116439,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)128292_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 128272,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 128280,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 128283,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 128285,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 128287,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 128289,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 128291,
            "contract": "contracts/test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "invariant_burn_gas()": {}
    }
  },
  "ast": {
    "absolutePath": "contracts/test/invariants/Burn.Gas.t.sol",
    "id": 100848,
    "exportedSymbols": {
      "Burn": [
        42278
      ],
      "Burn_BurnGas_Invariant": [
        100847
      ],
      "Burn_GasBurner": [
        100774
      ],
      "StdInvariant": [
        116655
      ],
      "StdUtils": [
        117503
      ],
      "Test": [
        117552
      ],
      "Vm": [
        119058
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2236:191",
    "nodes": [
      {
        "id": 100692,
        "nodeType": "PragmaDirective",
        "src": "32:23:191",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 100694,
        "nodeType": "ImportDirective",
        "src": "57:50:191",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/StdUtils.sol",
        "file": "forge-std/StdUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100848,
        "sourceUnit": 117504,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100693,
              "name": "StdUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117503,
              "src": "66:8:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100696,
        "nodeType": "ImportDirective",
        "src": "108:42:191",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100848,
        "sourceUnit": 117553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100695,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117552,
              "src": "117:4:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100698,
        "nodeType": "ImportDirective",
        "src": "151:38:191",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100848,
        "sourceUnit": 119059,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100697,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119058,
              "src": "160:2:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100700,
        "nodeType": "ImportDirective",
        "src": "191:58:191",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/StdInvariant.sol",
        "file": "forge-std/StdInvariant.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100848,
        "sourceUnit": 116656,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100699,
              "name": "StdInvariant",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116655,
              "src": "200:12:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100702,
        "nodeType": "ImportDirective",
        "src": "250:48:191",
        "nodes": [],
        "absolutePath": "contracts/libraries/Burn.sol",
        "file": "../../libraries/Burn.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 100848,
        "sourceUnit": 42295,
        "symbolAliases": [
          {
            "foreign": {
              "id": 100701,
              "name": "Burn",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42278,
              "src": "259:4:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 100774,
        "nodeType": "ContractDefinition",
        "src": "300:1054:191",
        "nodes": [
          {
            "id": 100707,
            "nodeType": "VariableDeclaration",
            "src": "342:14:191",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "354:2:191",
            "scope": 100774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$119058",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 100706,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 100705,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 119058,
                "src": "342:2:191"
              },
              "referencedDeclaration": 119058,
              "src": "342:2:191",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$119058",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 100709,
            "nodeType": "VariableDeclaration",
            "src": "362:25:191",
            "nodes": [],
            "constant": false,
            "functionSelector": "79df245a",
            "mutability": "mutable",
            "name": "failedGasBurn",
            "nameLocation": "374:13:191",
            "scope": 100774,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 100708,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "362:4:191",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 100720,
            "nodeType": "FunctionDefinition",
            "src": "394:45:191",
            "nodes": [],
            "body": {
              "id": 100719,
              "nodeType": "Block",
              "src": "414:25:191",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 100717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100715,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100707,
                      "src": "424:2:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$119058",
                        "typeString": "contract Vm"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100716,
                      "name": "_vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100712,
                      "src": "429:3:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$119058",
                        "typeString": "contract Vm"
                      }
                    },
                    "src": "424:8:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$119058",
                      "typeString": "contract Vm"
                    }
                  },
                  "id": 100718,
                  "nodeType": "ExpressionStatement",
                  "src": "424:8:191"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 100713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100712,
                  "mutability": "mutable",
                  "name": "_vm",
                  "nameLocation": "409:3:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 100720,
                  "src": "406:6:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$119058",
                    "typeString": "contract Vm"
                  },
                  "typeName": {
                    "id": 100711,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 100710,
                      "name": "Vm",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119058,
                      "src": "406:2:191"
                    },
                    "referencedDeclaration": 119058,
                    "src": "406:2:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$119058",
                      "typeString": "contract Vm"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:8:191"
            },
            "returnParameters": {
              "id": 100714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:0:191"
            },
            "scope": 100774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100773,
            "nodeType": "FunctionDefinition",
            "src": "646:706:191",
            "nodes": [],
            "body": {
              "id": 100772,
              "nodeType": "Block",
              "src": "688:664:191",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100727,
                      "mutability": "mutable",
                      "name": "MAX_RESOURCE_LIMIT",
                      "nameLocation": "757:18:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 100772,
                      "src": "749:26:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100729,
                  "initialValue": {
                    "hexValue": "385f3030305f303030",
                    "id": 100728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "778:9:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8000000_by_1",
                      "typeString": "int_const 8000000"
                    },
                    "value": "8_000_000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "749:38:191"
                },
                {
                  "assignments": [
                    100731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100731,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "805:5:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 100772,
                      "src": "797:13:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "797:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100737,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100733,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100723,
                        "src": "819:6:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "827:1:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 100735,
                        "name": "MAX_RESOURCE_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100727,
                        "src": "830:18:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100732,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        116855,
                        117005
                      ],
                      "referencedDeclaration": 116855,
                      "src": "813:5:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 100736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:36:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "797:52:191"
                },
                {
                  "assignments": [
                    100739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100739,
                      "mutability": "mutable",
                      "name": "preBurnGas",
                      "nameLocation": "922:10:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 100772,
                      "src": "914:18:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100738,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "914:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100742,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100740,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "935:7:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 100741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:9:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "914:30:191"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100746,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100731,
                        "src": "996:5:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100743,
                        "name": "Burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42278,
                        "src": "987:4:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Burn_$42278_$",
                          "typeString": "type(library Burn)"
                        }
                      },
                      "id": 100745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42277,
                      "src": "987:8:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 100747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:15:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100748,
                  "nodeType": "ExpressionStatement",
                  "src": "987:15:191"
                },
                {
                  "assignments": [
                    100750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100750,
                      "mutability": "mutable",
                      "name": "postBurnGas",
                      "nameLocation": "1066:11:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 100772,
                      "src": "1058:19:191",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100749,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1058:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100753,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 100751,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "1080:7:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 100752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:9:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1058:31:191"
                },
                {
                  "id": 100771,
                  "nodeType": "UncheckedBlock",
                  "src": "1185:161:191",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 100764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 100758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 100754,
                              "name": "postBurnGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100750,
                              "src": "1213:11:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 100755,
                              "name": "preBurnGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100739,
                              "src": "1227:10:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1213:24:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 100757,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100731,
                            "src": "1241:5:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1213:33:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 100763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 100761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 100759,
                              "name": "preBurnGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100739,
                              "src": "1250:10:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 100760,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100731,
                              "src": "1263:5:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1250:18:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 100762,
                            "name": "preBurnGas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100739,
                            "src": "1271:10:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1250:31:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1213:68:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 100770,
                      "nodeType": "IfStatement",
                      "src": "1209:127:191",
                      "trueBody": {
                        "id": 100769,
                        "nodeType": "Block",
                        "src": "1283:53:191",
                        "statements": [
                          {
                            "expression": {
                              "id": 100767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 100765,
                                "name": "failedGasBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100709,
                                "src": "1301:13:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 100766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1317:4:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1301:20:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 100768,
                            "nodeType": "ExpressionStatement",
                            "src": "1301:20:191"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 100721,
              "nodeType": "StructuredDocumentation",
              "src": "445:196:191",
              "text": " @notice Takes an integer amount of gas to burn through the Burn library and\n updates the contract state if at least that amount of gas was not burned\n by the library"
            },
            "functionSelector": "4ad5d16f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnGas",
            "nameLocation": "655:7:191",
            "parameters": {
              "id": 100724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100723,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "671:6:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 100773,
                  "src": "663:14:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:16:191"
            },
            "returnParameters": {
              "id": 100725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:191"
            },
            "scope": 100774,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100703,
              "name": "StdUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117503,
              "src": "327:8:191"
            },
            "id": 100704,
            "nodeType": "InheritanceSpecifier",
            "src": "327:8:191"
          }
        ],
        "canonicalName": "Burn_GasBurner",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100774,
          117503
        ],
        "name": "Burn_GasBurner",
        "nameLocation": "309:14:191",
        "scope": 100848,
        "usedErrors": []
      },
      {
        "id": 100847,
        "nodeType": "ContractDefinition",
        "src": "1356:911:191",
        "nodes": [
          {
            "id": 100781,
            "nodeType": "VariableDeclaration",
            "src": "1416:29:191",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "actor",
            "nameLocation": "1440:5:191",
            "scope": 100847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
              "typeString": "contract Burn_GasBurner"
            },
            "typeName": {
              "id": 100780,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 100779,
                "name": "Burn_GasBurner",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 100774,
                "src": "1416:14:191"
              },
              "referencedDeclaration": 100774,
              "src": "1416:14:191",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                "typeString": "contract Burn_GasBurner"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 100834,
            "nodeType": "FunctionDefinition",
            "src": "1452:386:191",
            "nodes": [],
            "body": {
              "id": 100833,
              "nodeType": "Block",
              "src": "1476:362:191",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 100790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100784,
                      "name": "actor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100781,
                      "src": "1524:5:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                        "typeString": "contract Burn_GasBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100788,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122936,
                          "src": "1551:2:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        ],
                        "id": 100787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1532:18:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Vm_$119058_$returns$_t_contract$_Burn_GasBurner_$100774_$",
                          "typeString": "function (contract Vm) returns (contract Burn_GasBurner)"
                        },
                        "typeName": {
                          "id": 100786,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 100785,
                            "name": "Burn_GasBurner",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 100774,
                            "src": "1536:14:191"
                          },
                          "referencedDeclaration": 100774,
                          "src": "1536:14:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                            "typeString": "contract Burn_GasBurner"
                          }
                        }
                      },
                      "id": 100789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1532:22:191",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                        "typeString": "contract Burn_GasBurner"
                      }
                    },
                    "src": "1524:30:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                      "typeString": "contract Burn_GasBurner"
                    }
                  },
                  "id": 100791,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:30:191"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100795,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100781,
                            "src": "1588:5:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                              "typeString": "contract Burn_GasBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                              "typeString": "contract Burn_GasBurner"
                            }
                          ],
                          "id": 100794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1580:7:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100793,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1580:7:191",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1580:14:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100792,
                      "name": "targetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116539,
                      "src": "1565:14:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 100797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:30:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100798,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:30:191"
                },
                {
                  "assignments": [
                    100803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100803,
                      "mutability": "mutable",
                      "name": "selectors",
                      "nameLocation": "1622:9:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 100833,
                      "src": "1606:25:191",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100801,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1606:6:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 100802,
                        "nodeType": "ArrayTypeName",
                        "src": "1606:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100809,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 100807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1647:1:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 100806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1634:12:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100804,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1638:6:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 100805,
                        "nodeType": "ArrayTypeName",
                        "src": "1638:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 100808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:15:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1606:43:191"
                },
                {
                  "expression": {
                    "id": 100816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100810,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100803,
                        "src": "1659:9:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 100812,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 100811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:1:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1659:12:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 100813,
                          "name": "actor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100781,
                          "src": "1674:5:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                            "typeString": "contract Burn_GasBurner"
                          }
                        },
                        "id": 100814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burnGas",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 100773,
                        "src": "1674:13:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      },
                      "id": 100815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1674:22:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1659:37:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 100817,
                  "nodeType": "ExpressionStatement",
                  "src": "1659:37:191"
                },
                {
                  "assignments": [
                    100820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100820,
                      "mutability": "mutable",
                      "name": "selector",
                      "nameLocation": "1726:8:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 100833,
                      "src": "1706:28:191",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                        "typeString": "struct StdInvariant.FuzzSelector"
                      },
                      "typeName": {
                        "id": 100819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100818,
                          "name": "FuzzSelector",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 116440,
                          "src": "1706:12:191"
                        },
                        "referencedDeclaration": 116440,
                        "src": "1706:12:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$116440_storage_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100828,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100824,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100781,
                            "src": "1766:5:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                              "typeString": "contract Burn_GasBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                              "typeString": "contract Burn_GasBurner"
                            }
                          ],
                          "id": 100823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1758:7:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1758:7:191",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1758:14:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100826,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100803,
                        "src": "1785:9:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      ],
                      "id": 100821,
                      "name": "FuzzSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116440,
                      "src": "1737:12:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_FuzzSelector_$116440_storage_ptr_$",
                        "typeString": "type(struct StdInvariant.FuzzSelector storage pointer)"
                      }
                    },
                    "id": 100827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "addr",
                      "selectors"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1737:60:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                      "typeString": "struct StdInvariant.FuzzSelector memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1706:91:191"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100830,
                        "name": "selector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100820,
                        "src": "1822:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FuzzSelector_$116440_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      ],
                      "id": 100829,
                      "name": "targetSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116552,
                      "src": "1807:14:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FuzzSelector_$116440_memory_ptr_$returns$__$",
                        "typeString": "function (struct StdInvariant.FuzzSelector memory)"
                      }
                    },
                    "id": 100831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:24:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100832,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:24:191"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1461:5:191",
            "parameters": {
              "id": 100782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:2:191"
            },
            "returnParameters": {
              "id": 100783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1476:0:191"
            },
            "scope": 100847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100846,
            "nodeType": "FunctionDefinition",
            "src": "2085:180:191",
            "nodes": [],
            "body": {
              "id": 100845,
              "nodeType": "Block",
              "src": "2124:141:191",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 100839,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100781,
                            "src": "2229:5:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$100774",
                              "typeString": "contract Burn_GasBurner"
                            }
                          },
                          "id": 100840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "failedGasBurn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100709,
                          "src": "2229:19:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 100841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2229:21:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 100842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2252:5:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100838,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 123071,
                      "src": "2220:8:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 100843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2220:38:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100844,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:38:191"
                }
              ]
            },
            "documentation": {
              "id": 100835,
              "nodeType": "StructuredDocumentation",
              "src": "1844:236:191",
              "text": " @custom:invariant `gas(uint256)` always burns at least the amount of gas passed.\n Asserts that when `Burn.gas(uint256)` is called, it always burns at least the amount\n of gas passed to the function."
            },
            "functionSelector": "d45aad94",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invariant_burn_gas",
            "nameLocation": "2094:18:191",
            "parameters": {
              "id": 100836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2112:2:191"
            },
            "returnParameters": {
              "id": 100837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:0:191"
            },
            "scope": 100847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100775,
              "name": "StdInvariant",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 116655,
              "src": "1391:12:191"
            },
            "id": 100776,
            "nodeType": "InheritanceSpecifier",
            "src": "1391:12:191"
          },
          {
            "baseName": {
              "id": 100777,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117552,
              "src": "1405:4:191"
            },
            "id": 100778,
            "nodeType": "InheritanceSpecifier",
            "src": "1405:4:191"
          }
        ],
        "canonicalName": "Burn_BurnGas_Invariant",
        "contractDependencies": [
          100774
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          100847,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "Burn_BurnGas_Invariant",
        "nameLocation": "1365:22:191",
        "scope": 100848,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 191
}