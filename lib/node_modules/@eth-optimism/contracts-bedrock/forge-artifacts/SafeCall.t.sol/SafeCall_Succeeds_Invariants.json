{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invariant_callWithMinGas_alwaysForwardsMinGas_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "minGas",
          "type": "uint64"
        }
      ],
      "name": "performSafeCallMinGas",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50611e5f8061003d6000396000f3fe6080604052600436106100d25760003560e01c8063916a17c61161007f578063ba414fa611610059578063ba414fa6146101c4578063d3c4e5c7146101e9578063e20c9f71146101fe578063fa7626d41461021357600080fd5b8063916a17c6146101875780639741e3b31461019c578063b5508aa9146101af57600080fd5b80633f7286f4116100b05780633f7286f41461012e57806366d9a9a01461014357806385226c811461016557600080fd5b80630a9254e4146100d75780631ed7831c146100ee5780633e5e3c2314610119575b600080fd5b3480156100e357600080fd5b506100ec61022d565b005b3480156100fa57600080fd5b506101036103f7565b6040516101109190610f7d565b60405180910390f35b34801561012557600080fd5b50610103610466565b34801561013a57600080fd5b506101036104d3565b34801561014f57600080fd5b50610158610540565b6040516101109190610fd7565b34801561017157600080fd5b5061017a610651565b6040516101109190611143565b34801561019357600080fd5b50610158610721565b6100ec6101aa3660046111c3565b610829565b3480156101bb57600080fd5b5061017a610853565b3480156101d057600080fd5b506101d9610923565b6040519015158152602001610110565b3480156101f557600080fd5b506100ec610a83565b34801561020a57600080fd5b50610103610b57565b34801561021f57600080fd5b506000546101d99060ff1681565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c600060405161025f90610f70565b73ffffffffffffffffffffffffffffffffffffffff909216825215156020820152604001604051809103906000f08015801561029f573d6000803e3d6000fd5b50601b80547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff938416178255600f805460018181019092557f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180548316301790558254600e8054928301815560009081527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd909201805491861691909316179091559054604080517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529190931660048201526fffffffffffffffffffffffffffffffff60248201529151737109709ecfa91a80626ff3989d68f67f5b1dd12d9263c88a5e6d92604480830193919282900301818387803b1580156103dd57600080fd5b505af11580156103f1573d6000803e3d6000fd5b50505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561045c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801561045c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561045c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561064857600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561063057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116105dd5790505b50505050508152505081526020019060010190610564565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561064857838290600052602060002001805461069490611222565b80601f01602080910402602001604051908101604052809291908181526020018280546106c090611222565b801561070d5780601f106106e25761010080835404028352916020019161070d565b820191906000526020600020905b8154815290600101906020018083116106f057829003601f168201915b505050505081526020019060010190610675565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561064857600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561081157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116107be5790505b50505050508152505081526020019060010190610745565b61084e828267ffffffffffffffff163460405180602001604052806000815250610bc4565b505050565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561064857838290600052602060002001805461089690611222565b80601f01602080910402602001604051908101604052809291908181526020018280546108c290611222565b801561090f5780601f106108e45761010080835404028352916020019161090f565b820191906000526020600020905b8154815290600101906020018083116108f257829003601f168201915b505050505081526020019060010190610877565b60008054610100900460ff16156109435750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a7e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916109e8917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611275565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a20916112bd565b6000604051808303816000865af19150503d8060008114610a5d576040519150601f19603f3d011682016040523d82523d6000602084013e610a62565b606091505b5091505080806020019051810190610a7a91906112d9565b9150505b919050565b601b54604080517f82f161ca0000000000000000000000000000000000000000000000000000000081529051610b559273ffffffffffffffffffffffffffffffffffffffff16916382f161ca9160048083019260209291908290030181865afa158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b189190611302565b60006040518060400160405280601781526020017f6e6f206661696c65642063616c6c7320616c6c6f776564000000000000000000815250610c22565b565b6060600c80548060200260200160405190810160405280929190818152602001828054801561045c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575050505050905090565b6000806000610bd4866000610c6a565b905080610c0a576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080855160208701888b5af1979650505050505050565b81831461084e577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610c58919061131b565b60405180910390a161084e8383610c88565b600080603f83619c4001026040850201603f5a021015949350505050565b808214610df0577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610d149060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f202045787065637465640000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f2020202041637475616c0000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610df0610df4565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f425760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610ec39291602001611275565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610efb916112bd565b6000604051808303816000865af19150503d8060008114610f38576040519150601f19603f3d011682016040523d82523d6000602084013e610f3d565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b610af08061136383390190565b6020808252825182820181905260009190848201906040850190845b81811015610fcb57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f99565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156110be578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156110a95783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611067565b50978a01979550505091870191600101610fff565b50919998505050505050505050565b60005b838110156110e85781810151838201526020016110d0565b838111156103f15750506000910152565b600081518084526111118160208601602086016110cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111b6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526111a48583516110f9565b9450928501929085019060010161116a565b5092979650505050505050565b600080604083850312156111d657600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146111fa57600080fd5b9150602083013567ffffffffffffffff8116811461121757600080fd5b809150509250929050565b600181811c9082168061123657607f821691505b60208210810361126f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516112af8160048501602087016110cd565b919091016004019392505050565b600082516112cf8184602087016110cd565b9190910192915050565b6000602082840312156112eb57600080fd5b815180151581146112fb57600080fd5b9392505050565b60006020828403121561131457600080fd5b5051919050565b60408152600560408201527f4572726f7200000000000000000000000000000000000000000000000000000060608201526080602082015260006112fb60808301846110f956fe60a060405234801561001057600080fd5b50604051610af0380380610af083398101604081905261002f9161005a565b600080546001600160a01b0319166001600160a01b03939093169290921790915515156080526100a5565b6000806040838503121561006d57600080fd5b82516001600160a01b038116811461008457600080fd5b6020840151909250801515811461009a57600080fd5b809150509250929050565b608051610a226100ce600039600081816101310152818161034c01526103890152610a226000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806382f161ca1461003b578063e0f8035b14610056575b600080fd5b61004460015481565b60405190815260200160405180910390f35b61006961006436600461079d565b61006b565b005b60005473ffffffffffffffffffffffffffffffffffffffff90811690634c63e5629084163b1580156100be57506a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff851614155b6040518263ffffffff1660e01b81526004016100de911515815260200190565b60006040518083038186803b1580156100f657600080fd5b505afa15801561010a573d6000803e3d6000fd5b5050505061012d8367ffffffffffffffff166109c465ffffffffffff80166103d5565b92507f0000000000000000000000000000000000000000000000000000000000000000156101945761018d67ffffffffffffffff808616908516603f610174876040610843565b61017e91906108a2565b67ffffffffffffffff166103d5565b93506101ee565b6101eb67ffffffffffffffff8516603f6101af866040610843565b6101b991906108a2565b6101c590619c406108c9565b6101d1906103e86108c9565b67ffffffffffffffff1667ffffffffffffffff80166103d5565b93505b600080546040517f08e4e11600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260ff8516602483015267ffffffffffffffff871660448301526080606483015260848201939093529116906308e4e1169060a401600060405180830381600087803b15801561028357600080fd5b505af1158015610297573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff8616602482015267ffffffffffffffff8781166044808401919091528351808403909101815260649092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9741e3b300000000000000000000000000000000000000000000000000000000179052600093506103409250339188169060ff86169061042a565b905080801561036c57507f00000000000000000000000000000000000000000000000000000000000000005b156103875760018054906000610381836108f5565b91905055505b7f00000000000000000000000000000000000000000000000000000000000000001580156103b3575080155b156103ce57600180549060006103c8836108f5565b91905055505b5050505050565b60006103e2848484610444565b90506104236040518060400160405280600c81526020017f426f756e6420526573756c74000000000000000000000000000000000000000081525082610680565b9392505050565b600080600080845160208601878a8af19695505050505050565b6000818311156104da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156104ea5750818411155b156104f6575082610423565b6000610502848461092d565b61050d906001610944565b90506003851115801561051f57508481115b156105365761052e8585610944565b915050610423565b61056160037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61092d565b85101580156105985750610595857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61092d565b81115b156105d1576105c7857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61092d565b61052e908461092d565b828511156106275760006105e5848761092d565b905060006105f3838361095c565b90508060000361060857849350505050610423565b60016106148288610944565b61061e919061092d565b93505050610678565b8385101561067857600061063b868661092d565b90506000610649838361095c565b90508060000361065e57859350505050610423565b610668818661092d565b610673906001610944565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016106b79291906109a0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc000000000000000000000000000000000000000000000000000000001790525161073891906109f9565b600060405180830381855afa9150503d8060008114610773576040519150601f19603f3d011682016040523d82523d6000602084013e610778565b606091505b505050505050565b803567ffffffffffffffff8116811461079857600080fd5b919050565b600080600080608085870312156107b357600080fd5b6107bc85610780565b93506107ca60208601610780565b9250604085013573ffffffffffffffffffffffffffffffffffffffff811681146107f357600080fd5b9150606085013560ff8116811461080957600080fd5b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8083168185168183048111821515161561086a5761086a610814565b02949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600067ffffffffffffffff808416806108bd576108bd610873565b92169190910492915050565b600067ffffffffffffffff8083168185168083038211156108ec576108ec610814565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361092657610926610814565b5060010190565b60008282101561093f5761093f610814565b500390565b6000821982111561095757610957610814565b500190565b60008261096b5761096b610873565b500690565b60005b8381101561098b578181015183820152602001610973565b8381111561099a576000848401525b50505050565b60408152600083518060408401526109bf816060850160208801610970565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b60008251610a0b818460208701610970565b919091019291505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "248:1111:198:-:0;;;1572:26:266;;;1594:4;-1:-1:-1;;1572:26:266;;;;;;;;3161:44:269;;;;;;;;;;;248:1111:198;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100d25760003560e01c8063916a17c61161007f578063ba414fa611610059578063ba414fa6146101c4578063d3c4e5c7146101e9578063e20c9f71146101fe578063fa7626d41461021357600080fd5b8063916a17c6146101875780639741e3b31461019c578063b5508aa9146101af57600080fd5b80633f7286f4116100b05780633f7286f41461012e57806366d9a9a01461014357806385226c811461016557600080fd5b80630a9254e4146100d75780631ed7831c146100ee5780633e5e3c2314610119575b600080fd5b3480156100e357600080fd5b506100ec61022d565b005b3480156100fa57600080fd5b506101036103f7565b6040516101109190610f7d565b60405180910390f35b34801561012557600080fd5b50610103610466565b34801561013a57600080fd5b506101036104d3565b34801561014f57600080fd5b50610158610540565b6040516101109190610fd7565b34801561017157600080fd5b5061017a610651565b6040516101109190611143565b34801561019357600080fd5b50610158610721565b6100ec6101aa3660046111c3565b610829565b3480156101bb57600080fd5b5061017a610853565b3480156101d057600080fd5b506101d9610923565b6040519015158152602001610110565b3480156101f557600080fd5b506100ec610a83565b34801561020a57600080fd5b50610103610b57565b34801561021f57600080fd5b506000546101d99060ff1681565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c600060405161025f90610f70565b73ffffffffffffffffffffffffffffffffffffffff909216825215156020820152604001604051809103906000f08015801561029f573d6000803e3d6000fd5b50601b80547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff938416178255600f805460018181019092557f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180548316301790558254600e8054928301815560009081527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd909201805491861691909316179091559054604080517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529190931660048201526fffffffffffffffffffffffffffffffff60248201529151737109709ecfa91a80626ff3989d68f67f5b1dd12d9263c88a5e6d92604480830193919282900301818387803b1580156103dd57600080fd5b505af11580156103f1573d6000803e3d6000fd5b50505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561045c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801561045c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801561045c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561064857600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561063057602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116105dd5790505b50505050508152505081526020019060010190610564565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561064857838290600052602060002001805461069490611222565b80601f01602080910402602001604051908101604052809291908181526020018280546106c090611222565b801561070d5780601f106106e25761010080835404028352916020019161070d565b820191906000526020600020905b8154815290600101906020018083116106f057829003601f168201915b505050505081526020019060010190610675565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561064857600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561081157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116107be5790505b50505050508152505081526020019060010190610745565b61084e828267ffffffffffffffff163460405180602001604052806000815250610bc4565b505050565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561064857838290600052602060002001805461089690611222565b80601f01602080910402602001604051908101604052809291908181526020018280546108c290611222565b801561090f5780601f106108e45761010080835404028352916020019161090f565b820191906000526020600020905b8154815290600101906020018083116108f257829003601f168201915b505050505081526020019060010190610877565b60008054610100900460ff16156109435750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a7e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916109e8917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611275565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a20916112bd565b6000604051808303816000865af19150503d8060008114610a5d576040519150601f19603f3d011682016040523d82523d6000602084013e610a62565b606091505b5091505080806020019051810190610a7a91906112d9565b9150505b919050565b601b54604080517f82f161ca0000000000000000000000000000000000000000000000000000000081529051610b559273ffffffffffffffffffffffffffffffffffffffff16916382f161ca9160048083019260209291908290030181865afa158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b189190611302565b60006040518060400160405280601781526020017f6e6f206661696c65642063616c6c7320616c6c6f776564000000000000000000815250610c22565b565b6060600c80548060200260200160405190810160405280929190818152602001828054801561045c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610431575050505050905090565b6000806000610bd4866000610c6a565b905080610c0a576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080855160208701888b5af1979650505050505050565b81831461084e577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051610c58919061131b565b60405180910390a161084e8383610c88565b600080603f83619c4001026040850201603f5a021015949350505050565b808214610df0577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610d149060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f202045787065637465640000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f2020202041637475616c0000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610df0610df4565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f425760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610ec39291602001611275565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610efb916112bd565b6000604051808303816000865af19150503d8060008114610f38576040519150601f19603f3d011682016040523d82523d6000602084013e610f3d565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b610af08061136383390190565b6020808252825182820181905260009190848201906040850190845b81811015610fcb57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f99565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156110be578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156110a95783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611067565b50978a01979550505091870191600101610fff565b50919998505050505050505050565b60005b838110156110e85781810151838201526020016110d0565b838111156103f15750506000910152565b600081518084526111118160208601602086016110cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111b6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526111a48583516110f9565b9450928501929085019060010161116a565b5092979650505050505050565b600080604083850312156111d657600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146111fa57600080fd5b9150602083013567ffffffffffffffff8116811461121757600080fd5b809150509250929050565b600181811c9082168061123657607f821691505b60208210810361126f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516112af8160048501602087016110cd565b919091016004019392505050565b600082516112cf8184602087016110cd565b9190910192915050565b6000602082840312156112eb57600080fd5b815180151581146112fb57600080fd5b9392505050565b60006020828403121561131457600080fd5b5051919050565b60408152600560408201527f4572726f7200000000000000000000000000000000000000000000000000000060608201526080602082015260006112fb60808301846110f956fe60a060405234801561001057600080fd5b50604051610af0380380610af083398101604081905261002f9161005a565b600080546001600160a01b0319166001600160a01b03939093169290921790915515156080526100a5565b6000806040838503121561006d57600080fd5b82516001600160a01b038116811461008457600080fd5b6020840151909250801515811461009a57600080fd5b809150509250929050565b608051610a226100ce600039600081816101310152818161034c01526103890152610a226000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806382f161ca1461003b578063e0f8035b14610056575b600080fd5b61004460015481565b60405190815260200160405180910390f35b61006961006436600461079d565b61006b565b005b60005473ffffffffffffffffffffffffffffffffffffffff90811690634c63e5629084163b1580156100be57506a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff851614155b6040518263ffffffff1660e01b81526004016100de911515815260200190565b60006040518083038186803b1580156100f657600080fd5b505afa15801561010a573d6000803e3d6000fd5b5050505061012d8367ffffffffffffffff166109c465ffffffffffff80166103d5565b92507f0000000000000000000000000000000000000000000000000000000000000000156101945761018d67ffffffffffffffff808616908516603f610174876040610843565b61017e91906108a2565b67ffffffffffffffff166103d5565b93506101ee565b6101eb67ffffffffffffffff8516603f6101af866040610843565b6101b991906108a2565b6101c590619c406108c9565b6101d1906103e86108c9565b67ffffffffffffffff1667ffffffffffffffff80166103d5565b93505b600080546040517f08e4e11600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015260ff8516602483015267ffffffffffffffff871660448301526080606483015260848201939093529116906308e4e1169060a401600060405180830381600087803b15801561028357600080fd5b505af1158015610297573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff8616602482015267ffffffffffffffff8781166044808401919091528351808403909101815260649092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9741e3b300000000000000000000000000000000000000000000000000000000179052600093506103409250339188169060ff86169061042a565b905080801561036c57507f00000000000000000000000000000000000000000000000000000000000000005b156103875760018054906000610381836108f5565b91905055505b7f00000000000000000000000000000000000000000000000000000000000000001580156103b3575080155b156103ce57600180549060006103c8836108f5565b91905055505b5050505050565b60006103e2848484610444565b90506104236040518060400160405280600c81526020017f426f756e6420526573756c74000000000000000000000000000000000000000081525082610680565b9392505050565b600080600080845160208601878a8af19695505050505050565b6000818311156104da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156104ea5750818411155b156104f6575082610423565b6000610502848461092d565b61050d906001610944565b90506003851115801561051f57508481115b156105365761052e8585610944565b915050610423565b61056160037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61092d565b85101580156105985750610595857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61092d565b81115b156105d1576105c7857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61092d565b61052e908461092d565b828511156106275760006105e5848761092d565b905060006105f3838361095c565b90508060000361060857849350505050610423565b60016106148288610944565b61061e919061092d565b93505050610678565b8385101561067857600061063b868661092d565b90506000610649838361095c565b90508060000361065e57859350505050610423565b610668818661092d565b610673906001610944565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016106b79291906109a0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc000000000000000000000000000000000000000000000000000000001790525161073891906109f9565b600060405180830381855afa9150503d8060008114610773576040519150601f19603f3d011682016040523d82523d6000602084013e610778565b606091505b505050505050565b803567ffffffffffffffff8116811461079857600080fd5b919050565b600080600080608085870312156107b357600080fd5b6107bc85610780565b93506107ca60208601610780565b9250604085013573ffffffffffffffffffffffffffffffffffffffff811681146107f357600080fd5b9150606085013560ff8116811461080957600080fd5b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8083168185168183048111821515161561086a5761086a610814565b02949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600067ffffffffffffffff808416806108bd576108bd610873565b92169190910492915050565b600067ffffffffffffffff8083168185168083038211156108ec576108ec610814565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361092657610926610814565b5060010190565b60008282101561093f5761093f610814565b500390565b6000821982111561095757610957610814565b500190565b60008261096b5761096b610873565b500690565b60005b8381101561098b578181015183820152602001610973565b8381111561099a576000848401525b50505050565b60408152600083518060408401526109bf816060850160208801610970565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b60008251610a0b818460208701610970565b919091019291505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "248:1111:198:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:387;;;;;;;;;;;;;:::i;:::-;;2161:134:272;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;;;;;;;;;;;:::i;2631:141::-;;;;;;;;;;;;;:::i;2447:178::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;;;;;;;;;;;:::i;1212:145:198:-;;;;;;:::i;:::-;;:::i;1866:141:272:-;;;;;;;;;;;;;:::i;1819:584:266:-;;;;;;;;;;;;;:::i;:::-;;;4515:14:283;;4508:22;4490:41;;4478:2;4463:18;1819:584:266;4350:187:283;1060:146:198;;;;;;;;;;;;;:::i;2013:142:272:-;;;;;;;;;;;;;:::i;1572:26:266:-;;;;;;;;;;-1:-1:-1;1572:26:266;;;;;;;;329:387:198;317:28:267;309:37;;439:5:198;414:31;;;;;:::i;:::-;4753:42:283;4741:55;;;4723:74;;4840:14;4833:22;4828:2;4813:18;;4806:50;4711:2;4696:18;414:31:198;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:5:198;:39;;;;;;;;;;;;;1689:16:272;:41;;-1:-1:-1;1689:41:272;;;;;;;;;;;;520:4:198;1689:41:272;;;601:5:198;;1419:18:272;:45;;;;;;;-1:-1:-1;1419:45:272;;;;;;;;;601:5:198;;;1419:45:272;;;;;;;;683:5:198;;667:42;;;;;;683:5;;;;667:42;;;5041:74:283;691:17:198;5131:18:283;;;5124:75;667:42:198;;:7;;;;5014:18:283;;;;;-1:-1:-1;;667:42:198;;;;;-1:-1:-1;667:7:198;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:387::o;2161:134:272:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:145:198;1297:53;1321:2;1325:6;1297:53;;1333:9;1297:53;;;;;;;;;;;;:23;:53::i;:::-;;1212:145;;:::o;1866:141:272:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:266;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:266;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5826:74:283;;;2221:17:266;5916:18:283;;;5909:34;2196:43:266;;;;;;;;;5799:18:283;;;2196:43:266;;;-1:-1:-1;;1671:64:266;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:266:o;1060:146:198:-;1152:5;;:16;;;;;;;;1143:56;;1152:5;;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1170:1;1143:56;;;;;;;;;;;;;;;;;:8;:56::i;:::-;1060:146::o;2013:142:272:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;4421:2252:100:-;4575:4;4591:13;4614:15;4632:21;4642:7;4651:1;4632:9;:21::i;:::-;4614:39;;4764:10;4754:1146;;4876:10;4873:1;4866:21;4991:2;4987;4980:14;5729:56;5725:2;5718:68;5882:3;5878:2;5871:15;4754:1146;6604:4;6572;6535:9;6529:16;6499:2;6488:9;6484:18;6445:6;6407:7;6377:5;6355:277;6343:289;4421:2252;-1:-1:-1;;;;;;;4421:2252:100:o;5469:178:266:-;5550:1;5545;:6;5541:100;;5572:30;5598:3;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;3587:395:100:-;3668:4;3684:15;3920:2;3905:12;3898:5;3894:24;3890:33;3885:2;3876:7;3872:16;3868:56;3863:2;3856:5;3852:14;3849:76;3825:114;;3587:395;-1:-1:-1;;;;3587:395:100:o;5202:262:266:-;5264:1;5259;:6;5255:203;;5286:41;;;;;7779:2:283;7761:21;;;7818:2;7798:18;;;7791:30;7857:34;7852:2;7837:18;;7830:62;7928:4;7923:2;7908:18;;7901:32;7965:3;7950:19;;7577:398;5286:41:266;;;;;;;;5346:31;;;8192:21:283;;;8249:2;8229:18;;;8222:30;8288:12;8283:2;8268:18;;8261:40;8368:4;8353:20;;8346:36;;;5346:31:266;;;;;;;8333:3:283;5346:31:266;;;5396;;;8605:21:283;;;8662:2;8642:18;;;8635:30;8701:12;8696:2;8681:18;;8674:40;8781:4;8766:20;;8759:36;;;5396:31:266;;;;;;;8746:3:283;5396:31:266;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;9008:74:283;;;2670:17:266;9098:18:283;;;9091:34;;;;2705:4:266;9141:18:283;;;9134:34;2482:11:266;;1671:64;2579:43;;8981:18:283;;2645:67:266;;;;;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;;;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:266;2813:7;:14;;;;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;14:681:283:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:283;;14:681;-1:-1:-1;;;;;;14:681:283:o;700:1699::-;906:4;935:2;975;964:9;960:18;1005:2;994:9;987:21;1028:6;1063;1057:13;1094:6;1086;1079:22;1120:2;1110:12;;1153:2;1142:9;1138:18;1131:25;;1215:2;1205:6;1202:1;1198:14;1187:9;1183:30;1179:39;1253:2;1245:6;1241:15;1274:1;1295;1305:1065;1321:6;1316:3;1313:15;1305:1065;;;1390:22;;;1414:66;1386:95;1374:108;;1505:13;;1592:9;;1603:42;1588:58;1573:74;;1686:11;;1680:18;1718:15;;;1711:27;;;1799:19;;1545:15;;;1831:24;;;1921:21;;;;1966:1;;1889:2;1877:15;;;1980:282;1996:8;1991:3;1988:17;1980:282;;;2077:15;;2094:66;2073:88;2059:103;;2231:17;;;;2024:1;2015:11;;;;;2188:14;;;;1980:282;;;-1:-1:-1;2348:12:283;;;;2285:5;-1:-1:-1;;;2313:15:283;;;;1347:1;1338:11;1305:1065;;;-1:-1:-1;2387:6:283;;700:1699;-1:-1:-1;;;;;;;;;700:1699:283:o;2404:258::-;2476:1;2486:113;2500:6;2497:1;2494:13;2486:113;;;2576:11;;;2570:18;2557:11;;;2550:39;2522:2;2515:10;2486:113;;;2617:6;2614:1;2611:13;2608:48;;;-1:-1:-1;;2652:1:283;2634:16;;2627:27;2404:258::o;2667:317::-;2709:3;2747:5;2741:12;2774:6;2769:3;2762:19;2790:63;2846:6;2839:4;2834:3;2830:14;2823:4;2816:5;2812:16;2790:63;:::i;:::-;2898:2;2886:15;2903:66;2882:88;2873:98;;;;2973:4;2869:109;;2667:317;-1:-1:-1;;2667:317:283:o;2989:862::-;3151:4;3180:2;3220;3209:9;3205:18;3250:2;3239:9;3232:21;3273:6;3308;3302:13;3339:6;3331;3324:22;3377:2;3366:9;3362:18;3355:25;;3439:2;3429:6;3426:1;3422:14;3411:9;3407:30;3403:39;3389:53;;3477:2;3469:6;3465:15;3498:1;3508:314;3522:6;3519:1;3516:13;3508:314;;;3611:66;3599:9;3591:6;3587:22;3583:95;3578:3;3571:108;3702:40;3735:6;3726;3720:13;3702:40;:::i;:::-;3692:50;-1:-1:-1;3800:12:283;;;;3765:15;;;;3544:1;3537:9;3508:314;;;-1:-1:-1;3839:6:283;;2989:862;-1:-1:-1;;;;;;;2989:862:283:o;3856:489::-;3923:6;3931;3984:2;3972:9;3963:7;3959:23;3955:32;3952:52;;;4000:1;3997;3990:12;3952:52;4039:9;4026:23;4089:42;4082:5;4078:54;4071:5;4068:65;4058:93;;4147:1;4144;4137:12;4058:93;4170:5;-1:-1:-1;4227:2:283;4212:18;;4199:32;4275:18;4262:32;;4250:45;;4240:73;;4309:1;4306;4299:12;4240:73;4332:7;4322:17;;;3856:489;;;;;:::o;5210:437::-;5289:1;5285:12;;;;5332;;;5353:61;;5407:4;5399:6;5395:17;5385:27;;5353:61;5460:2;5452:6;5449:14;5429:18;5426:38;5423:218;;5497:77;5494:1;5487:88;5598:4;5595:1;5588:15;5626:4;5623:1;5616:15;5423:218;;5210:437;;;:::o;5954:417::-;6151:66;6143:6;6139:79;6134:3;6127:92;6109:3;6248:6;6242:13;6264:61;6318:6;6314:1;6309:3;6305:11;6298:4;6290:6;6286:17;6264:61;:::i;:::-;6345:16;;;;6363:1;6341:24;;5954:417;-1:-1:-1;;;5954:417:283:o;6376:274::-;6505:3;6543:6;6537:13;6559:53;6605:6;6600:3;6593:4;6585:6;6581:17;6559:53;:::i;:::-;6628:16;;;;;6376:274;-1:-1:-1;;6376:274:283:o;6655:277::-;6722:6;6775:2;6763:9;6754:7;6750:23;6746:32;6743:52;;;6791:1;6788;6781:12;6743:52;6823:9;6817:16;6876:5;6869:13;6862:21;6855:5;6852:32;6842:60;;6898:1;6895;6888:12;6842:60;6921:5;6655:277;-1:-1:-1;;;6655:277:283:o;6937:184::-;7007:6;7060:2;7048:9;7039:7;7035:23;7031:32;7028:52;;;7076:1;7073;7066:12;7028:52;-1:-1:-1;7099:16:283;;6937:184;-1:-1:-1;6937:184:283:o;7126:446::-;7376:2;7365:9;7358:21;7415:1;7410:2;7399:9;7395:18;7388:29;7453:7;7448:2;7437:9;7433:18;7426:35;7499:3;7492:4;7481:9;7477:20;7470:33;7339:4;7520:46;7561:3;7550:9;7546:19;7538:6;7520:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "invariant_callWithMinGas_alwaysForwardsMinGas_succeeds()": "d3c4e5c7",
    "performSafeCallMinGas(address,uint64)": "9741e3b3",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invariant_callWithMinGas_alwaysForwardsMinGas_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"}],\"name\":\"performSafeCallMinGas\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"invariant_callWithMinGas_alwaysForwardsMinGas_succeeds()\":{\"custom:invariant\":\"If `callWithMinGas` performs a call, then it must always provide at least the specified minimum gas limit to the subcontext. If the check for remaining gas in `SafeCall.callWithMinGas` passes, the subcontext of the call below it must be provided at least `minGas` gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/invariants/SafeCall.t.sol\":\"SafeCall_Succeeds_Invariants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=node_modules/clones-with-immutable-args/src/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":clones-with-immutable-args/=node_modules/clones-with-immutable-args/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0x4cabce33fa3c59ff3206dae21722fe34e5753ea8d9246fc07c0d23cbdb3610f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba2beeed5a481afdd92fe09ff8b25b423a8f8d77816b41039603d35aca733cc\",\"dweb:/ipfs/QmPztnkeUeZjZ5BnWAdAAF9fg7QiCkYdffzzvoCxUsVLLM\"]},\"contracts/test/invariants/SafeCall.t.sol\":{\"keccak256\":\"0xf90556b266d2bf40b010ca09ca7d2db4f0aedd3acd0243da4ed6221cacaef714\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7db4597546fdbcb6d2ca36bdd2a83b5e1ff2186a977ead0f3c03bc2ed8229f4\",\"dweb:/ipfs/QmSFwgSYgTcMhZavZSafmMoA3bU4Pgbr9TRVmk42fn9Grk\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invariant_callWithMinGas_alwaysForwardsMinGas_succeeds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "minGas",
              "type": "uint64"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "performSafeCallMinGas"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "invariant_callWithMinGas_alwaysForwardsMinGas_succeeds()": {
            "custom:invariant": "If `callWithMinGas` performs a call, then it must always provide at least the specified minimum gas limit to the subcontext. If the check for remaining gas in `SafeCall.callWithMinGas` passes, the subcontext of the call below it must be provided at least `minGas` gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=node_modules/clones-with-immutable-args/src/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        "clones-with-immutable-args/=node_modules/clones-with-immutable-args/",
        "ds-test/=node_modules/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/test/invariants/SafeCall.t.sol": "SafeCall_Succeeds_Invariants"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0x4cabce33fa3c59ff3206dae21722fe34e5753ea8d9246fc07c0d23cbdb3610f3",
        "urls": [
          "bzz-raw://6ba2beeed5a481afdd92fe09ff8b25b423a8f8d77816b41039603d35aca733cc",
          "dweb:/ipfs/QmPztnkeUeZjZ5BnWAdAAF9fg7QiCkYdffzzvoCxUsVLLM"
        ],
        "license": "MIT"
      },
      "contracts/test/invariants/SafeCall.t.sol": {
        "keccak256": "0xf90556b266d2bf40b010ca09ca7d2db4f0aedd3acd0243da4ed6221cacaef714",
        "urls": [
          "bzz-raw://d7db4597546fdbcb6d2ca36bdd2a83b5e1ff2186a977ead0f3c03bc2ed8229f4",
          "dweb:/ipfs/QmSFwgSYgTcMhZavZSafmMoA3bU4Pgbr9TRVmk42fn9Grk"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 114733,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 114735,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124395,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 124416,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)"
      },
      {
        "astId": 124420,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 124424,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 124427,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 125093,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 126806,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 116443,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116446,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116449,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116452,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 116455,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116458,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 116462,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 116466,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage"
      },
      {
        "astId": 122939,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)128292_storage"
      },
      {
        "astId": 103166,
        "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
        "label": "actor",
        "offset": 0,
        "slot": "27",
        "type": "t_contract(SafeCaller_Actor)103473"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)116440_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)116440_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(SafeCaller_Actor)103473": {
        "encoding": "inplace",
        "label": "contract SafeCaller_Actor",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)124411_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)124411_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)124411_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 124404,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 124406,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 124408,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 124410,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)116440_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 116436,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 116439,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)128292_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 128272,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 128280,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 128283,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 128285,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 128287,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 128289,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 128291,
            "contract": "contracts/test/invariants/SafeCall.t.sol:SafeCall_Succeeds_Invariants",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "invariant_callWithMinGas_alwaysForwardsMinGas_succeeds()": {}
    }
  },
  "ast": {
    "absolutePath": "contracts/test/invariants/SafeCall.t.sol",
    "id": 103474,
    "exportedSymbols": {
      "SafeCall": [
        43435
      ],
      "SafeCall_Fails_Invariants": [
        103317
      ],
      "SafeCall_Succeeds_Invariants": [
        103239
      ],
      "SafeCaller_Actor": [
        103473
      ],
      "StdUtils": [
        117503
      ],
      "Test": [
        117552
      ],
      "Vm": [
        119058
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4120:198",
    "nodes": [
      {
        "id": 103153,
        "nodeType": "PragmaDirective",
        "src": "32:23:198",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 103155,
        "nodeType": "ImportDirective",
        "src": "57:42:198",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 103474,
        "sourceUnit": 117553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 103154,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117552,
              "src": "66:4:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 103157,
        "nodeType": "ImportDirective",
        "src": "100:50:198",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/StdUtils.sol",
        "file": "forge-std/StdUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 103474,
        "sourceUnit": 117504,
        "symbolAliases": [
          {
            "foreign": {
              "id": 103156,
              "name": "StdUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117503,
              "src": "109:8:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 103159,
        "nodeType": "ImportDirective",
        "src": "151:38:198",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 103474,
        "sourceUnit": 119059,
        "symbolAliases": [
          {
            "foreign": {
              "id": 103158,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119058,
              "src": "160:2:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 103161,
        "nodeType": "ImportDirective",
        "src": "190:56:198",
        "nodes": [],
        "absolutePath": "contracts/libraries/SafeCall.sol",
        "file": "../../libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 103474,
        "sourceUnit": 43436,
        "symbolAliases": [
          {
            "foreign": {
              "id": 103160,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43435,
              "src": "199:8:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 103239,
        "nodeType": "ContractDefinition",
        "src": "248:1111:198",
        "nodes": [
          {
            "id": 103166,
            "nodeType": "VariableDeclaration",
            "src": "300:22:198",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "actor",
            "nameLocation": "317:5:198",
            "scope": 103239,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
              "typeString": "contract SafeCaller_Actor"
            },
            "typeName": {
              "id": 103165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 103164,
                "name": "SafeCaller_Actor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 103473,
                "src": "300:16:198"
              },
              "referencedDeclaration": 103473,
              "src": "300:16:198",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                "typeString": "contract SafeCaller_Actor"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 103207,
            "nodeType": "FunctionDefinition",
            "src": "329:387:198",
            "nodes": [],
            "body": {
              "id": 103206,
              "nodeType": "Block",
              "src": "353:363:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 103176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103169,
                      "name": "actor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103166,
                      "src": "406:5:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                        "typeString": "contract SafeCaller_Actor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 103173,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122936,
                          "src": "435:2:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 103174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "439:5:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 103172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "414:20:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Vm_$119058_$_t_bool_$returns$_t_contract$_SafeCaller_Actor_$103473_$",
                          "typeString": "function (contract Vm,bool) returns (contract SafeCaller_Actor)"
                        },
                        "typeName": {
                          "id": 103171,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 103170,
                            "name": "SafeCaller_Actor",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 103473,
                            "src": "418:16:198"
                          },
                          "referencedDeclaration": 103473,
                          "src": "418:16:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                            "typeString": "contract SafeCaller_Actor"
                          }
                        }
                      },
                      "id": 103175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "414:31:198",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                        "typeString": "contract SafeCaller_Actor"
                      }
                    },
                    "src": "406:39:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                      "typeString": "contract SafeCaller_Actor"
                    }
                  },
                  "id": 103177,
                  "nodeType": "ExpressionStatement",
                  "src": "406:39:198"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103181,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "520:4:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCall_Succeeds_Invariants_$103239",
                              "typeString": "contract SafeCall_Succeeds_Invariants"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeCall_Succeeds_Invariants_$103239",
                              "typeString": "contract SafeCall_Succeeds_Invariants"
                            }
                          ],
                          "id": 103180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "512:7:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "512:7:198",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "512:13:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103178,
                      "name": "targetSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116564,
                      "src": "499:12:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 103183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:27:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103184,
                  "nodeType": "ExpressionStatement",
                  "src": "499:27:198"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103188,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103166,
                            "src": "601:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          ],
                          "id": 103187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "593:7:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "593:7:198",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "593:14:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103185,
                      "name": "targetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116539,
                      "src": "578:14:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 103190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:30:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103191,
                  "nodeType": "ExpressionStatement",
                  "src": "578:30:198"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103197,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103166,
                            "src": "683:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          ],
                          "id": 103196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "675:7:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "675:7:198",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "675:14:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 103201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "696:7:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 103200,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "696:7:198",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 103199,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "691:4:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 103202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "691:13:198",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 103203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "691:17:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 103192,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "667:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 103194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "667:7:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 103204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:42:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103205,
                  "nodeType": "ExpressionStatement",
                  "src": "667:42:198"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "338:5:198",
            "parameters": {
              "id": 103167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:2:198"
            },
            "returnParameters": {
              "id": 103168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:198"
            },
            "scope": 103239,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103220,
            "nodeType": "FunctionDefinition",
            "src": "1060:146:198",
            "nodes": [],
            "body": {
              "id": 103219,
              "nodeType": "Block",
              "src": "1133:73:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 103212,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103166,
                            "src": "1152:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          },
                          "id": 103213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numCalls",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103326,
                          "src": "1152:14:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 103214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1152:16:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 103215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1170:1:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6e6f206661696c65642063616c6c7320616c6c6f776564",
                        "id": 103216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1173:25:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16acaa351d842230c259d3d01b6cdd0fd4ed354fe915b4289676a400da521174",
                          "typeString": "literal_string \"no failed calls allowed\""
                        },
                        "value": "no failed calls allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16acaa351d842230c259d3d01b6cdd0fd4ed354fe915b4289676a400da521174",
                          "typeString": "literal_string \"no failed calls allowed\""
                        }
                      ],
                      "id": 103211,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 115184,
                      "src": "1143:8:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 103217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:56:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103218,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:56:198"
                }
              ]
            },
            "documentation": {
              "id": 103208,
              "nodeType": "StructuredDocumentation",
              "src": "722:333:198",
              "text": " @custom:invariant If `callWithMinGas` performs a call, then it must always\n provide at least the specified minimum gas limit to the subcontext.\n If the check for remaining gas in `SafeCall.callWithMinGas` passes, the\n subcontext of the call below it must be provided at least `minGas` gas."
            },
            "functionSelector": "d3c4e5c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invariant_callWithMinGas_alwaysForwardsMinGas_succeeds",
            "nameLocation": "1069:54:198",
            "parameters": {
              "id": 103209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1123:2:198"
            },
            "returnParameters": {
              "id": 103210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:198"
            },
            "scope": 103239,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103238,
            "nodeType": "FunctionDefinition",
            "src": "1212:145:198",
            "nodes": [],
            "body": {
              "id": 103237,
              "nodeType": "Block",
              "src": "1287:70:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103230,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103222,
                        "src": "1321:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103231,
                        "name": "minGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103224,
                        "src": "1325:6:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 103232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1333:3:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1333:9:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 103234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1344:5:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 103227,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43435,
                        "src": "1297:8:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$43435_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 103229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callWithMinGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43434,
                      "src": "1297:23:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 103235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:53:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103236,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:53:198"
                }
              ]
            },
            "functionSelector": "9741e3b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performSafeCallMinGas",
            "nameLocation": "1221:21:198",
            "parameters": {
              "id": 103225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103222,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1251:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103238,
                  "src": "1243:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103224,
                  "mutability": "mutable",
                  "name": "minGas",
                  "nameLocation": "1262:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103238,
                  "src": "1255:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 103223,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:27:198"
            },
            "returnParameters": {
              "id": 103226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:0:198"
            },
            "scope": 103239,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 103162,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117552,
              "src": "289:4:198"
            },
            "id": 103163,
            "nodeType": "InheritanceSpecifier",
            "src": "289:4:198"
          }
        ],
        "canonicalName": "SafeCall_Succeeds_Invariants",
        "contractDependencies": [
          103473
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          103239,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "SafeCall_Succeeds_Invariants",
        "nameLocation": "257:28:198",
        "scope": 103474,
        "usedErrors": []
      },
      {
        "id": 103317,
        "nodeType": "ContractDefinition",
        "src": "1361:1112:198",
        "nodes": [
          {
            "id": 103244,
            "nodeType": "VariableDeclaration",
            "src": "1410:22:198",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "actor",
            "nameLocation": "1427:5:198",
            "scope": 103317,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
              "typeString": "contract SafeCaller_Actor"
            },
            "typeName": {
              "id": 103243,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 103242,
                "name": "SafeCaller_Actor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 103473,
                "src": "1410:16:198"
              },
              "referencedDeclaration": 103473,
              "src": "1410:16:198",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                "typeString": "contract SafeCaller_Actor"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 103285,
            "nodeType": "FunctionDefinition",
            "src": "1439:386:198",
            "nodes": [],
            "body": {
              "id": 103284,
              "nodeType": "Block",
              "src": "1463:362:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 103254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103247,
                      "name": "actor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103244,
                      "src": "1516:5:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                        "typeString": "contract SafeCaller_Actor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 103251,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122936,
                          "src": "1545:2:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 103252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1549:4:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vm_$119058",
                            "typeString": "contract Vm"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 103250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1524:20:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Vm_$119058_$_t_bool_$returns$_t_contract$_SafeCaller_Actor_$103473_$",
                          "typeString": "function (contract Vm,bool) returns (contract SafeCaller_Actor)"
                        },
                        "typeName": {
                          "id": 103249,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 103248,
                            "name": "SafeCaller_Actor",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 103473,
                            "src": "1528:16:198"
                          },
                          "referencedDeclaration": 103473,
                          "src": "1528:16:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                            "typeString": "contract SafeCaller_Actor"
                          }
                        }
                      },
                      "id": 103253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:30:198",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                        "typeString": "contract SafeCaller_Actor"
                      }
                    },
                    "src": "1516:38:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                      "typeString": "contract SafeCaller_Actor"
                    }
                  },
                  "id": 103255,
                  "nodeType": "ExpressionStatement",
                  "src": "1516:38:198"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103259,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1629:4:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCall_Fails_Invariants_$103317",
                              "typeString": "contract SafeCall_Fails_Invariants"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeCall_Fails_Invariants_$103317",
                              "typeString": "contract SafeCall_Fails_Invariants"
                            }
                          ],
                          "id": 103258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1621:7:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1621:7:198",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1621:13:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103256,
                      "name": "targetSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116564,
                      "src": "1608:12:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 103261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:27:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103262,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:27:198"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103266,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103244,
                            "src": "1710:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          ],
                          "id": 103265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1702:7:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1702:7:198",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1702:14:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 103263,
                      "name": "targetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116539,
                      "src": "1687:14:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 103268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:30:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103269,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:30:198"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 103275,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103244,
                            "src": "1792:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          ],
                          "id": 103274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1784:7:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1784:7:198",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:14:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 103279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1805:7:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 103278,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "1805:7:198",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 103277,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1800:4:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 103280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1800:13:198",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 103281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1800:17:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 103270,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122936,
                        "src": "1776:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 103272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118700,
                      "src": "1776:7:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 103282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:42:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103283,
                  "nodeType": "ExpressionStatement",
                  "src": "1776:42:198"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1448:5:198",
            "parameters": {
              "id": 103245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:2:198"
            },
            "returnParameters": {
              "id": 103246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1463:0:198"
            },
            "scope": 103317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103298,
            "nodeType": "FunctionDefinition",
            "src": "2172:148:198",
            "nodes": [],
            "body": {
              "id": 103297,
              "nodeType": "Block",
              "src": "2243:77:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 103290,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103244,
                            "src": "2262:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeCaller_Actor_$103473",
                              "typeString": "contract SafeCaller_Actor"
                            }
                          },
                          "id": 103291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "numCalls",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103326,
                          "src": "2262:14:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 103292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2262:16:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 103293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2280:1:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6e6f207375636365737366756c2063616c6c7320616c6c6f776564",
                        "id": 103294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2283:29:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9b54be76b3fed7de3c9af527822c16dfd9bd4bc3b31e6a34ac860fa2edd408",
                          "typeString": "literal_string \"no successful calls allowed\""
                        },
                        "value": "no successful calls allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9b54be76b3fed7de3c9af527822c16dfd9bd4bc3b31e6a34ac860fa2edd408",
                          "typeString": "literal_string \"no successful calls allowed\""
                        }
                      ],
                      "id": 103289,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        123071,
                        123096,
                        123109,
                        123125,
                        123167,
                        123209,
                        123251,
                        123288,
                        123325,
                        123362,
                        114965,
                        114990,
                        115020,
                        115045,
                        115104,
                        115129,
                        115159,
                        115184,
                        116284,
                        116319
                      ],
                      "referencedDeclaration": 115184,
                      "src": "2253:8:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 103295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:60:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103296,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:60:198"
                }
              ]
            },
            "documentation": {
              "id": 103286,
              "nodeType": "StructuredDocumentation",
              "src": "1831:336:198",
              "text": " @custom:invariant `callWithMinGas` reverts if there is not enough gas to pass\n to the subcontext.\n If there is not enough gas in the callframe to ensure that `callWithMinGas`\n can provide the specified minimum gas limit to the subcontext of the call,\n then `callWithMinGas` must revert."
            },
            "functionSelector": "38c2d5aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invariant_callWithMinGas_neverForwardsMinGas_reverts",
            "nameLocation": "2181:52:198",
            "parameters": {
              "id": 103287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2233:2:198"
            },
            "returnParameters": {
              "id": 103288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2243:0:198"
            },
            "scope": 103317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103316,
            "nodeType": "FunctionDefinition",
            "src": "2326:145:198",
            "nodes": [],
            "body": {
              "id": 103315,
              "nodeType": "Block",
              "src": "2401:70:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103308,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103300,
                        "src": "2435:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103309,
                        "name": "minGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103302,
                        "src": "2439:6:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 103310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2447:3:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2447:9:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 103312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2458:5:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 103305,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43435,
                        "src": "2411:8:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$43435_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 103307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callWithMinGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43434,
                      "src": "2411:23:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 103313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:53:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103314,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:53:198"
                }
              ]
            },
            "functionSelector": "9741e3b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performSafeCallMinGas",
            "nameLocation": "2335:21:198",
            "parameters": {
              "id": 103303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103300,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2365:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103316,
                  "src": "2357:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103302,
                  "mutability": "mutable",
                  "name": "minGas",
                  "nameLocation": "2376:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103316,
                  "src": "2369:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 103301,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:27:198"
            },
            "returnParameters": {
              "id": 103304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2401:0:198"
            },
            "scope": 103317,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 103240,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117552,
              "src": "1399:4:198"
            },
            "id": 103241,
            "nodeType": "InheritanceSpecifier",
            "src": "1399:4:198"
          }
        ],
        "canonicalName": "SafeCall_Fails_Invariants",
        "contractDependencies": [
          103473
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          103317,
          117552,
          122943,
          122940,
          117503,
          116655,
          127476,
          126797,
          125064,
          124370,
          116431
        ],
        "name": "SafeCall_Fails_Invariants",
        "nameLocation": "1370:25:198",
        "scope": 103474,
        "usedErrors": []
      },
      {
        "id": 103473,
        "nodeType": "ContractDefinition",
        "src": "2475:1676:198",
        "nodes": [
          {
            "id": 103321,
            "nodeType": "VariableDeclaration",
            "src": "2519:29:198",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "FAILS",
            "nameLocation": "2543:5:198",
            "scope": 103473,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 103320,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2519:4:198",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 103324,
            "nodeType": "VariableDeclaration",
            "src": "2555:14:198",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "2567:2:198",
            "scope": 103473,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$119058",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 103323,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 103322,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 119058,
                "src": "2555:2:198"
              },
              "referencedDeclaration": 119058,
              "src": "2555:2:198",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$119058",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 103326,
            "nodeType": "VariableDeclaration",
            "src": "2575:23:198",
            "nodes": [],
            "constant": false,
            "functionSelector": "82f161ca",
            "mutability": "mutable",
            "name": "numCalls",
            "nameLocation": "2590:8:198",
            "scope": 103473,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 103325,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2575:7:198",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 103343,
            "nodeType": "FunctionDefinition",
            "src": "2605:82:198",
            "nodes": [],
            "body": {
              "id": 103342,
              "nodeType": "Block",
              "src": "2638:49:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 103336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103334,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103324,
                      "src": "2648:2:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$119058",
                        "typeString": "contract Vm"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 103335,
                      "name": "_vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103329,
                      "src": "2653:3:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$119058",
                        "typeString": "contract Vm"
                      }
                    },
                    "src": "2648:8:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$119058",
                      "typeString": "contract Vm"
                    }
                  },
                  "id": 103337,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:8:198"
                },
                {
                  "expression": {
                    "id": 103340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103338,
                      "name": "FAILS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103321,
                      "src": "2666:5:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 103339,
                      "name": "_fails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103331,
                      "src": "2674:6:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2666:14:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103341,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:14:198"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 103332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103329,
                  "mutability": "mutable",
                  "name": "_vm",
                  "nameLocation": "2620:3:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103343,
                  "src": "2617:6:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$119058",
                    "typeString": "contract Vm"
                  },
                  "typeName": {
                    "id": 103328,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 103327,
                      "name": "Vm",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119058,
                      "src": "2617:2:198"
                    },
                    "referencedDeclaration": 119058,
                    "src": "2617:2:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$119058",
                      "typeString": "contract Vm"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103331,
                  "mutability": "mutable",
                  "name": "_fails",
                  "nameLocation": "2630:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103343,
                  "src": "2625:11:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 103330,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2625:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2616:21:198"
            },
            "returnParameters": {
              "id": 103333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2638:0:198"
            },
            "scope": 103473,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103472,
            "nodeType": "FunctionDefinition",
            "src": "2693:1456:198",
            "nodes": [],
            "body": {
              "id": 103471,
              "nodeType": "Block",
              "src": "2823:1326:198",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 103365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 103361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 103357,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103349,
                                "src": "3010:2:198",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 103358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "3010:7:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 103359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3010:14:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 103360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3028:1:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3010:19:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 103364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 103362,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103349,
                            "src": "3033:2:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "307830303030303030303030303030303030303036333646366537333646366336353265366336663637",
                            "id": 103363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3039:42:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x000000000000000000636F6e736F6c652e6c6f67"
                          },
                          "src": "3033:48:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3010:71:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 103354,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103324,
                        "src": "3000:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 103356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118582,
                      "src": "3000:9:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 103366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:82:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103367,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:82:198"
                },
                {
                  "expression": {
                    "id": 103381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103368,
                      "name": "minGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103347,
                      "src": "3161:6:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 103372,
                              "name": "minGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103347,
                              "src": "3183:6:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "32353030",
                              "id": 103373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3191:4:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2500_by_1",
                                "typeString": "int_const 2500"
                              },
                              "value": "2500"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 103376,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3202:6:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    },
                                    "typeName": {
                                      "id": 103375,
                                      "name": "uint48",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3202:6:198",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint48_$",
                                      "typeString": "type(uint48)"
                                    }
                                  ],
                                  "id": 103374,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3197:4:198",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 103377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3197:12:198",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint48",
                                  "typeString": "type(uint48)"
                                }
                              },
                              "id": 103378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "3197:16:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_rational_2500_by_1",
                                "typeString": "int_const 2500"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 103371,
                            "name": "bound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              116855,
                              117005
                            ],
                            "referencedDeclaration": 116855,
                            "src": "3177:5:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 103379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3177:37:198",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 103370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3170:6:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 103369,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:6:198",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 103380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3170:45:198",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3161:54:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 103382,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:54:198"
                },
                {
                  "condition": {
                    "id": 103383,
                    "name": "FAILS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103321,
                    "src": "3229:5:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 103426,
                    "nodeType": "Block",
                    "src": "3389:332:198",
                    "statements": [
                      {
                        "expression": {
                          "id": 103424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 103401,
                            "name": "gas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103345,
                            "src": "3630:3:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 103405,
                                    "name": "gas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103345,
                                    "src": "3649:3:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    "id": 103416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      },
                                      "id": 103414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            },
                                            "id": 103411,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  },
                                                  "id": 103408,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 103406,
                                                    "name": "minGas",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 103347,
                                                    "src": "3656:6:198",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint64",
                                                      "typeString": "uint64"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "3634",
                                                    "id": 103407,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3665:2:198",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_64_by_1",
                                                      "typeString": "int_const 64"
                                                    },
                                                    "value": "64"
                                                  },
                                                  "src": "3656:11:198",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint64",
                                                    "typeString": "uint64"
                                                  }
                                                }
                                              ],
                                              "id": 103409,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "3655:13:198",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint64",
                                                "typeString": "uint64"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "hexValue": "3633",
                                              "id": 103410,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3671:2:198",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_63_by_1",
                                                "typeString": "int_const 63"
                                              },
                                              "value": "63"
                                            },
                                            "src": "3655:18:198",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          }
                                        ],
                                        "id": 103412,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3654:20:198",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "34305f303030",
                                        "id": 103413,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3677:6:198",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40000_by_1",
                                          "typeString": "int_const 40000"
                                        },
                                        "value": "40_000"
                                      },
                                      "src": "3654:29:198",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 103415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3686:4:198",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "3654:36:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 103419,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3697:6:198",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 103418,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3697:6:198",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 103417,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "3692:4:198",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 103420,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3692:12:198",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 103421,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "3692:16:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 103404,
                                  "name": "bound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    116855,
                                    117005
                                  ],
                                  "referencedDeclaration": 116855,
                                  "src": "3643:5:198",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 103422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3643:66:198",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 103403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3636:6:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 103402,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "3636:6:198",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 103423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3636:74:198",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3630:80:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 103425,
                        "nodeType": "ExpressionStatement",
                        "src": "3630:80:198"
                      }
                    ]
                  },
                  "id": 103427,
                  "nodeType": "IfStatement",
                  "src": "3225:496:198",
                  "trueBody": {
                    "id": 103400,
                    "nodeType": "Block",
                    "src": "3236:147:198",
                    "statements": [
                      {
                        "expression": {
                          "id": 103398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 103384,
                            "name": "gas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103345,
                            "src": "3320:3:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 103388,
                                    "name": "gas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103345,
                                    "src": "3339:3:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "id": 103389,
                                    "name": "minGas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103347,
                                    "src": "3344:6:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    "id": 103395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          },
                                          "id": 103392,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 103390,
                                            "name": "minGas",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 103347,
                                            "src": "3353:6:198",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "3634",
                                            "id": 103391,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3362:2:198",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_64_by_1",
                                              "typeString": "int_const 64"
                                            },
                                            "value": "64"
                                          },
                                          "src": "3353:11:198",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint64",
                                            "typeString": "uint64"
                                          }
                                        }
                                      ],
                                      "id": 103393,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3352:13:198",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "3633",
                                      "id": 103394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3368:2:198",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_63_by_1",
                                        "typeString": "int_const 63"
                                      },
                                      "value": "63"
                                    },
                                    "src": "3352:18:198",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 103387,
                                  "name": "bound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    116855,
                                    117005
                                  ],
                                  "referencedDeclaration": 116855,
                                  "src": "3333:5:198",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 103396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3333:38:198",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 103386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3326:6:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 103385,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "3326:6:198",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 103397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3326:46:198",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3320:52:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 103399,
                        "nodeType": "ExpressionStatement",
                        "src": "3320:52:198"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103431,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103349,
                        "src": "3751:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103432,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103351,
                        "src": "3755:5:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 103433,
                        "name": "minGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103347,
                        "src": "3762:6:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 103434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3770:5:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 103428,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103324,
                        "src": "3731:2:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$119058",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 103430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectCallMinGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118866,
                      "src": "3731:19:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint64,bytes memory) external"
                      }
                    },
                    "id": 103435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:45:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103436,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:45:198"
                },
                {
                  "assignments": [
                    103438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103438,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3791:7:198",
                      "nodeType": "VariableDeclaration",
                      "scope": 103471,
                      "src": "3786:12:198",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 103437,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3786:4:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103454,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 103441,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3828:3:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 103442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3828:10:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103443,
                        "name": "gas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103345,
                        "src": "3852:3:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 103444,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103351,
                        "src": "3869:5:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103447,
                                "name": "SafeCall_Succeeds_Invariants",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103239,
                                "src": "3928:28:198",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeCall_Succeeds_Invariants_$103239_$",
                                  "typeString": "type(contract SafeCall_Succeeds_Invariants)"
                                }
                              },
                              "id": 103448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "performSafeCallMinGas",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 103238,
                              "src": "3928:50:198",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_uint64_$returns$__$",
                                "typeString": "function SafeCall_Succeeds_Invariants.performSafeCallMinGas(address,uint64) payable"
                              }
                            },
                            "id": 103449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3928:59:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 103450,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103349,
                            "src": "4005:2:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 103451,
                            "name": "minGas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103347,
                            "src": "4025:6:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "expression": {
                            "id": 103445,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3888:3:198",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 103446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3888:22:198",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 103452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3888:157:198",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 103439,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43435,
                        "src": "3801:8:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$43435_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 103440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43389,
                      "src": "3801:13:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 103453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3801:254:198",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3786:269:198"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 103457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 103455,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103438,
                      "src": "4070:7:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 103456,
                      "name": "FAILS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103321,
                      "src": "4081:5:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4070:16:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103461,
                  "nodeType": "IfStatement",
                  "src": "4066:32:198",
                  "trueBody": {
                    "expression": {
                      "id": 103459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4088:10:198",
                      "subExpression": {
                        "id": 103458,
                        "name": "numCalls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103326,
                        "src": "4088:8:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 103460,
                    "nodeType": "ExpressionStatement",
                    "src": "4088:10:198"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 103466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 103463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4112:6:198",
                      "subExpression": {
                        "id": 103462,
                        "name": "FAILS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103321,
                        "src": "4113:5:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 103465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4122:8:198",
                      "subExpression": {
                        "id": 103464,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103438,
                        "src": "4123:7:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4112:18:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103470,
                  "nodeType": "IfStatement",
                  "src": "4108:34:198",
                  "trueBody": {
                    "expression": {
                      "id": 103468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4132:10:198",
                      "subExpression": {
                        "id": 103467,
                        "name": "numCalls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103326,
                        "src": "4132:8:198",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 103469,
                    "nodeType": "ExpressionStatement",
                    "src": "4132:10:198"
                  }
                }
              ]
            },
            "functionSelector": "e0f8035b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performSafeCallMinGas",
            "nameLocation": "2702:21:198",
            "parameters": {
              "id": 103352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103345,
                  "mutability": "mutable",
                  "name": "gas",
                  "nameLocation": "2740:3:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103472,
                  "src": "2733:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 103344,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2733:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103347,
                  "mutability": "mutable",
                  "name": "minGas",
                  "nameLocation": "2760:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103472,
                  "src": "2753:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 103346,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103349,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2784:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103472,
                  "src": "2776:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2776:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103351,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2802:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 103472,
                  "src": "2796:11:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 103350,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2796:5:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2723:90:198"
            },
            "returnParameters": {
              "id": 103353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2823:0:198"
            },
            "scope": 103473,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 103318,
              "name": "StdUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117503,
              "src": "2504:8:198"
            },
            "id": 103319,
            "nodeType": "InheritanceSpecifier",
            "src": "2504:8:198"
          }
        ],
        "canonicalName": "SafeCaller_Actor",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          103473,
          117503
        ],
        "name": "SafeCaller_Actor",
        "nameLocation": "2484:16:198",
        "scope": 103474,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 198
}